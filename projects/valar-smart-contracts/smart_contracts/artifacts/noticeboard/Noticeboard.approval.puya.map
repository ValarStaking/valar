{
  "version": 3,
  "sources": [
    "../../helpers/common.py",
    "../../noticeboard/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgeA;;;AAKQ;;AAAmB;;AAAnB;AAE4C;;AAAT;AAAnC;;AAAA;;AAAA;AAE4D;;AAAT;AAAnD;;AAAA;AAAA;AACA;;AAAA;AAAA;AAC6E;;AAAT;AAApE;;AAAA;AAAA;AAEA;AAAa;;;AAAb;AAEA;;AAAkB;AAAlB;AACA;;AAAkB;AAAlB;AAG8C;;AAAT;AAC7B;;AAFR;;AAAA;AAMQ;;AAFR;AAAA;;AAnYR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAiZK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAjZL;;;AAAA;AAiZK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAoBA;;AAAA;AAAA;AAAA;;AAAA;AAlcL;;;AAAA;AAkcK;;;AAAA;AAAA;AA8BA;;AAAA;AAAA;AAAA;;AAAA;AAheL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAgeK;;;AAAA;AAAA;AAmDA;;AAAA;AAAA;AAAA;;AAAA;AAnhBL;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmhBK;;;AAAA;AAAA;AAoCA;;AAAA;AAAA;AAAA;;AAAA;AAvjBL;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAujBK;;;AAAA;AAAA;AAgCA;;AAAA;AAAA;AAAA;;AAAA;AAvlBL;;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAulBK;;;AAAA;AAAA;AAyCA;;AAAA;AAAA;AAAA;;AAAA;AAhoBL;;;AAAA;AAgoBK;;;AAAA;AAAA;AAiCA;;AAAA;AAAA;AAAA;;AAAA;AAjqBL;;;AAAA;;;AAAA;AAiqBK;;;AAAA;AAAA;AA8BA;;AAAA;AAAA;AAAA;;AAAA;AA/rBL;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AA+rBK;;;AAAA;AAAA;AAiCA;;AAAA;AAAA;AAAA;;AAAA;AAhuBL;;;AAAA;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAguBK;;;AAAA;AAAA;AA4CA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcA;;AAAA;AAAA;AAAA;;AAAA;AA1xBL;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0xBK;;;AAAA;AAAA;AA4EA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAwDA;;AAAA;AAAA;AAAA;;AAAA;AA95BL;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA85BK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgFA;;AAAA;AAAA;AAAA;;AAAA;AA9+BL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;AA8+BK;;;AAAA;AAAA;AAgDA;;AAAA;AAAA;AAAA;;AAAA;AA9hCL;;;AAAA;AAAA;;AAAA;;;AAAA;AA8hCK;;;AAAA;AAAA;AA0CA;;AAAA;AAAA;AAAA;;AAAA;AAxkCL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAwkCK;;;AAAA;AAAA;AAqCA;;AAAA;AAAA;AAAA;;AAAA;AA7mCL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AA6mCK;;;AAAA;AAAA;AAoCA;;AAAA;AAAA;AAAA;;AAAA;AAjpCL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAipCK;;;AAAA;AAAA;AAqHA;;AAAA;AAAA;AAAA;;AAAA;AAtwCL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAswCK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwCA;;AAAA;AAAA;AAAA;;AAAA;AA9yCL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AA8yCK;;;AAAA;AAAA;AAwCA;;AAAA;AAAA;AAAA;;AAAA;AAt1CL;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAs1CK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2HA;;AAAA;AAAA;AAAA;;AAAA;AAj9CL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAi9CK;;;AAAA;AAAA;AA4CA;;AAAA;AAAA;AAAA;;AAAA;AA7/CL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA6/CK;;;AAAA;AAAA;AAgDA;;AAAA;AAAA;AAAA;;AAAA;AA7iDL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA6iDK;;;AAAA;AAAA;AAgDA;;AAAA;AAAA;AAAA;;AAAA;AA7lDL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AA6lDK;;;AAAA;AAAA;AAoDA;;AAAA;AAAA;AAAA;;AAAA;AAjpDL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAipDK;;;AAAA;AAAA;AA+CA;;AAAA;AAAA;AAAA;;AAAA;AAhsDL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAgsDK;;;AAAA;AAAA;AA+CA;;AAAA;AAAA;AAAA;;AAAA;AA/uDL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA+uDK;;;AAAA;AAAA;AA8CA;;AAAA;AAAA;AAAA;;AAAA;AA7xDL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA6xDK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;;AAAA;AAAA;AAAA;;AAAA;AA10DL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA00DK;;;AAAA;AAAA;AA8CA;;AAAA;AAAA;AAAA;;AAAA;AAx3DL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAw3DK;;;AAAA;AAAA;AA2CA;;AAAA;AAAA;AAAA;;AAAA;AAn6DL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAm6DK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoDA;;AAAA;AAAA;AAAA;;AAAA;AAv9DL;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAu9DK;;;AAAA;AAAA;AAmDA;;AAAA;AAAA;AAAA;;AAAA;AA1gEL;;;AAAA;AA0gEK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;AAAA;AAAA;AAAA;;AAAA;AAzhEL;;;AAyhEK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzhEL;AAAA;AAiZA;;;AAoBQ;;AAAA;;AAAA;AAEA;;AAAmB;;AAAnB;AAGA;AAAa;AAAb;AAEmB;;AAAZ;AAAP;AAER;;;AASe;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEI;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAA;;;AACA;;AAAc;;AAAd;AADA;;;;;;;;AADJ;AAMA;AAAa;;;AAAb;AAEA;AAER;;;AAiBe;AAAA;AAAA;AAAA;AAAc;;;AAAd;AAAP;AAEI;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAA;;;AACA;;AAAc;;AAAd;AADA;;;;;;;;AADJ;AAKA;;AAAA;;AAAA;AAGA;AAAa;;AAAb;AAEA;AAER;;;AA0Be;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEI;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAA;;;AACA;;AAAc;;AAAd;AADA;;;;;;;;AADJ;AAKA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAGO;;AAAA;;;AAAmC;;;;;;;;;;AAAnC;AAAP;AAEA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAEO;;AAAA;;;AAA0C;;AAA1C;AAAA;;AAAA;AAAP;AAEiD;AAA1C;AAAA;AAAP;AACA;;AAAA;;AAAA;AAGA;AAAa;;AAAb;AAEA;AAER;;;AAiBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAGO;;AAAA;;AAAgB;;AAAhB;AAAP;AACA;;AAAkB;;AAGlB;AACe;;AAAA;;;AACK;;AAAA;;;AACH;;AAAA;;;AAAA;AACD;;AAAA;;;AAAA;AACQ;;AAAA;;;AAAA;AACF;;AAAA;;;;;;;;;;;;;;;AANtB;;;;;;AAAA;AAUA;AAER;;;AAiBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAGO;;AAAA;;AAAgB;;AAAhB;AAAP;AACO;;AAAA;;AAAc;;AAAd;AAAP;AAGA;AAEmB;;AACF;;;;;;;;;AAHjB;;;;AAAA;;;AAAA;AAMA;AAER;;;AAqBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AACO;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEU;;AAAA;;AAAA;AAElB;;AAAA;;;AAEmB;;AAAA;;AAAA;;AAAA;;AAAP;AAEJ;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAEU;;AAAA;;AAAA;AAGH;;AAAA;;AAAgB;;AAAhB;AAAP;AACA;;AAAiB;AACV;;AAAA;;AAAA;AAAP;AAEA;AAER;;;AAce;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAER;;AAAA;;;AAEgC;;AAAd;;AAAA;;AAAA;AACN;AAEmB;AAAA;;AAAA;AAAA;;;;;;;;;AAFnB;;;;AAAA;;;AAAA;;;;AAMM;;AAAA;;AAAA;AAA6C;;AAAA;;AAAA;AAA7C;AACN;AACa;AAAA;;AAAA;AAAA;;;;;AADb;;;AAAA;;;AAAA;AAKJ;AAER;;;AAiBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAEO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEG;;AAAc;;AAAd;AAAX;;;AACmB;;AAAA;;AAAA;AAAP;;;;AACC;;AAAc;;AAAd;AAAb;AACmB;;AAAA;;AAAA;AAAP;AAIJ;AAER;;;AAoBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAEO;AAAA;AAAA;AAAA;AAAc;AAAd;AAAP;AAEG;;AAAc;;AAAd;AAAX;;;AACY;;AAAA;;AAAA;;AAAA;;;;AACC;;AAAc;;AAAd;AAAb;AACY;;AAAA;;AAAA;;AAAA;AAIJ;AAER;;;AAuBe;;AAAc;AAAA;;AAAA;AAAA;AAAd;AAAP;AAEO;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEO;;;AAAA;AAAJ;;;AACW;;AAAA;;AAAA;AAGV;;AAAA;;AAAA;AAAA;;AAAA;AAEU;;AAAA;;AAAA;AAGH;;AAAA;;AAAgB;;AAAhB;AAAP;AACA;AAAkB;AACX;;AAAA;;AAAA;AAAP;;;;AAEqB;;AAAA;;AAAA;AAAd;AAAP;AAEJ;AAgBR;;;;;;;;AAoBe;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEU;;AAAA;;AAAA;AAGU;;AAApB;AACO;AAAA;;AAAA;AAAP;AAGG;;AAAmB;AAAnB;AAAX;;;AACuB;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAX;;AAC8B;;AAA9B;;AAA8B;;AAC9B;;;;;AACC;;AAAmB;;AAAnB;AAAb;AACuB;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAX;;AAC8B;;AAA9B;;AAA8B;;AAC9B;;AAKD;AAAA;;AAAA;AAAA;AAAA;;;AAAqC;;AAArC;AAAX;;;AACqC;;AACA;AAAzB;;AACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;AAEY;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAZ;AAAA;;AACyB;;AAAzB;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAEA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAA6B;AAA7B;AADkB;AAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAUmD;;AAAT;AALvB;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMH;;;;;;;;;;AANG;AAAnB;;AAAA;AAAA;AASU;;AAAA;;AAAA;AAGH;;AAAA;;AAAgB;;AAAhB;AAAP;AACkB;;AAAA;AAAlB;;AAAiB;AACV;;AAAA;;AAAA;AAAP;AAEA;AAER;;;AAQkB;;AAAA;;AAAA;AAEU;;AAApB;;AAEY;AAAA;AAAA;;;AAAZ;AAAA;;AACY;AAAA;AAAA;AAAA;;;AAAZ;;AAEO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAP;AAG6C;AAAA;AAAA;;;AAA7C;AAC6B;;AAA1B;AAAA;;;AAAmD;;AAA0B;;AAA1B;AAAnD;;;AAEC;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAoC;;AAApC;;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAmC;;AAAnC;;AAAA;;;;AACC;;AAA0B;;AAA1B;AAAb;;;AAEY;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAA+C;;AAA/C;;AAAA;;;;AACC;;AAA0B;;AAA1B;AAAb;;;AAEY;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAA+C;;AAA/C;;AAAA;;;;AAGA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAA6B;AAA7B;AADkB;AAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAIO;;AAAA;AAAA;AAAP;AAEU;;AAAA;;AAAA;AAGV;;AAAA;AAAmB;AACnB;;;;;AAAA;;;AAAA;;;AAAA;AAKA;AAMR;;;;AAwBe;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEyB;;AAAzB;AACO;AAAA;AAAA;;;AAAoC;AAApC;AAAP;AAEU;;AAAA;;AAAA;AAIP;;AAAA;AAAA;AAA2B;;AAA3B;AAAX;;;AAEgB;;AAA0B;AAAW;;AAArC;AAAA;;AACwC;;AAAA;AAAA;AAA2B;;AAA3B;AAAxC;;AAA0B;;AAA1B;;AAAA;;;;AAIqC;;AAAA;AAAA;AAArC;;AAA0B;AAA1B;;AAAA;AAAA;;AACA;;AAGiB;AAZd;;;AAAA;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAYc;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAWzB;AAAsB;AAEtB;;AAAA;;AAAA;;AAAA;;;AAGoB;;AACpB;AACa;AAAA;;AAAA;;;;;;;AADb;;;AAAA;;;AAAA;AAQO;;AAAA;;AAAgB;;AAAhB;AAAP;AACU;;AAAA;;AAAA;AAEN;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AACC;AAAA;;AAAA;AADD;AAAA;AAIG;;AAAA;;AAAA;AAAP;AAEA;;AAAA;AAilCR;;;AAae;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAP;AACA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAEI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAsC;AAAtC;AAD2B;AAA/B;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAIA;AAlmCR;;;AA8BiC;;AACzB;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGsB;AAAA;;AAAA;AAAA;AAAA;;;AAAf;;AAAA;AAAA;AAAA;;AAAA;AAAP;AAGU;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AASV;AA+gCR;;;AAae;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAP;AACO;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAP;AAEA;AA7hCR;;;AAmBiC;;AACzB;AAAA;;AAAA;;AAA2D;AAA3D;;;AAEU;;AAAA;;AAAA;AAGA;AAAA;;;;;;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAMuB;;AAAA;AAAjC;;AAAA;AAAA;;AAAA;;;AAEU;;AAAA;;AAAA;AAEV;AAEW;;;;;AAFX;;;AAAA;;;AAAA;AAKA;AA4gCR;;;AAWe;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAP;AACgD;AAAZ;AAApC;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAEI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAsC;AAAtC;AAD2B;AAA/B;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAIA;AA3hCR;;;AAwBQ;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAG2B;;AACjB;;;;;AAAA;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAOV;AAER;;;AAqBe;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEyB;;AACzB;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGU;;;;;AAAA;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAOV;AAER;;;;;;;AA6Ce;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAEyB;;AAAzB;AACA;;AAAA;;AAA2D;AAA3D;;;AAG0B;AAAA;;AAAA;AAAA;AAAnB;;AAAA;AAAP;AACA;;AAAA;;;AAAA;;AACA;;AAAA;;;AAAA;;AACA;;AAAA;;;AAAA;;AAGA;;AAA8C;AAAnC;AACX;AACkB;AAAf;AAAX;;;AAGyB;;AAAA;;AAAA;AAGG;;;;;;;AAJG;;;AAAA;;;AAIH;AAGZ;;AAAA;AAAA;AAAA;;;;;AAHY;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAQA;;AAAA;AAAA;AAA0B;;AAAjC;AAAuC;AAAvC;AAAT;;AACW;AAAP;;AAAO;;AAAA;;AAAA;AAAvB;;;AACgB;;AAAA;AAAe;;;AAAN;AAAT;;AACU;;AAAS;AAAT;AAAP;AAAnB;;;AACiC;;AAAA;AAAA;AAAb;;AAAa;;;;AAEA;;;AACV;;AAAP;;AAAA;AAAA;;AAAA;;AAAO;AACc;AAGjB;AAAA;AACA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;AAJiB;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAPd;;AAAA;AAAA;AAAA;;;;;AAeS;;;;;AAAA;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAOjB;;AAAA;;AAAgB;;AAAhB;AAAP;AAEa;;AAAA;;AAAA;AACF;;AAAA;;AAAA;;AAAA;AAGD;;;;;AALM;;;AAAA;;;AAKN;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAaV;AAi2BR;;;AAMe;;AAAA;;;AAAkC;AAAA;;AAAA;AAAA;AAAA;;;AAAlC;AAAP;AACO;;AAAA;;;AAAkC;AAAA;;AAAA;AAAA;AAAA;;;AAAlC;AAAP;AAEA;;AAAA;AAER;;;AAOe;;AAAA;;;AAAA;AAAA;AAAiC;;;;AAAjC;AAAP;AACwC;AAAA;;AAAA;AAAA;AAAA;;;AAAjC;AAAA;AAAA;AAAP;AAGyB;;AAAA;;;AAAA;AAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACN;AAAA;AAAA;AAAA;;;AAAA;AAAA;;AAAA;;AAAA;AAAP;AAGO;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AAAP;AACO;;AAAA;;;AAA6B;;AAAA;;;AAA7B;AAAP;AACO;;AAAA;;;AAAyB;AAAA;;;AAAzB;AAAP;AAEA;;AAAA;AAER;;;AAMe;;AAAA;;;AAAyB;AAAA;;AAAA;AAAA;AAAA;;;AAAzB;;AAAA;AAAP;AACgC;AAAA;;AAAA;AAAA;AAAA;;;AAAzB;AAAP;AAEA;;AAAA;AAx4BR;;;AA2BiC;;AACzB;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGkB;AAGd;;AAAA;;;;;AAHc;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOlB;AAER;;;AAsBiC;;AACzB;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGU;AAGN;;AAAA;;;;;AAHM;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAOV;AAOR;;;;;;;;;;AAuDe;AAAA;AAAA;AAAA;AAAc;;AAAd;AAAP;AAE2B;;AAA3B;AACO;AAAA;AAAA;;;AAAsC;;AAAtC;AAAP;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAE0B;AAAA;;AAAA;AAAA;AAAnB;;AAAA;AAAP;AAEA;;AAA4C;;AAAnC;AAAT;AACoB;AAAA;;AAAA;AAAA;AAAb;AAAP;AAGO;;AAAA;;AAAoB;;AAApB;AAAP;AAGa;;AAAA;;AAAA;AACF;;AAAA;;AAAe;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAf;AAIR;;AAAA;;AAAA;AAAY;AAAZ;AAAX;;;AACmB;;AAAA;;AAAgB;;AAAhB;AAAP;AAES;AAAA;;AACI;;AAAA;;AAAA;AAAA;AAAA;;AACF;;AAAA;;AAAA;;AAAA;AAAA;;AAHX;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;;;;;AAKC;;AAAY;;AAAZ;AAAb;AACmB;;AAAA;;AAAsB;;AAAtB;AAAP;AAES;;AAAA;;AACM;;AAAA;;AAAA;;AAAA;AAAA;;AACI;;AAAA;;AAAA;AAAA;AAAA;;AACF;;AAAA;;AAAA;;AAAA;AAAA;;AAJjB;AAAA;;AAAA;AAAA;;;;AAUkB;;AAAnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAX;;;AAEkC;;AAAA;AAAA;AAAA;;AAAA;;;;;;;;AAEC;;AAAvB;;AACsB;;;;;;;;;;;;;;;;;;AAAA;;AAMJ;;;;;;;;;AApCb;;;AADS;;;AA8Cd;;;;;AAAA;;;;;;;;;;;AAAA;;;;;;;;;;;AAAA;;;;;;;;;;;AAAA;;;;;;;;;;;AAAA;;;;;;;;;;;AArCc;;;AA4BI;AAIlB;;AAAA;AACA;;AAAA;;;;;AALkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAatB;AAAA;;AAAA;;AAAA;;;AAEA;;AAAA;AAER;;;AA4BmC;;AAC3B;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGU;;;;;;;;;AAAA;;;;;;;;;;AAIN;;;AAJM;;;AAAA;;;AAAA;AAQV;AAER;;;AAiCQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AD39BR;;;AAiBO;;AAAA;AAAuB;;AAAvB;AAAP;;;AACQ;;;;;AAEW;;;;;;;AAFX;;;AAAA;;;AAAA;AAMJ;ACq8BJ;;;AAgCQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAIe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAER;;;AAmCQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;AAEE;;;;;;;;;;AAFF;;;;;;;;;;AAGX;;;;;;;AAHW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAER;;;AA+BQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAIe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAER;;;AAgCQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAER;;;AA+BQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAER;;;AAgCQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMf;AAER;;;AA+BQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;;;;;;;;;AAAA;;;;;;;;AAEX;;;AAFW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAER;;;AA4BmC;;AAC3B;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGU;;;;;;;;;AAAA;;;;;;;;;;AAGN;;;AAHM;;;AAAA;;;AAAA;AAOV;AAER;;;AAmCmC;;AAC3B;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAG6B;;;;;;;;;AAAA;;;;;;;;;;;AAGzB;;;AAHyB;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOM;;AAAA;AAAnC;;AAAA;AAAA;;AAAA;;;AAEA;AAER;;;AA+BQ;;AAAA;;AAAA;;AAA6D;;AAA7D;;;AAEA;;AAAA;;AAAA;;AAA2D;AAA3D;;;AAGe;AAEX;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;;;;;;;AAHW;;;;;;;;;;;;;AAIX;;;AAJW;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAQD;AAAA;;;AAAwB;AAAA;;;AAAtC;;;AAEA;AAKR;;;AAae;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAP;AAER;;;AAae;;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.approval_program",
      "params": {},
      "block": "smart_contracts.noticeboard.contract.Noticeboard.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 6 8 880 956 4096"
    },
    "13": {
      "op": "bytecblock 0x76616c5f 0x151f7c75 0x7374617465 0x01 \"pla_manager\" 0x64656c5f 0x76 0x64 \"noticeboard_fees\" 0x02 0x74635f736861323536 \"noticeboard_terms_timing\" \"noticeboard_terms_node\" 0x04 0x646c6c5f5f76616c 0x646c6c5f5f64656c 0x61737365745f 0x706172746e65725f \"app_id_old\" \"app_id_new\""
    },
    "189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "191": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "194": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.__init__",
      "op": "callsub __init__"
    },
    "197": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "200": {
      "op": "return",
      "stack_out": []
    },
    "201": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "204": {
      "op": "bytec 4 // \"pla_manager\""
    },
    "206": {
      "op": "global ZeroAddress",
      "defined_out": [
        "\"pla_manager\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"pla_manager\"",
        "new_state_value%0#0"
      ]
    },
    "208": {
      "op": "app_global_put",
      "stack_out": []
    },
    "209": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32"
      ],
      "stack_out": [
        "32"
      ]
    },
    "211": {
      "op": "bzero",
      "defined_out": [
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "212": {
      "op": "bytec 10 // \"tc_sha256\"",
      "defined_out": [
        "\"tc_sha256\"",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "\"tc_sha256\""
      ]
    },
    "214": {
      "op": "dig 1",
      "defined_out": [
        "\"tc_sha256\"",
        "new_state_value%1#0",
        "new_state_value%1#0 (copy)"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "\"tc_sha256\"",
        "new_state_value%1#0 (copy)"
      ]
    },
    "216": {
      "op": "app_global_put",
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "217": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "40"
      ]
    },
    "219": {
      "op": "bzero",
      "defined_out": [
        "new_state_value%1#0",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "new_state_value%2#0"
      ]
    },
    "220": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\"",
        "new_state_value%1#0",
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "new_state_value%2#0",
        "\"noticeboard_fees\""
      ]
    },
    "222": {
      "op": "swap",
      "stack_out": [
        "new_state_value%1#0",
        "\"noticeboard_fees\"",
        "new_state_value%2#0"
      ]
    },
    "223": {
      "op": "app_global_put",
      "stack_out": [
        "new_state_value%1#0"
      ]
    },
    "224": {
      "op": "bytec 11 // \"noticeboard_terms_timing\"",
      "defined_out": [
        "\"noticeboard_terms_timing\"",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "new_state_value%1#0",
        "\"noticeboard_terms_timing\""
      ]
    },
    "226": {
      "op": "swap",
      "stack_out": [
        "\"noticeboard_terms_timing\"",
        "new_state_value%1#0"
      ]
    },
    "227": {
      "op": "app_global_put",
      "stack_out": []
    },
    "228": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24"
      ],
      "stack_out": [
        "24"
      ]
    },
    "230": {
      "op": "bzero",
      "defined_out": [
        "new_state_value%4#0"
      ],
      "stack_out": [
        "new_state_value%4#0"
      ]
    },
    "231": {
      "op": "bytec 12 // \"noticeboard_terms_node\"",
      "defined_out": [
        "\"noticeboard_terms_node\"",
        "new_state_value%4#0"
      ],
      "stack_out": [
        "new_state_value%4#0",
        "\"noticeboard_terms_node\""
      ]
    },
    "233": {
      "op": "swap",
      "stack_out": [
        "\"noticeboard_terms_node\"",
        "new_state_value%4#0"
      ]
    },
    "234": {
      "op": "app_global_put",
      "stack_out": []
    },
    "235": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\""
      ],
      "stack_out": [
        "\"state\""
      ]
    },
    "236": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "\"state\"",
        "0x00"
      ],
      "stack_out": [
        "\"state\"",
        "0x00"
      ]
    },
    "239": {
      "op": "app_global_put",
      "stack_out": []
    },
    "240": {
      "op": "bytec 18 // \"app_id_old\"",
      "defined_out": [
        "\"app_id_old\""
      ],
      "stack_out": [
        "\"app_id_old\""
      ]
    },
    "242": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"app_id_old\"",
        "0"
      ],
      "stack_out": [
        "\"app_id_old\"",
        "0"
      ]
    },
    "243": {
      "op": "app_global_put",
      "stack_out": []
    },
    "244": {
      "op": "bytec 19 // \"app_id_new\"",
      "defined_out": [
        "\"app_id_new\""
      ],
      "stack_out": [
        "\"app_id_new\""
      ]
    },
    "246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"app_id_new\"",
        "0"
      ]
    },
    "247": {
      "op": "app_global_put",
      "stack_out": []
    },
    "248": {
      "op": "pushint 72 // 72",
      "defined_out": [
        "72"
      ],
      "stack_out": [
        "72"
      ]
    },
    "250": {
      "op": "bzero",
      "defined_out": [
        "new_state_value%5#0"
      ],
      "stack_out": [
        "new_state_value%5#0"
      ]
    },
    "251": {
      "op": "bytec 14 // 0x646c6c5f5f76616c",
      "defined_out": [
        "0x646c6c5f5f76616c",
        "new_state_value%5#0"
      ],
      "stack_out": [
        "new_state_value%5#0",
        "0x646c6c5f5f76616c"
      ]
    },
    "253": {
      "op": "dig 1",
      "defined_out": [
        "0x646c6c5f5f76616c",
        "new_state_value%5#0",
        "new_state_value%5#0 (copy)"
      ],
      "stack_out": [
        "new_state_value%5#0",
        "0x646c6c5f5f76616c",
        "new_state_value%5#0 (copy)"
      ]
    },
    "255": {
      "op": "app_global_put",
      "stack_out": [
        "new_state_value%5#0"
      ]
    },
    "256": {
      "op": "bytec 15 // 0x646c6c5f5f64656c",
      "defined_out": [
        "0x646c6c5f5f64656c",
        "new_state_value%5#0"
      ],
      "stack_out": [
        "new_state_value%5#0",
        "0x646c6c5f5f64656c"
      ]
    },
    "258": {
      "op": "swap",
      "stack_out": [
        "0x646c6c5f5f64656c",
        "new_state_value%5#0"
      ]
    },
    "259": {
      "op": "app_global_put",
      "stack_out": []
    },
    "260": {
      "retsub": true,
      "op": "retsub"
    },
    "261": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "264": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "266": {
      "op": "bz __puya_arc4_router___after_if_else@42",
      "stack_out": []
    },
    "269": {
      "op": "pushbytess 0x446dd830 0x2abf3efe 0xc19ec525 0x970c873a 0x9eb2d651 0x7baab6b0 0x6ff21dc6 0x500e2da8 0xbc4b0981 0x5abd6cc5 0x5a8d45e2 0x3172ca9d 0x8cac426c 0xcb7cac94 0xee92c643 0x2cf8d1bd 0x34b2cd03 0xc71c36e2 0x026acd05 0x561e219b 0xdf964d06 0x0c5307c5 0xb7675fdd 0xe5358d4c 0xd28e198f 0x07a8de8f 0xefb23084 0x4fb0604f 0x3174869d 0x83ecc470 0xa4b1ff9a 0x2ebe7679 0xd558b568 0xcdcb3428 0x766827ab 0x35f80859 0x29819511 // method \"noticeboard_deploy(uint64)uint64\", method \"noticeboard_suspend()void\", method \"noticeboard_migrate(uint64)void\", method \"noticeboard_set(account,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64),(uint64,uint64,uint64))void\", method \"noticeboard_key_reg((uint64,uint64,uint64,byte[32],byte[32],byte[64],address),pay)void\", method \"noticeboard_optin_asa(asset,pay)void\", method \"noticeboard_config_asset(uint64,(bool,uint64,uint64,uint64),pay)void\", method \"noticeboard_income(uint64)void\", method \"template_load_init(byte,uint64)void\", method \"template_load_data(byte,uint64,byte[])void\", method \"partner_config(address,(uint64,uint64),bool,pay)void\", method \"gas()void\", method \"user_create(byte[4],pay)void\", method \"user_delete()void\", method \"ad_create(uint64,pay)uint64\", method \"ad_config(application,uint64,address,bool,uint64)void\", method \"ad_delete(application,uint64)void\", method \"ad_ready(address,application,uint64,bool)void\", method \"ad_self_disclose(application,uint64,(byte[30],byte[60],byte[2],uint64,byte[20]))void\", method \"ad_terms(application,uint64,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64,uint64),(uint64,uint64),((uint64,uint64)[2]),(uint64,uint64),uint64,pay)void\", method \"ad_income(application,uint64,uint64)uint64\", method \"ad_asa_close(application,uint64,uint64)void\", method \"contract_create(address,uint64,uint64,address,application,uint64,uint64,byte[32],address,pay,txn)uint64\", method \"keys_confirm(application,uint64,address,application,uint64)void\", method \"keys_not_confirmed(address,application,uint64,address,application,uint64)void\", method \"keys_not_submitted(address,application,uint64,address,application,uint64)void\", method \"keys_submit(address,application,uint64,address,application,uint64,(uint64,uint64,uint64,byte[32],byte[32],byte[64],address))void\", method \"breach_limits(address,application,uint64,address,application,uint64)void\", method \"breach_pay(address,application,uint64,address,application,uint64)void\", method \"breach_suspended(address,application,uint64,address,application,uint64)void\", method \"contract_claim(address,application,uint64,address,application,uint64)(uint64,uint64,uint64)\", method \"contract_expired(address,application,uint64,address,application,uint64)void\", method \"contract_withdraw(application,uint64,address,application,uint64)void\", method \"contract_delete(application,uint64,address,application,uint64)(uint64,uint64)\", method \"contract_report_expiry_soon(address,application,uint64,address,application,uint64)void\", method \"get_noticeboard_asset(uint64)(bool,uint64,uint64,uint64)\", method \"get_noticeboard_user(address)(byte[4],byte[8],address,address,uint64[110],uint64)\""
    },
    "456": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(ad_asa_close(application,uint64,uint64)void)",
        "Method(ad_config(application,uint64,address,bool,uint64)void)",
        "Method(ad_create(uint64,pay)uint64)",
        "Method(ad_delete(application,uint64)void)",
        "Method(ad_income(application,uint64,uint64)uint64)",
        "Method(ad_ready(address,application,uint64,bool)void)",
        "Method(ad_self_disclose(application,uint64,(byte[30],byte[60],byte[2],uint64,byte[20]))void)",
        "Method(ad_terms(application,uint64,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64,uint64),(uint64,uint64),((uint64,uint64)[2]),(uint64,uint64),uint64,pay)void)",
        "Method(breach_limits(address,application,uint64,address,application,uint64)void)",
        "Method(breach_pay(address,application,uint64,address,application,uint64)void)",
        "Method(breach_suspended(address,application,uint64,address,application,uint64)void)",
        "Method(contract_claim(address,application,uint64,address,application,uint64)(uint64,uint64,uint64))",
        "Method(contract_create(address,uint64,uint64,address,application,uint64,uint64,byte[32],address,pay,txn)uint64)",
        "Method(contract_delete(application,uint64,address,application,uint64)(uint64,uint64))",
        "Method(contract_expired(address,application,uint64,address,application,uint64)void)",
        "Method(contract_report_expiry_soon(address,application,uint64,address,application,uint64)void)",
        "Method(contract_withdraw(application,uint64,address,application,uint64)void)",
        "Method(gas()void)",
        "Method(get_noticeboard_asset(uint64)(bool,uint64,uint64,uint64))",
        "Method(get_noticeboard_user(address)(byte[4],byte[8],address,address,uint64[110],uint64))",
        "Method(keys_confirm(application,uint64,address,application,uint64)void)",
        "Method(keys_not_confirmed(address,application,uint64,address,application,uint64)void)",
        "Method(keys_not_submitted(address,application,uint64,address,application,uint64)void)",
        "Method(keys_submit(address,application,uint64,address,application,uint64,(uint64,uint64,uint64,byte[32],byte[32],byte[64],address))void)",
        "Method(noticeboard_config_asset(uint64,(bool,uint64,uint64,uint64),pay)void)",
        "Method(noticeboard_deploy(uint64)uint64)",
        "Method(noticeboard_income(uint64)void)",
        "Method(noticeboard_key_reg((uint64,uint64,uint64,byte[32],byte[32],byte[64],address),pay)void)",
        "Method(noticeboard_migrate(uint64)void)",
        "Method(noticeboard_optin_asa(asset,pay)void)",
        "Method(noticeboard_set(account,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64),(uint64,uint64,uint64))void)",
        "Method(noticeboard_suspend()void)",
        "Method(partner_config(address,(uint64,uint64),bool,pay)void)",
        "Method(template_load_data(byte,uint64,byte[])void)",
        "Method(template_load_init(byte,uint64)void)",
        "Method(user_create(byte[4],pay)void)",
        "Method(user_delete()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(noticeboard_deploy(uint64)uint64)",
        "Method(noticeboard_suspend()void)",
        "Method(noticeboard_migrate(uint64)void)",
        "Method(noticeboard_set(account,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64),(uint64,uint64,uint64))void)",
        "Method(noticeboard_key_reg((uint64,uint64,uint64,byte[32],byte[32],byte[64],address),pay)void)",
        "Method(noticeboard_optin_asa(asset,pay)void)",
        "Method(noticeboard_config_asset(uint64,(bool,uint64,uint64,uint64),pay)void)",
        "Method(noticeboard_income(uint64)void)",
        "Method(template_load_init(byte,uint64)void)",
        "Method(template_load_data(byte,uint64,byte[])void)",
        "Method(partner_config(address,(uint64,uint64),bool,pay)void)",
        "Method(gas()void)",
        "Method(user_create(byte[4],pay)void)",
        "Method(user_delete()void)",
        "Method(ad_create(uint64,pay)uint64)",
        "Method(ad_config(application,uint64,address,bool,uint64)void)",
        "Method(ad_delete(application,uint64)void)",
        "Method(ad_ready(address,application,uint64,bool)void)",
        "Method(ad_self_disclose(application,uint64,(byte[30],byte[60],byte[2],uint64,byte[20]))void)",
        "Method(ad_terms(application,uint64,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64,uint64),(uint64,uint64),((uint64,uint64)[2]),(uint64,uint64),uint64,pay)void)",
        "Method(ad_income(application,uint64,uint64)uint64)",
        "Method(ad_asa_close(application,uint64,uint64)void)",
        "Method(contract_create(address,uint64,uint64,address,application,uint64,uint64,byte[32],address,pay,txn)uint64)",
        "Method(keys_confirm(application,uint64,address,application,uint64)void)",
        "Method(keys_not_confirmed(address,application,uint64,address,application,uint64)void)",
        "Method(keys_not_submitted(address,application,uint64,address,application,uint64)void)",
        "Method(keys_submit(address,application,uint64,address,application,uint64,(uint64,uint64,uint64,byte[32],byte[32],byte[64],address))void)",
        "Method(breach_limits(address,application,uint64,address,application,uint64)void)",
        "Method(breach_pay(address,application,uint64,address,application,uint64)void)",
        "Method(breach_suspended(address,application,uint64,address,application,uint64)void)",
        "Method(contract_claim(address,application,uint64,address,application,uint64)(uint64,uint64,uint64))",
        "Method(contract_expired(address,application,uint64,address,application,uint64)void)",
        "Method(contract_withdraw(application,uint64,address,application,uint64)void)",
        "Method(contract_delete(application,uint64,address,application,uint64)(uint64,uint64))",
        "Method(contract_report_expiry_soon(address,application,uint64,address,application,uint64)void)",
        "Method(get_noticeboard_asset(uint64)(bool,uint64,uint64,uint64))",
        "Method(get_noticeboard_user(address)(byte[4],byte[8],address,address,uint64[110],uint64))",
        "tmp%2#0"
      ]
    },
    "459": {
      "op": "match __puya_arc4_router___noticeboard_deploy_route@2 __puya_arc4_router___noticeboard_suspend_route@3 __puya_arc4_router___noticeboard_migrate_route@4 __puya_arc4_router___noticeboard_set_route@5 __puya_arc4_router___noticeboard_key_reg_route@6 __puya_arc4_router___noticeboard_optin_asa_route@7 __puya_arc4_router___noticeboard_config_asset_route@8 __puya_arc4_router___noticeboard_income_route@9 __puya_arc4_router___template_load_init_route@10 __puya_arc4_router___template_load_data_route@11 __puya_arc4_router___partner_config_route@12 __puya_arc4_router___gas_route@13 __puya_arc4_router___user_create_route@14 __puya_arc4_router___user_delete_route@15 __puya_arc4_router___ad_create_route@16 __puya_arc4_router___ad_config_route@17 __puya_arc4_router___ad_delete_route@18 __puya_arc4_router___ad_ready_route@19 __puya_arc4_router___ad_self_disclose_route@20 __puya_arc4_router___ad_terms_route@21 __puya_arc4_router___ad_income_route@22 __puya_arc4_router___ad_asa_close_route@23 __puya_arc4_router___contract_create_route@24 __puya_arc4_router___keys_confirm_route@25 __puya_arc4_router___keys_not_confirmed_route@26 __puya_arc4_router___keys_not_submitted_route@27 __puya_arc4_router___keys_submit_route@28 __puya_arc4_router___breach_limits_route@29 __puya_arc4_router___breach_pay_route@30 __puya_arc4_router___breach_suspended_route@31 __puya_arc4_router___contract_claim_route@32 __puya_arc4_router___contract_expired_route@33 __puya_arc4_router___contract_withdraw_route@34 __puya_arc4_router___contract_delete_route@35 __puya_arc4_router___contract_report_expiry_soon_route@36 __puya_arc4_router___get_noticeboard_asset_route@37 __puya_arc4_router___get_noticeboard_user_route@38",
      "stack_out": []
    },
    "535": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "536": {
      "retsub": true,
      "op": "retsub"
    },
    "537": {
      "block": "__puya_arc4_router___noticeboard_deploy_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "539": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "540": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "541": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "543": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "544": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "545": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "548": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "549": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_deploy",
      "op": "callsub noticeboard_deploy",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "552": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0x151f7c75"
      ]
    },
    "553": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%9#0"
      ]
    },
    "554": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "555": {
      "op": "log",
      "stack_out": []
    },
    "556": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "557": {
      "retsub": true,
      "op": "retsub"
    },
    "558": {
      "block": "__puya_arc4_router___noticeboard_suspend_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "560": {
      "op": "!",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "561": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "562": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "564": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "565": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_suspend",
      "op": "callsub noticeboard_suspend"
    },
    "568": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "569": {
      "retsub": true,
      "op": "retsub"
    },
    "570": {
      "block": "__puya_arc4_router___noticeboard_migrate_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "572": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "573": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "574": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "576": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "577": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "580": {
      "op": "btoi",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "581": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_migrate",
      "op": "callsub noticeboard_migrate",
      "stack_out": []
    },
    "584": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "585": {
      "retsub": true,
      "op": "retsub"
    },
    "586": {
      "block": "__puya_arc4_router___noticeboard_set_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "588": {
      "op": "!",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "589": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "590": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "592": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "593": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "596": {
      "op": "btoi",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "597": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "599": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%28#0"
      ]
    },
    "602": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0"
      ]
    },
    "605": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "608": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%27#0",
        "tmp%28#0",
        "tmp%29#0",
        "tmp%30#0",
        "tmp%31#0"
      ]
    },
    "611": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_set",
      "op": "callsub noticeboard_set",
      "stack_out": []
    },
    "614": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "615": {
      "retsub": true,
      "op": "retsub"
    },
    "616": {
      "block": "__puya_arc4_router___noticeboard_key_reg_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "618": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "619": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "620": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "622": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "623": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "626": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "628": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "tmp%37#0",
        "1"
      ]
    },
    "629": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "gtxn_idx%0#0"
      ]
    },
    "630": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "631": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "633": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "634": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "635": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%36#0",
        "gtxn_idx%0#0"
      ]
    },
    "636": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_key_reg",
      "op": "callsub noticeboard_key_reg",
      "stack_out": []
    },
    "639": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "640": {
      "retsub": true,
      "op": "retsub"
    },
    "641": {
      "block": "__puya_arc4_router___noticeboard_optin_asa_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "643": {
      "op": "!",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "644": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "645": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "647": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "648": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "651": {
      "op": "btoi",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "652": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "654": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "656": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "tmp%45#0",
        "1"
      ]
    },
    "657": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "gtxn_idx%1#0"
      ]
    },
    "658": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "659": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "661": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "662": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "663": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%44#0",
        "gtxn_idx%1#0"
      ]
    },
    "664": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_optin_asa",
      "op": "callsub noticeboard_optin_asa",
      "stack_out": []
    },
    "667": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "668": {
      "retsub": true,
      "op": "retsub"
    },
    "669": {
      "block": "__puya_arc4_router___noticeboard_config_asset_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "671": {
      "op": "!",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "672": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "673": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "675": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "676": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "679": {
      "op": "btoi",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "680": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0"
      ]
    },
    "683": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0"
      ]
    },
    "685": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "tmp%53#0",
        "1"
      ]
    },
    "686": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%2#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "gtxn_idx%2#0"
      ]
    },
    "687": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "gtxn_idx%2#0",
        "gtxn_idx%2#0 (copy)"
      ]
    },
    "688": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0"
      ]
    },
    "690": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "gtxn_idx%2#0",
        "gtxn_type%2#0",
        "pay"
      ]
    },
    "691": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0",
        "tmp%51#0",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "gtxn_idx%2#0",
        "gtxn_type_matches%2#0"
      ]
    },
    "692": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%51#0",
        "tmp%52#0",
        "gtxn_idx%2#0"
      ]
    },
    "693": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_config_asset",
      "op": "callsub noticeboard_config_asset",
      "stack_out": []
    },
    "696": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "697": {
      "retsub": true,
      "op": "retsub"
    },
    "698": {
      "block": "__puya_arc4_router___noticeboard_income_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "700": {
      "op": "!",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "701": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "702": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "704": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "705": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "708": {
      "op": "btoi",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "709": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_income",
      "op": "callsub noticeboard_income",
      "stack_out": []
    },
    "712": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "713": {
      "retsub": true,
      "op": "retsub"
    },
    "714": {
      "block": "__puya_arc4_router___template_load_init_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "716": {
      "op": "!",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "717": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "718": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "720": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "721": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "724": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%64#0",
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "tmp%65#0"
      ]
    },
    "727": {
      "op": "btoi",
      "defined_out": [
        "tmp%64#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%64#0",
        "tmp%66#0"
      ]
    },
    "728": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.template_load_init",
      "op": "callsub template_load_init",
      "stack_out": []
    },
    "731": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "732": {
      "retsub": true,
      "op": "retsub"
    },
    "733": {
      "block": "__puya_arc4_router___template_load_data_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "735": {
      "op": "!",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "736": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "737": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "739": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "740": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "743": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%71#0",
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%72#0"
      ]
    },
    "746": {
      "op": "btoi",
      "defined_out": [
        "tmp%71#0",
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%73#0"
      ]
    },
    "747": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%71#0",
        "tmp%73#0",
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%73#0",
        "tmp%74#0"
      ]
    },
    "750": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%71#0",
        "tmp%73#0",
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%71#0",
        "tmp%73#0",
        "tmp%75#0"
      ]
    },
    "753": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.template_load_data",
      "op": "callsub template_load_data",
      "stack_out": []
    },
    "756": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "757": {
      "retsub": true,
      "op": "retsub"
    },
    "758": {
      "block": "__puya_arc4_router___partner_config_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "760": {
      "op": "!",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "761": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "762": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "764": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "765": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "768": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%80#0",
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0"
      ]
    },
    "771": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ]
    },
    "774": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ]
    },
    "776": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "tmp%83#0",
        "1"
      ]
    },
    "777": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%3#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "gtxn_idx%3#0"
      ]
    },
    "778": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "gtxn_idx%3#0",
        "gtxn_idx%3#0 (copy)"
      ]
    },
    "779": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0"
      ]
    },
    "781": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "gtxn_idx%3#0",
        "gtxn_type%3#0",
        "pay"
      ]
    },
    "782": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0",
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "gtxn_idx%3#0",
        "gtxn_type_matches%3#0"
      ]
    },
    "783": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%80#0",
        "tmp%81#0",
        "tmp%82#0",
        "gtxn_idx%3#0"
      ]
    },
    "784": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.partner_config",
      "op": "callsub partner_config",
      "stack_out": []
    },
    "787": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "788": {
      "retsub": true,
      "op": "retsub"
    },
    "789": {
      "block": "__puya_arc4_router___gas_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "791": {
      "op": "!",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "792": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "793": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "795": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "796": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "797": {
      "retsub": true,
      "op": "retsub"
    },
    "798": {
      "block": "__puya_arc4_router___user_create_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "800": {
      "op": "!",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "801": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "802": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "804": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "805": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "808": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%92#0",
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "tmp%93#0"
      ]
    },
    "810": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%92#0",
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "tmp%93#0",
        "1"
      ]
    },
    "811": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%4#0",
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "gtxn_idx%4#0"
      ]
    },
    "812": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)",
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "gtxn_idx%4#0",
        "gtxn_idx%4#0 (copy)"
      ]
    },
    "813": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0"
      ]
    },
    "815": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay",
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "gtxn_idx%4#0",
        "gtxn_type%4#0",
        "pay"
      ]
    },
    "816": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0",
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0",
        "gtxn_idx%4#0",
        "gtxn_type_matches%4#0"
      ]
    },
    "817": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%92#0",
        "gtxn_idx%4#0"
      ]
    },
    "818": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.user_create",
      "op": "callsub user_create",
      "stack_out": []
    },
    "821": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "822": {
      "retsub": true,
      "op": "retsub"
    },
    "823": {
      "block": "__puya_arc4_router___user_delete_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "825": {
      "op": "!",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "826": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "827": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "829": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "830": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.user_delete",
      "op": "callsub user_delete"
    },
    "833": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "834": {
      "retsub": true,
      "op": "retsub"
    },
    "835": {
      "block": "__puya_arc4_router___ad_create_route@16",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%98#0"
      ],
      "stack_out": [
        "tmp%98#0"
      ]
    },
    "837": {
      "op": "!",
      "defined_out": [
        "tmp%99#0"
      ],
      "stack_out": [
        "tmp%99#0"
      ]
    },
    "838": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "839": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%100#0"
      ],
      "stack_out": [
        "tmp%100#0"
      ]
    },
    "841": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "842": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%102#0"
      ],
      "stack_out": [
        "tmp%102#0"
      ]
    },
    "845": {
      "op": "btoi",
      "defined_out": [
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0"
      ]
    },
    "846": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%103#0",
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "tmp%104#0"
      ]
    },
    "848": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%103#0",
        "tmp%104#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "tmp%104#0",
        "1"
      ]
    },
    "849": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%5#0",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "gtxn_idx%5#0"
      ]
    },
    "850": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "gtxn_idx%5#0",
        "gtxn_idx%5#0 (copy)"
      ]
    },
    "851": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0"
      ]
    },
    "853": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "gtxn_idx%5#0",
        "gtxn_type%5#0",
        "pay"
      ]
    },
    "854": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0",
        "tmp%103#0"
      ],
      "stack_out": [
        "tmp%103#0",
        "gtxn_idx%5#0",
        "gtxn_type_matches%5#0"
      ]
    },
    "855": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%103#0",
        "gtxn_idx%5#0"
      ]
    },
    "856": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_create",
      "op": "callsub ad_create",
      "defined_out": [
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0"
      ]
    },
    "859": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%105#0"
      ],
      "stack_out": [
        "tmp%105#0",
        "0x151f7c75"
      ]
    },
    "860": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%105#0"
      ]
    },
    "861": {
      "op": "concat",
      "defined_out": [
        "tmp%106#0"
      ],
      "stack_out": [
        "tmp%106#0"
      ]
    },
    "862": {
      "op": "log",
      "stack_out": []
    },
    "863": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "864": {
      "retsub": true,
      "op": "retsub"
    },
    "865": {
      "block": "__puya_arc4_router___ad_config_route@17",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%107#0"
      ],
      "stack_out": [
        "tmp%107#0"
      ]
    },
    "867": {
      "op": "!",
      "defined_out": [
        "tmp%108#0"
      ],
      "stack_out": [
        "tmp%108#0"
      ]
    },
    "868": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "869": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%109#0"
      ],
      "stack_out": [
        "tmp%109#0"
      ]
    },
    "871": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "872": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%111#0"
      ],
      "stack_out": [
        "tmp%111#0"
      ]
    },
    "875": {
      "op": "btoi",
      "defined_out": [
        "tmp%112#0"
      ],
      "stack_out": [
        "tmp%112#0"
      ]
    },
    "876": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%113#0"
      ],
      "stack_out": [
        "tmp%113#0"
      ]
    },
    "878": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%113#0",
        "tmp%114#0"
      ],
      "stack_out": [
        "tmp%113#0",
        "tmp%114#0"
      ]
    },
    "881": {
      "op": "btoi",
      "defined_out": [
        "tmp%113#0",
        "tmp%115#0"
      ],
      "stack_out": [
        "tmp%113#0",
        "tmp%115#0"
      ]
    },
    "882": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0"
      ],
      "stack_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0"
      ]
    },
    "885": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0",
        "tmp%117#0"
      ],
      "stack_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0",
        "tmp%117#0"
      ]
    },
    "888": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0",
        "tmp%117#0",
        "tmp%118#0"
      ],
      "stack_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0",
        "tmp%117#0",
        "tmp%118#0"
      ]
    },
    "891": {
      "op": "btoi",
      "defined_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0",
        "tmp%117#0",
        "tmp%119#0"
      ],
      "stack_out": [
        "tmp%113#0",
        "tmp%115#0",
        "tmp%116#0",
        "tmp%117#0",
        "tmp%119#0"
      ]
    },
    "892": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_config",
      "op": "callsub ad_config",
      "stack_out": []
    },
    "895": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "896": {
      "retsub": true,
      "op": "retsub"
    },
    "897": {
      "block": "__puya_arc4_router___ad_delete_route@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%120#0"
      ],
      "stack_out": [
        "tmp%120#0"
      ]
    },
    "899": {
      "op": "!",
      "defined_out": [
        "tmp%121#0"
      ],
      "stack_out": [
        "tmp%121#0"
      ]
    },
    "900": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "901": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%122#0"
      ],
      "stack_out": [
        "tmp%122#0"
      ]
    },
    "903": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "904": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%124#0"
      ],
      "stack_out": [
        "tmp%124#0"
      ]
    },
    "907": {
      "op": "btoi",
      "defined_out": [
        "tmp%125#0"
      ],
      "stack_out": [
        "tmp%125#0"
      ]
    },
    "908": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%126#0"
      ],
      "stack_out": [
        "tmp%126#0"
      ]
    },
    "910": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%126#0",
        "tmp%127#0"
      ],
      "stack_out": [
        "tmp%126#0",
        "tmp%127#0"
      ]
    },
    "913": {
      "op": "btoi",
      "defined_out": [
        "tmp%126#0",
        "tmp%128#0"
      ],
      "stack_out": [
        "tmp%126#0",
        "tmp%128#0"
      ]
    },
    "914": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_delete",
      "op": "callsub ad_delete",
      "stack_out": []
    },
    "917": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "918": {
      "retsub": true,
      "op": "retsub"
    },
    "919": {
      "block": "__puya_arc4_router___ad_ready_route@19",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%129#0"
      ],
      "stack_out": [
        "tmp%129#0"
      ]
    },
    "921": {
      "op": "!",
      "defined_out": [
        "tmp%130#0"
      ],
      "stack_out": [
        "tmp%130#0"
      ]
    },
    "922": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "923": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%131#0"
      ],
      "stack_out": [
        "tmp%131#0"
      ]
    },
    "925": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "926": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%133#0"
      ],
      "stack_out": [
        "tmp%133#0"
      ]
    },
    "929": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%133#0",
        "tmp%134#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%134#0"
      ]
    },
    "932": {
      "op": "btoi",
      "defined_out": [
        "tmp%133#0",
        "tmp%135#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%135#0"
      ]
    },
    "933": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%133#0",
        "tmp%136#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%136#0"
      ]
    },
    "935": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%133#0",
        "tmp%136#0",
        "tmp%137#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%136#0",
        "tmp%137#0"
      ]
    },
    "938": {
      "op": "btoi",
      "defined_out": [
        "tmp%133#0",
        "tmp%136#0",
        "tmp%138#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%136#0",
        "tmp%138#0"
      ]
    },
    "939": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%133#0",
        "tmp%136#0",
        "tmp%138#0",
        "tmp%139#0"
      ],
      "stack_out": [
        "tmp%133#0",
        "tmp%136#0",
        "tmp%138#0",
        "tmp%139#0"
      ]
    },
    "942": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_ready",
      "op": "callsub ad_ready",
      "stack_out": []
    },
    "945": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "946": {
      "retsub": true,
      "op": "retsub"
    },
    "947": {
      "block": "__puya_arc4_router___ad_self_disclose_route@20",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%140#0"
      ],
      "stack_out": [
        "tmp%140#0"
      ]
    },
    "949": {
      "op": "!",
      "defined_out": [
        "tmp%141#0"
      ],
      "stack_out": [
        "tmp%141#0"
      ]
    },
    "950": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "951": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%142#0"
      ],
      "stack_out": [
        "tmp%142#0"
      ]
    },
    "953": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "954": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%144#0"
      ],
      "stack_out": [
        "tmp%144#0"
      ]
    },
    "957": {
      "op": "btoi",
      "defined_out": [
        "tmp%145#0"
      ],
      "stack_out": [
        "tmp%145#0"
      ]
    },
    "958": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%146#0"
      ],
      "stack_out": [
        "tmp%146#0"
      ]
    },
    "960": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%146#0",
        "tmp%147#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%147#0"
      ]
    },
    "963": {
      "op": "btoi",
      "defined_out": [
        "tmp%146#0",
        "tmp%148#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0"
      ]
    },
    "964": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%146#0",
        "tmp%148#0",
        "tmp%149#0"
      ],
      "stack_out": [
        "tmp%146#0",
        "tmp%148#0",
        "tmp%149#0"
      ]
    },
    "967": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_self_disclose",
      "op": "callsub ad_self_disclose",
      "stack_out": []
    },
    "970": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "971": {
      "retsub": true,
      "op": "retsub"
    },
    "972": {
      "block": "__puya_arc4_router___ad_terms_route@21",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%150#0"
      ],
      "stack_out": [
        "tmp%150#0"
      ]
    },
    "974": {
      "op": "!",
      "defined_out": [
        "tmp%151#0"
      ],
      "stack_out": [
        "tmp%151#0"
      ]
    },
    "975": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "976": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%152#0"
      ],
      "stack_out": [
        "tmp%152#0"
      ]
    },
    "978": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "979": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%154#0"
      ],
      "stack_out": [
        "tmp%154#0"
      ]
    },
    "982": {
      "op": "btoi",
      "defined_out": [
        "tmp%155#0"
      ],
      "stack_out": [
        "tmp%155#0"
      ]
    },
    "983": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%156#0"
      ],
      "stack_out": [
        "tmp%156#0"
      ]
    },
    "985": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%156#0",
        "tmp%157#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%157#0"
      ]
    },
    "988": {
      "op": "btoi",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0"
      ]
    },
    "989": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0"
      ]
    },
    "992": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0"
      ]
    },
    "995": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0"
      ]
    },
    "998": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0"
      ]
    },
    "1001": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0"
      ]
    },
    "1004": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0"
      ]
    },
    "1007": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%165#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%165#0"
      ]
    },
    "1010": {
      "op": "btoi",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ]
    },
    "1011": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "tmp%167#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "tmp%167#0"
      ]
    },
    "1013": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "tmp%167#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "tmp%167#0",
        "1"
      ]
    },
    "1014": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%6#0",
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "gtxn_idx%6#0"
      ]
    },
    "1015": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)",
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "gtxn_idx%6#0",
        "gtxn_idx%6#0 (copy)"
      ]
    },
    "1016": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0"
      ]
    },
    "1018": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay",
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "gtxn_idx%6#0",
        "gtxn_type%6#0",
        "pay"
      ]
    },
    "1019": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0",
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0"
      ],
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "gtxn_idx%6#0",
        "gtxn_type_matches%6#0"
      ]
    },
    "1020": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%156#0",
        "tmp%158#0",
        "tmp%159#0",
        "tmp%160#0",
        "tmp%161#0",
        "tmp%162#0",
        "tmp%163#0",
        "tmp%164#0",
        "tmp%166#0",
        "gtxn_idx%6#0"
      ]
    },
    "1021": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_terms",
      "op": "callsub ad_terms",
      "stack_out": []
    },
    "1024": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1025": {
      "retsub": true,
      "op": "retsub"
    },
    "1026": {
      "block": "__puya_arc4_router___ad_income_route@22",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%168#0"
      ],
      "stack_out": [
        "tmp%168#0"
      ]
    },
    "1028": {
      "op": "!",
      "defined_out": [
        "tmp%169#0"
      ],
      "stack_out": [
        "tmp%169#0"
      ]
    },
    "1029": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1030": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%170#0"
      ],
      "stack_out": [
        "tmp%170#0"
      ]
    },
    "1032": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1033": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%172#0"
      ],
      "stack_out": [
        "tmp%172#0"
      ]
    },
    "1036": {
      "op": "btoi",
      "defined_out": [
        "tmp%173#0"
      ],
      "stack_out": [
        "tmp%173#0"
      ]
    },
    "1037": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%174#0"
      ],
      "stack_out": [
        "tmp%174#0"
      ]
    },
    "1039": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%174#0",
        "tmp%175#0"
      ],
      "stack_out": [
        "tmp%174#0",
        "tmp%175#0"
      ]
    },
    "1042": {
      "op": "btoi",
      "defined_out": [
        "tmp%174#0",
        "tmp%176#0"
      ],
      "stack_out": [
        "tmp%174#0",
        "tmp%176#0"
      ]
    },
    "1043": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%174#0",
        "tmp%176#0",
        "tmp%177#0"
      ],
      "stack_out": [
        "tmp%174#0",
        "tmp%176#0",
        "tmp%177#0"
      ]
    },
    "1046": {
      "op": "btoi",
      "defined_out": [
        "tmp%174#0",
        "tmp%176#0",
        "tmp%178#0"
      ],
      "stack_out": [
        "tmp%174#0",
        "tmp%176#0",
        "tmp%178#0"
      ]
    },
    "1047": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_income",
      "op": "callsub ad_income",
      "defined_out": [
        "tmp%179#0"
      ],
      "stack_out": [
        "tmp%179#0"
      ]
    },
    "1050": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%179#0"
      ],
      "stack_out": [
        "tmp%179#0",
        "0x151f7c75"
      ]
    },
    "1051": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%179#0"
      ]
    },
    "1052": {
      "op": "concat",
      "defined_out": [
        "tmp%180#0"
      ],
      "stack_out": [
        "tmp%180#0"
      ]
    },
    "1053": {
      "op": "log",
      "stack_out": []
    },
    "1054": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1055": {
      "retsub": true,
      "op": "retsub"
    },
    "1056": {
      "block": "__puya_arc4_router___ad_asa_close_route@23",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%181#0"
      ],
      "stack_out": [
        "tmp%181#0"
      ]
    },
    "1058": {
      "op": "!",
      "defined_out": [
        "tmp%182#0"
      ],
      "stack_out": [
        "tmp%182#0"
      ]
    },
    "1059": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1060": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%183#0"
      ],
      "stack_out": [
        "tmp%183#0"
      ]
    },
    "1062": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1063": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%185#0"
      ],
      "stack_out": [
        "tmp%185#0"
      ]
    },
    "1066": {
      "op": "btoi",
      "defined_out": [
        "tmp%186#0"
      ],
      "stack_out": [
        "tmp%186#0"
      ]
    },
    "1067": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%187#0"
      ],
      "stack_out": [
        "tmp%187#0"
      ]
    },
    "1069": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%187#0",
        "tmp%188#0"
      ],
      "stack_out": [
        "tmp%187#0",
        "tmp%188#0"
      ]
    },
    "1072": {
      "op": "btoi",
      "defined_out": [
        "tmp%187#0",
        "tmp%189#0"
      ],
      "stack_out": [
        "tmp%187#0",
        "tmp%189#0"
      ]
    },
    "1073": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%187#0",
        "tmp%189#0",
        "tmp%190#0"
      ],
      "stack_out": [
        "tmp%187#0",
        "tmp%189#0",
        "tmp%190#0"
      ]
    },
    "1076": {
      "op": "btoi",
      "defined_out": [
        "tmp%187#0",
        "tmp%189#0",
        "tmp%191#0"
      ],
      "stack_out": [
        "tmp%187#0",
        "tmp%189#0",
        "tmp%191#0"
      ]
    },
    "1077": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.ad_asa_close",
      "op": "callsub ad_asa_close",
      "stack_out": []
    },
    "1080": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1081": {
      "retsub": true,
      "op": "retsub"
    },
    "1082": {
      "block": "__puya_arc4_router___contract_create_route@24",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%192#0"
      ],
      "stack_out": [
        "tmp%192#0"
      ]
    },
    "1084": {
      "op": "!",
      "defined_out": [
        "tmp%193#0"
      ],
      "stack_out": [
        "tmp%193#0"
      ]
    },
    "1085": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1086": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%194#0"
      ],
      "stack_out": [
        "tmp%194#0"
      ]
    },
    "1088": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1089": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%196#0"
      ],
      "stack_out": [
        "tmp%196#0"
      ]
    },
    "1092": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%196#0",
        "tmp%197#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%197#0"
      ]
    },
    "1095": {
      "op": "btoi",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0"
      ]
    },
    "1096": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%199#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%199#0"
      ]
    },
    "1099": {
      "op": "btoi",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0"
      ]
    },
    "1100": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0"
      ]
    },
    "1103": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%202#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%202#0"
      ]
    },
    "1106": {
      "op": "btoi",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%203#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%203#0"
      ]
    },
    "1107": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0"
      ]
    },
    "1109": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%205#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%205#0"
      ]
    },
    "1112": {
      "op": "btoi",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0"
      ]
    },
    "1113": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%207#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%207#0"
      ]
    },
    "1116": {
      "op": "btoi",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0"
      ]
    },
    "1117": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0"
      ]
    },
    "1120": {
      "op": "txna ApplicationArgs 9",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ]
    },
    "1123": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "tmp%211#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "tmp%211#0"
      ]
    },
    "1125": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "tmp%211#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "tmp%211#0",
        "2"
      ]
    },
    "1127": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0"
      ]
    },
    "1128": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "gtxn_idx%7#0 (copy)"
      ]
    },
    "1129": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0"
      ]
    },
    "1131": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "gtxn_type%7#0",
        "pay"
      ]
    },
    "1132": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "gtxn_type_matches%7#0"
      ]
    },
    "1133": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0"
      ]
    },
    "1134": {
      "op": "txn GroupIndex",
      "defined_out": [
        "gtxn_idx%7#0",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "tmp%212#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "tmp%212#0"
      ]
    },
    "1136": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "gtxn_idx%7#0",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "tmp%212#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "tmp%212#0",
        "1"
      ]
    },
    "1137": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%7#0",
        "gtxn_idx%8#0",
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0"
      ],
      "stack_out": [
        "tmp%196#0",
        "tmp%198#0",
        "tmp%200#0",
        "tmp%201#0",
        "tmp%204#0",
        "tmp%206#0",
        "tmp%208#0",
        "tmp%209#0",
        "tmp%210#0",
        "gtxn_idx%7#0",
        "gtxn_idx%8#0"
      ]
    },
    "1138": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.contract_create",
      "op": "callsub contract_create",
      "defined_out": [
        "tmp%213#0"
      ],
      "stack_out": [
        "tmp%213#0"
      ]
    },
    "1141": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%213#0"
      ],
      "stack_out": [
        "tmp%213#0",
        "0x151f7c75"
      ]
    },
    "1142": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%213#0"
      ]
    },
    "1143": {
      "op": "concat",
      "defined_out": [
        "tmp%214#0"
      ],
      "stack_out": [
        "tmp%214#0"
      ]
    },
    "1144": {
      "op": "log",
      "stack_out": []
    },
    "1145": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "1146": {
      "retsub": true,
      "op": "retsub"
    },
    "1147": {
      "block": "__puya_arc4_router___keys_confirm_route@25",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%215#0"
      ],
      "stack_out": [
        "tmp%215#0"
      ]
    },
    "1149": {
      "op": "!",
      "defined_out": [
        "tmp%216#0"
      ],
      "stack_out": [
        "tmp%216#0"
      ]
    },
    "1150": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1151": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%217#0"
      ],
      "stack_out": [
        "tmp%217#0"
      ]
    },
    "1153": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1154": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%219#0"
      ],
      "stack_out": [
        "tmp%219#0"
      ]
    },
    "1157": {
      "op": "btoi",
      "defined_out": [
        "tmp%220#0"
      ],
      "stack_out": [
        "tmp%220#0"
      ]
    },
    "1158": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%221#0"
      ],
      "stack_out": [
        "tmp%221#0"
      ]
    },
    "1160": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%221#0",
        "tmp%222#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%222#0"
      ]
    },
    "1163": {
      "op": "btoi",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0"
      ]
    },
    "1164": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0"
      ]
    },
    "1167": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%225#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%225#0"
      ]
    },
    "1170": {
      "op": "btoi",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%226#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%226#0"
      ]
    },
    "1171": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%227#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%227#0"
      ]
    },
    "1173": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%227#0",
        "tmp%228#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%227#0",
        "tmp%228#0"
      ]
    },
    "1176": {
      "op": "btoi",
      "defined_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%227#0",
        "tmp%229#0"
      ],
      "stack_out": [
        "tmp%221#0",
        "tmp%223#0",
        "tmp%224#0",
        "tmp%227#0",
        "tmp%229#0"
      ]
    },
    "1177": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.keys_confirm",
      "op": "callsub keys_confirm",
      "stack_out": []
    },
    "1180": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1181": {
      "retsub": true,
      "op": "retsub"
    },
    "1182": {
      "block": "__puya_arc4_router___keys_not_confirmed_route@26",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%230#0"
      ],
      "stack_out": [
        "tmp%230#0"
      ]
    },
    "1184": {
      "op": "!",
      "defined_out": [
        "tmp%231#0"
      ],
      "stack_out": [
        "tmp%231#0"
      ]
    },
    "1185": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1186": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%232#0"
      ],
      "stack_out": [
        "tmp%232#0"
      ]
    },
    "1188": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1189": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%234#0"
      ],
      "stack_out": [
        "tmp%234#0"
      ]
    },
    "1192": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%234#0",
        "tmp%235#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%235#0"
      ]
    },
    "1195": {
      "op": "btoi",
      "defined_out": [
        "tmp%234#0",
        "tmp%236#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%236#0"
      ]
    },
    "1196": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0"
      ]
    },
    "1198": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%238#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%238#0"
      ]
    },
    "1201": {
      "op": "btoi",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0"
      ]
    },
    "1202": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0"
      ]
    },
    "1205": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%241#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%241#0"
      ]
    },
    "1208": {
      "op": "btoi",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%242#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%242#0"
      ]
    },
    "1209": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%243#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%243#0"
      ]
    },
    "1211": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%243#0",
        "tmp%244#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%243#0",
        "tmp%244#0"
      ]
    },
    "1214": {
      "op": "btoi",
      "defined_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%243#0",
        "tmp%245#0"
      ],
      "stack_out": [
        "tmp%234#0",
        "tmp%237#0",
        "tmp%239#0",
        "tmp%240#0",
        "tmp%243#0",
        "tmp%245#0"
      ]
    },
    "1215": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.keys_not_confirmed",
      "op": "callsub keys_not_confirmed",
      "stack_out": []
    },
    "1218": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1219": {
      "retsub": true,
      "op": "retsub"
    },
    "1220": {
      "block": "__puya_arc4_router___keys_not_submitted_route@27",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%246#0"
      ],
      "stack_out": [
        "tmp%246#0"
      ]
    },
    "1222": {
      "op": "!",
      "defined_out": [
        "tmp%247#0"
      ],
      "stack_out": [
        "tmp%247#0"
      ]
    },
    "1223": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1224": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%248#0"
      ],
      "stack_out": [
        "tmp%248#0"
      ]
    },
    "1226": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1227": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%250#0"
      ],
      "stack_out": [
        "tmp%250#0"
      ]
    },
    "1230": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%250#0",
        "tmp%251#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%251#0"
      ]
    },
    "1233": {
      "op": "btoi",
      "defined_out": [
        "tmp%250#0",
        "tmp%252#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%252#0"
      ]
    },
    "1234": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0"
      ]
    },
    "1236": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%254#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%254#0"
      ]
    },
    "1239": {
      "op": "btoi",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0"
      ]
    },
    "1240": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0"
      ]
    },
    "1243": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%257#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%257#0"
      ]
    },
    "1246": {
      "op": "btoi",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%258#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%258#0"
      ]
    },
    "1247": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%259#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%259#0"
      ]
    },
    "1249": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%259#0",
        "tmp%260#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%259#0",
        "tmp%260#0"
      ]
    },
    "1252": {
      "op": "btoi",
      "defined_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%259#0",
        "tmp%261#0"
      ],
      "stack_out": [
        "tmp%250#0",
        "tmp%253#0",
        "tmp%255#0",
        "tmp%256#0",
        "tmp%259#0",
        "tmp%261#0"
      ]
    },
    "1253": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.keys_not_submitted",
      "op": "callsub keys_not_submitted",
      "stack_out": []
    },
    "1256": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1257": {
      "retsub": true,
      "op": "retsub"
    },
    "1258": {
      "block": "__puya_arc4_router___keys_submit_route@28",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%262#0"
      ],
      "stack_out": [
        "tmp%262#0"
      ]
    },
    "1260": {
      "op": "!",
      "defined_out": [
        "tmp%263#0"
      ],
      "stack_out": [
        "tmp%263#0"
      ]
    },
    "1261": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1262": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%264#0"
      ],
      "stack_out": [
        "tmp%264#0"
      ]
    },
    "1264": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1265": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%266#0"
      ],
      "stack_out": [
        "tmp%266#0"
      ]
    },
    "1268": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%266#0",
        "tmp%267#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%267#0"
      ]
    },
    "1271": {
      "op": "btoi",
      "defined_out": [
        "tmp%266#0",
        "tmp%268#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%268#0"
      ]
    },
    "1272": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0"
      ]
    },
    "1274": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%270#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%270#0"
      ]
    },
    "1277": {
      "op": "btoi",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0"
      ]
    },
    "1278": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0"
      ]
    },
    "1281": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%273#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%273#0"
      ]
    },
    "1284": {
      "op": "btoi",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%274#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%274#0"
      ]
    },
    "1285": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0"
      ]
    },
    "1287": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0",
        "tmp%276#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0",
        "tmp%276#0"
      ]
    },
    "1290": {
      "op": "btoi",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0",
        "tmp%277#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0",
        "tmp%277#0"
      ]
    },
    "1291": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0",
        "tmp%277#0",
        "tmp%278#0"
      ],
      "stack_out": [
        "tmp%266#0",
        "tmp%269#0",
        "tmp%271#0",
        "tmp%272#0",
        "tmp%275#0",
        "tmp%277#0",
        "tmp%278#0"
      ]
    },
    "1294": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.keys_submit",
      "op": "callsub keys_submit",
      "stack_out": []
    },
    "1297": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1298": {
      "retsub": true,
      "op": "retsub"
    },
    "1299": {
      "block": "__puya_arc4_router___breach_limits_route@29",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%279#0"
      ],
      "stack_out": [
        "tmp%279#0"
      ]
    },
    "1301": {
      "op": "!",
      "defined_out": [
        "tmp%280#0"
      ],
      "stack_out": [
        "tmp%280#0"
      ]
    },
    "1302": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1303": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%281#0"
      ],
      "stack_out": [
        "tmp%281#0"
      ]
    },
    "1305": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1306": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%283#0"
      ],
      "stack_out": [
        "tmp%283#0"
      ]
    },
    "1309": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%283#0",
        "tmp%284#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%284#0"
      ]
    },
    "1312": {
      "op": "btoi",
      "defined_out": [
        "tmp%283#0",
        "tmp%285#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%285#0"
      ]
    },
    "1313": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0"
      ]
    },
    "1315": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%287#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%287#0"
      ]
    },
    "1318": {
      "op": "btoi",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0"
      ]
    },
    "1319": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0"
      ]
    },
    "1322": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%290#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%290#0"
      ]
    },
    "1325": {
      "op": "btoi",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%291#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%291#0"
      ]
    },
    "1326": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%292#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%292#0"
      ]
    },
    "1328": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%292#0",
        "tmp%293#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%292#0",
        "tmp%293#0"
      ]
    },
    "1331": {
      "op": "btoi",
      "defined_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%292#0",
        "tmp%294#0"
      ],
      "stack_out": [
        "tmp%283#0",
        "tmp%286#0",
        "tmp%288#0",
        "tmp%289#0",
        "tmp%292#0",
        "tmp%294#0"
      ]
    },
    "1332": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.breach_limits",
      "op": "callsub breach_limits",
      "stack_out": []
    },
    "1335": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1336": {
      "retsub": true,
      "op": "retsub"
    },
    "1337": {
      "block": "__puya_arc4_router___breach_pay_route@30",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%295#0"
      ],
      "stack_out": [
        "tmp%295#0"
      ]
    },
    "1339": {
      "op": "!",
      "defined_out": [
        "tmp%296#0"
      ],
      "stack_out": [
        "tmp%296#0"
      ]
    },
    "1340": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1341": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%297#0"
      ],
      "stack_out": [
        "tmp%297#0"
      ]
    },
    "1343": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1344": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%299#0"
      ],
      "stack_out": [
        "tmp%299#0"
      ]
    },
    "1347": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%299#0",
        "tmp%300#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%300#0"
      ]
    },
    "1350": {
      "op": "btoi",
      "defined_out": [
        "tmp%299#0",
        "tmp%301#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%301#0"
      ]
    },
    "1351": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0"
      ]
    },
    "1353": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%303#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%303#0"
      ]
    },
    "1356": {
      "op": "btoi",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0"
      ]
    },
    "1357": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0"
      ]
    },
    "1360": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%306#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%306#0"
      ]
    },
    "1363": {
      "op": "btoi",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%307#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%307#0"
      ]
    },
    "1364": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%308#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%308#0"
      ]
    },
    "1366": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%308#0",
        "tmp%309#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%308#0",
        "tmp%309#0"
      ]
    },
    "1369": {
      "op": "btoi",
      "defined_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%308#0",
        "tmp%310#0"
      ],
      "stack_out": [
        "tmp%299#0",
        "tmp%302#0",
        "tmp%304#0",
        "tmp%305#0",
        "tmp%308#0",
        "tmp%310#0"
      ]
    },
    "1370": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.breach_pay",
      "op": "callsub breach_pay",
      "stack_out": []
    },
    "1373": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1374": {
      "retsub": true,
      "op": "retsub"
    },
    "1375": {
      "block": "__puya_arc4_router___breach_suspended_route@31",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%311#0"
      ],
      "stack_out": [
        "tmp%311#0"
      ]
    },
    "1377": {
      "op": "!",
      "defined_out": [
        "tmp%312#0"
      ],
      "stack_out": [
        "tmp%312#0"
      ]
    },
    "1378": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1379": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%313#0"
      ],
      "stack_out": [
        "tmp%313#0"
      ]
    },
    "1381": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1382": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%315#0"
      ],
      "stack_out": [
        "tmp%315#0"
      ]
    },
    "1385": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%315#0",
        "tmp%316#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%316#0"
      ]
    },
    "1388": {
      "op": "btoi",
      "defined_out": [
        "tmp%315#0",
        "tmp%317#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%317#0"
      ]
    },
    "1389": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0"
      ]
    },
    "1391": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%319#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%319#0"
      ]
    },
    "1394": {
      "op": "btoi",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0"
      ]
    },
    "1395": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0"
      ]
    },
    "1398": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%322#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%322#0"
      ]
    },
    "1401": {
      "op": "btoi",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%323#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%323#0"
      ]
    },
    "1402": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%324#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%324#0"
      ]
    },
    "1404": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%324#0",
        "tmp%325#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%324#0",
        "tmp%325#0"
      ]
    },
    "1407": {
      "op": "btoi",
      "defined_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%324#0",
        "tmp%326#0"
      ],
      "stack_out": [
        "tmp%315#0",
        "tmp%318#0",
        "tmp%320#0",
        "tmp%321#0",
        "tmp%324#0",
        "tmp%326#0"
      ]
    },
    "1408": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.breach_suspended",
      "op": "callsub breach_suspended",
      "stack_out": []
    },
    "1411": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1412": {
      "retsub": true,
      "op": "retsub"
    },
    "1413": {
      "block": "__puya_arc4_router___contract_claim_route@32",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%327#0"
      ],
      "stack_out": [
        "tmp%327#0"
      ]
    },
    "1415": {
      "op": "!",
      "defined_out": [
        "tmp%328#0"
      ],
      "stack_out": [
        "tmp%328#0"
      ]
    },
    "1416": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1417": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%329#0"
      ],
      "stack_out": [
        "tmp%329#0"
      ]
    },
    "1419": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1420": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%331#0"
      ],
      "stack_out": [
        "tmp%331#0"
      ]
    },
    "1423": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%331#0",
        "tmp%332#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%332#0"
      ]
    },
    "1426": {
      "op": "btoi",
      "defined_out": [
        "tmp%331#0",
        "tmp%333#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%333#0"
      ]
    },
    "1427": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0"
      ]
    },
    "1429": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%335#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%335#0"
      ]
    },
    "1432": {
      "op": "btoi",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0"
      ]
    },
    "1433": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0"
      ]
    },
    "1436": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%338#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%338#0"
      ]
    },
    "1439": {
      "op": "btoi",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%339#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%339#0"
      ]
    },
    "1440": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%340#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%340#0"
      ]
    },
    "1442": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%340#0",
        "tmp%341#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%340#0",
        "tmp%341#0"
      ]
    },
    "1445": {
      "op": "btoi",
      "defined_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%340#0",
        "tmp%342#0"
      ],
      "stack_out": [
        "tmp%331#0",
        "tmp%334#0",
        "tmp%336#0",
        "tmp%337#0",
        "tmp%340#0",
        "tmp%342#0"
      ]
    },
    "1446": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.contract_claim",
      "op": "callsub contract_claim",
      "defined_out": [
        "tmp%343#0"
      ],
      "stack_out": [
        "tmp%343#0"
      ]
    },
    "1449": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%343#0"
      ],
      "stack_out": [
        "tmp%343#0",
        "0x151f7c75"
      ]
    },
    "1450": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%343#0"
      ]
    },
    "1451": {
      "op": "concat",
      "defined_out": [
        "tmp%344#0"
      ],
      "stack_out": [
        "tmp%344#0"
      ]
    },
    "1452": {
      "op": "log",
      "stack_out": []
    },
    "1453": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1454": {
      "retsub": true,
      "op": "retsub"
    },
    "1455": {
      "block": "__puya_arc4_router___contract_expired_route@33",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%345#0"
      ],
      "stack_out": [
        "tmp%345#0"
      ]
    },
    "1457": {
      "op": "!",
      "defined_out": [
        "tmp%346#0"
      ],
      "stack_out": [
        "tmp%346#0"
      ]
    },
    "1458": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1459": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%347#0"
      ],
      "stack_out": [
        "tmp%347#0"
      ]
    },
    "1461": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1462": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%349#0"
      ],
      "stack_out": [
        "tmp%349#0"
      ]
    },
    "1465": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%349#0",
        "tmp%350#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%350#0"
      ]
    },
    "1468": {
      "op": "btoi",
      "defined_out": [
        "tmp%349#0",
        "tmp%351#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%351#0"
      ]
    },
    "1469": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0"
      ]
    },
    "1471": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%353#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%353#0"
      ]
    },
    "1474": {
      "op": "btoi",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0"
      ]
    },
    "1475": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0"
      ]
    },
    "1478": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%356#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%356#0"
      ]
    },
    "1481": {
      "op": "btoi",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%357#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%357#0"
      ]
    },
    "1482": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%358#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%358#0"
      ]
    },
    "1484": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%358#0",
        "tmp%359#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%358#0",
        "tmp%359#0"
      ]
    },
    "1487": {
      "op": "btoi",
      "defined_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%358#0",
        "tmp%360#0"
      ],
      "stack_out": [
        "tmp%349#0",
        "tmp%352#0",
        "tmp%354#0",
        "tmp%355#0",
        "tmp%358#0",
        "tmp%360#0"
      ]
    },
    "1488": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.contract_expired",
      "op": "callsub contract_expired",
      "stack_out": []
    },
    "1491": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1492": {
      "retsub": true,
      "op": "retsub"
    },
    "1493": {
      "block": "__puya_arc4_router___contract_withdraw_route@34",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%361#0"
      ],
      "stack_out": [
        "tmp%361#0"
      ]
    },
    "1495": {
      "op": "!",
      "defined_out": [
        "tmp%362#0"
      ],
      "stack_out": [
        "tmp%362#0"
      ]
    },
    "1496": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1497": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%363#0"
      ],
      "stack_out": [
        "tmp%363#0"
      ]
    },
    "1499": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1500": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%365#0"
      ],
      "stack_out": [
        "tmp%365#0"
      ]
    },
    "1503": {
      "op": "btoi",
      "defined_out": [
        "tmp%366#0"
      ],
      "stack_out": [
        "tmp%366#0"
      ]
    },
    "1504": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%367#0"
      ],
      "stack_out": [
        "tmp%367#0"
      ]
    },
    "1506": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%367#0",
        "tmp%368#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%368#0"
      ]
    },
    "1509": {
      "op": "btoi",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0"
      ]
    },
    "1510": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0"
      ]
    },
    "1513": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%371#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%371#0"
      ]
    },
    "1516": {
      "op": "btoi",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%372#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%372#0"
      ]
    },
    "1517": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%373#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%373#0"
      ]
    },
    "1519": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%373#0",
        "tmp%374#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%373#0",
        "tmp%374#0"
      ]
    },
    "1522": {
      "op": "btoi",
      "defined_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%373#0",
        "tmp%375#0"
      ],
      "stack_out": [
        "tmp%367#0",
        "tmp%369#0",
        "tmp%370#0",
        "tmp%373#0",
        "tmp%375#0"
      ]
    },
    "1523": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.contract_withdraw",
      "op": "callsub contract_withdraw",
      "stack_out": []
    },
    "1526": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1527": {
      "retsub": true,
      "op": "retsub"
    },
    "1528": {
      "block": "__puya_arc4_router___contract_delete_route@35",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%376#0"
      ],
      "stack_out": [
        "tmp%376#0"
      ]
    },
    "1530": {
      "op": "!",
      "defined_out": [
        "tmp%377#0"
      ],
      "stack_out": [
        "tmp%377#0"
      ]
    },
    "1531": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1532": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%378#0"
      ],
      "stack_out": [
        "tmp%378#0"
      ]
    },
    "1534": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1535": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%380#0"
      ],
      "stack_out": [
        "tmp%380#0"
      ]
    },
    "1538": {
      "op": "btoi",
      "defined_out": [
        "tmp%381#0"
      ],
      "stack_out": [
        "tmp%381#0"
      ]
    },
    "1539": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%382#0"
      ],
      "stack_out": [
        "tmp%382#0"
      ]
    },
    "1541": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%382#0",
        "tmp%383#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%383#0"
      ]
    },
    "1544": {
      "op": "btoi",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0"
      ]
    },
    "1545": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0"
      ]
    },
    "1548": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%386#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%386#0"
      ]
    },
    "1551": {
      "op": "btoi",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%387#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%387#0"
      ]
    },
    "1552": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%388#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%388#0"
      ]
    },
    "1554": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%388#0",
        "tmp%389#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%388#0",
        "tmp%389#0"
      ]
    },
    "1557": {
      "op": "btoi",
      "defined_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%388#0",
        "tmp%390#0"
      ],
      "stack_out": [
        "tmp%382#0",
        "tmp%384#0",
        "tmp%385#0",
        "tmp%388#0",
        "tmp%390#0"
      ]
    },
    "1558": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.contract_delete",
      "op": "callsub contract_delete",
      "defined_out": [
        "tmp%391#0"
      ],
      "stack_out": [
        "tmp%391#0"
      ]
    },
    "1561": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%391#0"
      ],
      "stack_out": [
        "tmp%391#0",
        "0x151f7c75"
      ]
    },
    "1562": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%391#0"
      ]
    },
    "1563": {
      "op": "concat",
      "defined_out": [
        "tmp%392#0"
      ],
      "stack_out": [
        "tmp%392#0"
      ]
    },
    "1564": {
      "op": "log",
      "stack_out": []
    },
    "1565": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1566": {
      "retsub": true,
      "op": "retsub"
    },
    "1567": {
      "block": "__puya_arc4_router___contract_report_expiry_soon_route@36",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%393#0"
      ],
      "stack_out": [
        "tmp%393#0"
      ]
    },
    "1569": {
      "op": "!",
      "defined_out": [
        "tmp%394#0"
      ],
      "stack_out": [
        "tmp%394#0"
      ]
    },
    "1570": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1571": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%395#0"
      ],
      "stack_out": [
        "tmp%395#0"
      ]
    },
    "1573": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1574": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%397#0"
      ],
      "stack_out": [
        "tmp%397#0"
      ]
    },
    "1577": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%397#0",
        "tmp%398#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%398#0"
      ]
    },
    "1580": {
      "op": "btoi",
      "defined_out": [
        "tmp%397#0",
        "tmp%399#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%399#0"
      ]
    },
    "1581": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0"
      ]
    },
    "1583": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%401#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%401#0"
      ]
    },
    "1586": {
      "op": "btoi",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0"
      ]
    },
    "1587": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0"
      ]
    },
    "1590": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%404#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%404#0"
      ]
    },
    "1593": {
      "op": "btoi",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%405#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%405#0"
      ]
    },
    "1594": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%406#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%406#0"
      ]
    },
    "1596": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%406#0",
        "tmp%407#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%406#0",
        "tmp%407#0"
      ]
    },
    "1599": {
      "op": "btoi",
      "defined_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%406#0",
        "tmp%408#0"
      ],
      "stack_out": [
        "tmp%397#0",
        "tmp%400#0",
        "tmp%402#0",
        "tmp%403#0",
        "tmp%406#0",
        "tmp%408#0"
      ]
    },
    "1600": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.contract_report_expiry_soon",
      "op": "callsub contract_report_expiry_soon",
      "stack_out": []
    },
    "1603": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1604": {
      "retsub": true,
      "op": "retsub"
    },
    "1605": {
      "block": "__puya_arc4_router___get_noticeboard_asset_route@37",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%409#0"
      ],
      "stack_out": [
        "tmp%409#0"
      ]
    },
    "1607": {
      "op": "!",
      "defined_out": [
        "tmp%410#0"
      ],
      "stack_out": [
        "tmp%410#0"
      ]
    },
    "1608": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1609": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%411#0"
      ],
      "stack_out": [
        "tmp%411#0"
      ]
    },
    "1611": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1612": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%413#0"
      ],
      "stack_out": [
        "tmp%413#0"
      ]
    },
    "1615": {
      "op": "btoi",
      "defined_out": [
        "tmp%414#0"
      ],
      "stack_out": [
        "tmp%414#0"
      ]
    },
    "1616": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.get_noticeboard_asset",
      "op": "callsub get_noticeboard_asset",
      "defined_out": [
        "tmp%415#0"
      ],
      "stack_out": [
        "tmp%415#0"
      ]
    },
    "1619": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%415#0"
      ],
      "stack_out": [
        "tmp%415#0",
        "0x151f7c75"
      ]
    },
    "1620": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%415#0"
      ]
    },
    "1621": {
      "op": "concat",
      "defined_out": [
        "tmp%416#0"
      ],
      "stack_out": [
        "tmp%416#0"
      ]
    },
    "1622": {
      "op": "log",
      "stack_out": []
    },
    "1623": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1624": {
      "retsub": true,
      "op": "retsub"
    },
    "1625": {
      "block": "__puya_arc4_router___get_noticeboard_user_route@38",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%417#0"
      ],
      "stack_out": [
        "tmp%417#0"
      ]
    },
    "1627": {
      "op": "!",
      "defined_out": [
        "tmp%418#0"
      ],
      "stack_out": [
        "tmp%418#0"
      ]
    },
    "1628": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "1629": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%419#0"
      ],
      "stack_out": [
        "tmp%419#0"
      ]
    },
    "1631": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "1632": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%421#0"
      ],
      "stack_out": [
        "tmp%421#0"
      ]
    },
    "1635": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard.get_noticeboard_user",
      "op": "callsub get_noticeboard_user",
      "defined_out": [
        "tmp%422#0"
      ],
      "stack_out": [
        "tmp%422#0"
      ]
    },
    "1638": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%422#0"
      ],
      "stack_out": [
        "tmp%422#0",
        "0x151f7c75"
      ]
    },
    "1639": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%422#0"
      ]
    },
    "1640": {
      "op": "concat",
      "defined_out": [
        "tmp%423#0"
      ],
      "stack_out": [
        "tmp%423#0"
      ]
    },
    "1641": {
      "op": "log",
      "stack_out": []
    },
    "1642": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "1643": {
      "retsub": true,
      "op": "retsub"
    },
    "1644": {
      "block": "__puya_arc4_router___after_if_else@42",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1645": {
      "retsub": true,
      "op": "retsub"
    },
    "1646": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_deploy",
      "params": {
        "app_id_old#0": "uint64"
      },
      "block": "noticeboard_deploy",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1649": {
      "op": "bytec 18 // \"app_id_old\"",
      "defined_out": [
        "\"app_id_old\""
      ],
      "stack_out": [
        "\"app_id_old\""
      ]
    },
    "1651": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"app_id_old\"",
        "app_id_old#0 (copy)"
      ],
      "stack_out": [
        "\"app_id_old\"",
        "app_id_old#0 (copy)"
      ]
    },
    "1653": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1654": {
      "op": "bytec 4 // \"pla_manager\""
    },
    "1656": {
      "op": "global CreatorAddress",
      "defined_out": [
        "\"pla_manager\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"pla_manager\"",
        "new_state_value%0#0"
      ]
    },
    "1658": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1659": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\""
      ],
      "stack_out": [
        "\"state\""
      ]
    },
    "1660": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "\"state\"",
        "0x01"
      ],
      "stack_out": [
        "\"state\"",
        "0x01"
      ]
    },
    "1661": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1662": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "1664": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "1665": {
      "retsub": true,
      "op": "retsub"
    },
    "1666": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_suspend",
      "params": {},
      "block": "noticeboard_suspend",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1669": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1670": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "1671": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1672": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1673": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "0x02",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x02"
      ]
    },
    "1675": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1676": {
      "error": "Cannot be called from other state than SET.",
      "op": "assert // Cannot be called from other state than SET.",
      "stack_out": []
    },
    "1677": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1679": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1680": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "1682": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1683": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1684": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1685": {
      "op": "bnz noticeboard_suspend_bool_true@2",
      "stack_out": []
    },
    "1688": {
      "op": "txn Sender"
    },
    "1690": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1692": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1693": {
      "op": "bz noticeboard_suspend_bool_false@3",
      "stack_out": []
    },
    "1696": {
      "block": "noticeboard_suspend_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1697": {
      "op": "b noticeboard_suspend_bool_merge@4"
    },
    "1700": {
      "block": "noticeboard_suspend_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1701": {
      "block": "noticeboard_suspend_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Can only be called by platform manager or creator.",
      "op": "assert // Can only be called by platform manager or creator.",
      "defined_out": [],
      "stack_out": []
    },
    "1702": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\""
      ],
      "stack_out": [
        "\"state\""
      ]
    },
    "1703": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "\"state\"",
        "0x03"
      ],
      "stack_out": [
        "\"state\"",
        "0x03"
      ]
    },
    "1706": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1707": {
      "retsub": true,
      "op": "retsub"
    },
    "1708": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_migrate",
      "params": {
        "app_id_new#0": "uint64"
      },
      "block": "noticeboard_migrate",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1711": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1712": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "1713": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1714": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1715": {
      "op": "pushbytes 0x03",
      "defined_out": [
        "0x03",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x03"
      ]
    },
    "1718": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1719": {
      "error": "Cannot be called from other state than SUSPENDED.",
      "op": "assert // Cannot be called from other state than SUSPENDED.",
      "stack_out": []
    },
    "1720": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1722": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1723": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "1725": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1726": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1727": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1728": {
      "op": "bnz noticeboard_migrate_bool_true@2",
      "stack_out": []
    },
    "1731": {
      "op": "txn Sender"
    },
    "1733": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1735": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1736": {
      "op": "bz noticeboard_migrate_bool_false@3",
      "stack_out": []
    },
    "1739": {
      "block": "noticeboard_migrate_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1740": {
      "op": "b noticeboard_migrate_bool_merge@4"
    },
    "1743": {
      "block": "noticeboard_migrate_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1744": {
      "block": "noticeboard_migrate_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Can only be called by platform manager or creator.",
      "op": "assert // Can only be called by platform manager or creator.",
      "defined_out": [],
      "stack_out": []
    },
    "1745": {
      "op": "bytec 19 // \"app_id_new\"",
      "defined_out": [
        "\"app_id_new\""
      ],
      "stack_out": [
        "\"app_id_new\""
      ]
    },
    "1747": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"app_id_new\"",
        "app_id_new#0 (copy)"
      ],
      "stack_out": [
        "\"app_id_new\"",
        "app_id_new#0 (copy)"
      ]
    },
    "1749": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1750": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\""
      ],
      "stack_out": [
        "\"state\""
      ]
    },
    "1751": {
      "op": "bytec 13 // 0x04",
      "defined_out": [
        "\"state\"",
        "0x04"
      ],
      "stack_out": [
        "\"state\"",
        "0x04"
      ]
    },
    "1753": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1754": {
      "retsub": true,
      "op": "retsub"
    },
    "1755": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_set",
      "params": {
        "pla_manager#0": "bytes",
        "tc_sha256#0": "bytes",
        "noticeboard_fees#0": "bytes",
        "noticeboard_terms_timing#0": "bytes",
        "noticeboard_terms_node#0": "bytes"
      },
      "block": "noticeboard_set",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "1758": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1759": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "1760": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1761": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1762": {
      "op": "bytec 13 // 0x04",
      "defined_out": [
        "0x04",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x04"
      ]
    },
    "1764": {
      "op": "!=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1765": {
      "error": "Cannot be called from state RETIRED.",
      "op": "assert // Cannot be called from state RETIRED.",
      "stack_out": []
    },
    "1766": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1768": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1769": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "1771": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1772": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1773": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1774": {
      "op": "bnz noticeboard_set_bool_true@2",
      "stack_out": []
    },
    "1777": {
      "op": "txn Sender"
    },
    "1779": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "1781": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1782": {
      "op": "bz noticeboard_set_bool_false@3",
      "stack_out": []
    },
    "1785": {
      "block": "noticeboard_set_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1786": {
      "op": "b noticeboard_set_bool_merge@4"
    },
    "1789": {
      "block": "noticeboard_set_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1790": {
      "block": "noticeboard_set_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Can only be called by platform manager or creator.",
      "op": "assert // Can only be called by platform manager or creator.",
      "defined_out": [],
      "stack_out": []
    },
    "1791": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\""
      ],
      "stack_out": [
        "\"pla_manager\""
      ]
    },
    "1793": {
      "op": "frame_dig -5",
      "defined_out": [
        "\"pla_manager\"",
        "pla_manager#0 (copy)"
      ],
      "stack_out": [
        "\"pla_manager\"",
        "pla_manager#0 (copy)"
      ]
    },
    "1795": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1796": {
      "op": "bytec 10 // \"tc_sha256\"",
      "defined_out": [
        "\"tc_sha256\""
      ],
      "stack_out": [
        "\"tc_sha256\""
      ]
    },
    "1798": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"tc_sha256\"",
        "tc_sha256#0 (copy)"
      ],
      "stack_out": [
        "\"tc_sha256\"",
        "tc_sha256#0 (copy)"
      ]
    },
    "1800": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1801": {
      "op": "frame_dig -3",
      "defined_out": [
        "noticeboard_fees#0 (copy)"
      ],
      "stack_out": [
        "noticeboard_fees#0 (copy)"
      ]
    },
    "1803": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "1806": {
      "op": "pushbytes 0x00000000000f4240",
      "defined_out": [
        "0x00000000000f4240",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0x00000000000f4240"
      ]
    },
    "1816": {
      "op": "b<=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1817": {
      "error": "Validator ad commission must be smaller or equal to the maximum possible platform commission.",
      "op": "assert // Validator ad commission must be smaller or equal to the maximum possible platform commission.",
      "stack_out": []
    },
    "1818": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\""
      ],
      "stack_out": [
        "\"noticeboard_fees\""
      ]
    },
    "1820": {
      "op": "frame_dig -3",
      "stack_out": [
        "\"noticeboard_fees\"",
        "noticeboard_fees#0 (copy)"
      ]
    },
    "1822": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1823": {
      "op": "bytec 11 // \"noticeboard_terms_timing\"",
      "defined_out": [
        "\"noticeboard_terms_timing\""
      ],
      "stack_out": [
        "\"noticeboard_terms_timing\""
      ]
    },
    "1825": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"noticeboard_terms_timing\"",
        "noticeboard_terms_timing#0 (copy)"
      ],
      "stack_out": [
        "\"noticeboard_terms_timing\"",
        "noticeboard_terms_timing#0 (copy)"
      ]
    },
    "1827": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1828": {
      "op": "frame_dig -1",
      "defined_out": [
        "noticeboard_terms_node#0 (copy)"
      ],
      "stack_out": [
        "noticeboard_terms_node#0 (copy)"
      ]
    },
    "1830": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "1833": {
      "op": "pushint 14 // 14",
      "defined_out": [
        "14",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "14"
      ]
    },
    "1835": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "tmp%7#0"
      ]
    },
    "1836": {
      "op": "dig 1",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%2#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "tmp%7#0",
        "reinterpret_biguint%2#0 (copy)"
      ]
    },
    "1838": {
      "op": "b>=",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "tmp%8#0"
      ]
    },
    "1839": {
      "error": "Validator ad does not have enough memory to store that many active delegators.",
      "op": "assert // Validator ad does not have enough memory to store that many active delegators.",
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "1840": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "1"
      ]
    },
    "1841": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "tmp%9#0"
      ]
    },
    "1842": {
      "op": "b>=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "1843": {
      "error": "There can be at least one delegator.",
      "op": "assert // There can be at least one delegator.",
      "stack_out": []
    },
    "1844": {
      "op": "bytec 12 // \"noticeboard_terms_node\"",
      "defined_out": [
        "\"noticeboard_terms_node\""
      ],
      "stack_out": [
        "\"noticeboard_terms_node\""
      ]
    },
    "1846": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"noticeboard_terms_node\"",
        "noticeboard_terms_node#0 (copy)"
      ]
    },
    "1848": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1849": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\""
      ],
      "stack_out": [
        "\"state\""
      ]
    },
    "1850": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "\"state\"",
        "0x02"
      ],
      "stack_out": [
        "\"state\"",
        "0x02"
      ]
    },
    "1852": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1853": {
      "retsub": true,
      "op": "retsub"
    },
    "1854": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_key_reg",
      "params": {
        "key_reg_info#0": "bytes",
        "txn#0": "uint64"
      },
      "block": "noticeboard_key_reg",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1857": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1859": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1860": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "1862": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1863": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1864": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1865": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "1866": {
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1868": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1870": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1872": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1873": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": []
    },
    "1874": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1876": {
      "op": "gtxns Amount",
      "defined_out": [
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0"
      ]
    },
    "1878": {
      "op": "itxn_begin"
    },
    "1879": {
      "op": "frame_dig -2",
      "defined_out": [
        "key_reg_info#0 (copy)",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "key_reg_info#0 (copy)"
      ]
    },
    "1881": {
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0"
      ]
    },
    "1884": {
      "op": "frame_dig -2",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_info#0 (copy)"
      ]
    },
    "1886": {
      "op": "extract 56 32 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0"
      ]
    },
    "1889": {
      "op": "frame_dig -2",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "key_reg_info#0 (copy)"
      ]
    },
    "1891": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "tmp%5#0"
      ]
    },
    "1894": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0"
      ]
    },
    "1895": {
      "op": "frame_dig -2",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "key_reg_info#0 (copy)"
      ]
    },
    "1897": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "tmp%6#0"
      ]
    },
    "1900": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0"
      ]
    },
    "1901": {
      "op": "frame_dig -2",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "key_reg_info#0 (copy)"
      ]
    },
    "1903": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "tmp%7#0"
      ]
    },
    "1906": {
      "op": "btoi",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteKeyDilution_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VoteKeyDilution_idx_0#0"
      ]
    },
    "1907": {
      "op": "frame_dig -2",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VoteKeyDilution_idx_0#0",
        "key_reg_info#0 (copy)"
      ]
    },
    "1909": {
      "op": "extract 88 64 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_StateProofPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteKeyDilution_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "key_reg_txn_fee#0"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VoteKeyDilution_idx_0#0",
        "inner_txn_params%0%%param_StateProofPK_idx_0#0"
      ]
    },
    "1912": {
      "op": "itxn_field StateProofPK",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0",
        "inner_txn_params%0%%param_VoteKeyDilution_idx_0#0"
      ]
    },
    "1914": {
      "op": "itxn_field VoteKeyDilution",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0",
        "inner_txn_params%0%%param_VoteLast_idx_0#0"
      ]
    },
    "1916": {
      "op": "itxn_field VoteLast",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0",
        "inner_txn_params%0%%param_VoteFirst_idx_0#0"
      ]
    },
    "1918": {
      "op": "itxn_field VoteFirst",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0",
        "inner_txn_params%0%%param_SelectionPK_idx_0#0"
      ]
    },
    "1920": {
      "op": "itxn_field SelectionPK",
      "stack_out": [
        "key_reg_txn_fee#0",
        "inner_txn_params%0%%param_VotePK_idx_0#0"
      ]
    },
    "1922": {
      "op": "itxn_field VotePK",
      "stack_out": [
        "key_reg_txn_fee#0"
      ]
    },
    "1924": {
      "op": "pushint 2 // keyreg",
      "defined_out": [
        "key_reg_txn_fee#0",
        "keyreg"
      ],
      "stack_out": [
        "key_reg_txn_fee#0",
        "keyreg"
      ]
    },
    "1926": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "key_reg_txn_fee#0"
      ]
    },
    "1928": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1930": {
      "op": "itxn_submit"
    },
    "1931": {
      "retsub": true,
      "op": "retsub"
    },
    "1932": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_optin_asa",
      "params": {
        "asa#0": "uint64",
        "txn#0": "uint64"
      },
      "block": "noticeboard_optin_asa",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1935": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1937": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1938": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "1940": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1941": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1942": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1943": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "1944": {
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1946": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1948": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1950": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1951": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": []
    },
    "1952": {
      "op": "frame_dig -1",
      "stack_out": [
        "txn#0 (copy)"
      ]
    },
    "1954": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1956": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "1958": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1959": {
      "error": "Sent amount doesn't match the MBR increase for opting into an ASA.",
      "op": "assert // Sent amount doesn't match the MBR increase for opting into an ASA.",
      "stack_out": []
    },
    "1960": {
      "op": "itxn_begin"
    },
    "1961": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1963": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "1964": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "1966": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "1968": {
      "op": "frame_dig -2",
      "defined_out": [
        "asa#0 (copy)"
      ],
      "stack_out": [
        "asa#0 (copy)"
      ]
    },
    "1970": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "1972": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "1974": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1976": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1977": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1979": {
      "op": "itxn_submit"
    },
    "1980": {
      "retsub": true,
      "op": "retsub"
    },
    "1981": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_config_asset",
      "params": {
        "asset_id#0": "uint64",
        "asset_info#0": "bytes",
        "txn#0": "uint64"
      },
      "block": "noticeboard_config_asset",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "1984": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1986": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1987": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "1989": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1990": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1991": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1992": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "1993": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1994": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "1995": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1996": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "1997": {
      "op": "bytec 13 // 0x04",
      "defined_out": [
        "0x04",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0x04"
      ]
    },
    "1999": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2000": {
      "error": "Cannot be called from state RETIRED.",
      "op": "assert // Cannot be called from state RETIRED.",
      "stack_out": []
    },
    "2001": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2003": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "mbr_cur#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "check%0#0"
      ]
    },
    "2005": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2006": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset_id#0 (copy)",
        "mbr_cur#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "asset_id#0 (copy)"
      ]
    },
    "2008": {
      "op": "bz noticeboard_config_asset_after_if_else@2",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2011": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "mbr_cur#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%5#0"
      ]
    },
    "2013": {
      "op": "frame_dig -3",
      "stack_out": [
        "mbr_cur#0",
        "tmp%5#0",
        "asset_id#0 (copy)"
      ]
    },
    "2015": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "mbr_cur#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "2017": {
      "op": "bury 1",
      "stack_out": [
        "mbr_cur#0",
        "tmp%7#0"
      ]
    },
    "2019": {
      "error": "Platform is not opted into the ASA.",
      "op": "assert // Platform is not opted into the ASA.",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2020": {
      "block": "noticeboard_config_asset_after_if_else@2",
      "stack_in": [
        "mbr_cur#0"
      ],
      "op": "frame_dig -3",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "asset_id#0 (copy)"
      ]
    },
    "2022": {
      "op": "itob",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%8#0"
      ]
    },
    "2023": {
      "op": "bytec 16 // 0x61737365745f",
      "defined_out": [
        "0x61737365745f",
        "tmp%8#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%8#0",
        "0x61737365745f"
      ]
    },
    "2025": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "0x61737365745f",
        "tmp%8#0"
      ]
    },
    "2026": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%9#0"
      ]
    },
    "2027": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset_info#0 (copy)",
        "tmp%9#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%9#0",
        "asset_info#0 (copy)"
      ]
    },
    "2029": {
      "op": "box_put",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2030": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%10#0"
      ]
    },
    "2032": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "mbr_new#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "check%1#0"
      ]
    },
    "2034": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0"
      ]
    },
    "2035": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbr_new#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "txn#0 (copy)"
      ]
    },
    "2037": {
      "op": "gtxns Receiver",
      "defined_out": [
        "mbr_new#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%11#0"
      ]
    },
    "2039": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "mbr_new#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "2041": {
      "op": "==",
      "defined_out": [
        "mbr_new#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%13#0"
      ]
    },
    "2042": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0"
      ]
    },
    "2043": {
      "op": "frame_dig 0",
      "defined_out": [
        "mbr_cur#0",
        "mbr_new#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "mbr_cur#0"
      ]
    },
    "2045": {
      "op": "-",
      "defined_out": [
        "mbr_cur#0",
        "mbr_pay_amount#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_pay_amount#0"
      ]
    },
    "2046": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbr_cur#0",
        "mbr_pay_amount#0",
        "txn#0 (copy)"
      ]
    },
    "2048": {
      "op": "gtxns Amount",
      "defined_out": [
        "mbr_cur#0",
        "mbr_pay_amount#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_pay_amount#0",
        "tmp%14#0"
      ]
    },
    "2050": {
      "op": "==",
      "defined_out": [
        "mbr_cur#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%15#0"
      ]
    },
    "2051": {
      "error": "Increase for the MBR was not paid.",
      "op": "assert // Increase for the MBR was not paid.",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2052": {
      "retsub": true,
      "op": "retsub"
    },
    "2053": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.noticeboard_income",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "noticeboard_income",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "2056": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2058": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2059": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "2061": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2062": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2063": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2064": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "2065": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "2067": {
      "op": "bz noticeboard_income_else_body@3",
      "stack_out": []
    },
    "2070": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2072": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "asset_id#0 (copy)"
      ]
    },
    "2074": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "bal#0",
        "check%0#0"
      ],
      "stack_out": [
        "bal#0",
        "check%0#0"
      ]
    },
    "2076": {
      "error": "account opted into asset",
      "op": "assert // account opted into asset",
      "stack_out": [
        "bal#0"
      ]
    },
    "2077": {
      "op": "itxn_begin"
    },
    "2078": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bal#0",
        "0"
      ]
    },
    "2079": {
      "op": "bytec 4 // \"pla_manager\"",
      "stack_out": [
        "bal#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "2081": {
      "op": "app_global_get_ex",
      "defined_out": [
        "bal#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "bal#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2082": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "bal#0",
        "maybe_value%1#0"
      ]
    },
    "2083": {
      "op": "itxn_field AssetReceiver"
    },
    "2085": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "2087": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "2089": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "2091": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "2093": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2095": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2096": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2098": {
      "op": "itxn_submit"
    },
    "2099": {
      "op": "b noticeboard_income_after_if_else@5"
    },
    "2102": {
      "block": "noticeboard_income_else_body@3",
      "stack_in": [],
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2104": {
      "op": "acct_params_get AcctBalance",
      "defined_out": [
        "check%1#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "check%1#0"
      ]
    },
    "2106": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%1#0"
      ]
    },
    "2107": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0",
        "value%1#0"
      ],
      "stack_out": [
        "value%1#0",
        "tmp%5#0"
      ]
    },
    "2109": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%2#0",
        "value%1#0",
        "value%2#0"
      ],
      "stack_out": [
        "value%1#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "2111": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "value%1#0",
        "value%2#0"
      ]
    },
    "2112": {
      "op": "-",
      "defined_out": [
        "bal#0"
      ],
      "stack_out": [
        "bal#0"
      ]
    },
    "2113": {
      "op": "itxn_begin"
    },
    "2114": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "bal#0"
      ],
      "stack_out": [
        "bal#0",
        "0"
      ]
    },
    "2115": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "bal#0"
      ],
      "stack_out": [
        "bal#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "2117": {
      "op": "app_global_get_ex",
      "defined_out": [
        "bal#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "bal#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2118": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "bal#0",
        "maybe_value%2#0"
      ]
    },
    "2119": {
      "op": "itxn_field Receiver"
    },
    "2121": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "2123": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "2124": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "2126": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2127": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "2129": {
      "op": "itxn_submit"
    },
    "2130": {
      "block": "noticeboard_income_after_if_else@5",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "2131": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.template_load_init",
      "params": {
        "name#0": "bytes",
        "template_size#0": "uint64"
      },
      "block": "template_load_init",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2134": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2136": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2137": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "2139": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2140": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2141": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2142": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "2143": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2144": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "2145": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2146": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2147": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0x01"
      ]
    },
    "2148": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2149": {
      "error": "Cannot be called from other state than DEPLOYED.",
      "op": "assert // Cannot be called from other state than DEPLOYED.",
      "stack_out": []
    },
    "2150": {
      "op": "frame_dig -2",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "2152": {
      "op": "bytec 6 // 0x76",
      "defined_out": [
        "0x76",
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)",
        "0x76"
      ]
    },
    "2154": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2155": {
      "op": "bz template_load_init_else_body@2",
      "stack_out": []
    },
    "2158": {
      "op": "bytec 6 // 0x76",
      "stack_out": [
        "0x76"
      ]
    },
    "2160": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x76",
        "template_size#0 (copy)"
      ],
      "stack_out": [
        "0x76",
        "template_size#0 (copy)"
      ]
    },
    "2162": {
      "op": "box_create",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2163": {
      "op": "assert",
      "stack_out": []
    },
    "2164": {
      "op": "b template_load_init_after_if_else@6"
    },
    "2167": {
      "block": "template_load_init_else_body@2",
      "stack_in": [],
      "op": "frame_dig -2",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "2169": {
      "op": "bytec 7 // 0x64",
      "defined_out": [
        "0x64",
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)",
        "0x64"
      ]
    },
    "2171": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "2172": {
      "error": "Unexpected name for box for a contract template.",
      "op": "assert // Unexpected name for box for a contract template.",
      "stack_out": []
    },
    "2173": {
      "op": "bytec 7 // 0x64",
      "stack_out": [
        "0x64"
      ]
    },
    "2175": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64",
        "template_size#0 (copy)"
      ],
      "stack_out": [
        "0x64",
        "template_size#0 (copy)"
      ]
    },
    "2177": {
      "op": "box_create",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "2178": {
      "op": "assert",
      "stack_out": []
    },
    "2179": {
      "block": "template_load_init_after_if_else@6",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "2180": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.template_load_data",
      "params": {
        "name#0": "bytes",
        "offset#0": "uint64",
        "data#0": "bytes"
      },
      "block": "template_load_data",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "2183": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2185": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2186": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "2188": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2189": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2190": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2191": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "2192": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2193": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "2194": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2195": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2196": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0x01"
      ]
    },
    "2197": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2198": {
      "error": "Cannot be called from other state than DEPLOYED.",
      "op": "assert // Cannot be called from other state than DEPLOYED.",
      "stack_out": []
    },
    "2199": {
      "op": "frame_dig -3",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "2201": {
      "op": "bytec 6 // 0x76",
      "defined_out": [
        "0x76",
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)",
        "0x76"
      ]
    },
    "2203": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2204": {
      "op": "bz template_load_data_else_body@2",
      "stack_out": []
    },
    "2207": {
      "op": "bytec 6 // 0x76",
      "stack_out": [
        "0x76"
      ]
    },
    "2209": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x76",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "0x76",
        "offset#0 (copy)"
      ]
    },
    "2211": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x76",
        "data#0 (copy)",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "0x76",
        "offset#0 (copy)",
        "data#0 (copy)"
      ]
    },
    "2213": {
      "op": "box_replace",
      "stack_out": []
    },
    "2214": {
      "op": "b template_load_data_after_if_else@6"
    },
    "2217": {
      "block": "template_load_data_else_body@2",
      "stack_in": [],
      "op": "frame_dig -3",
      "defined_out": [
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)"
      ]
    },
    "2219": {
      "op": "bytec 7 // 0x64",
      "defined_out": [
        "0x64",
        "name#0 (copy)"
      ],
      "stack_out": [
        "name#0 (copy)",
        "0x64"
      ]
    },
    "2221": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2222": {
      "error": "Unexpected name for box for a contract template.",
      "op": "assert // Unexpected name for box for a contract template.",
      "stack_out": []
    },
    "2223": {
      "op": "bytec 7 // 0x64",
      "stack_out": [
        "0x64"
      ]
    },
    "2225": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x64",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "0x64",
        "offset#0 (copy)"
      ]
    },
    "2227": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64",
        "data#0 (copy)",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "0x64",
        "offset#0 (copy)",
        "data#0 (copy)"
      ]
    },
    "2229": {
      "op": "box_replace",
      "stack_out": []
    },
    "2230": {
      "block": "template_load_data_after_if_else@6",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "2231": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.partner_config",
      "params": {
        "partner_address#0": "bytes",
        "partner_commissions#0": "bytes",
        "partner_delete#0": "bytes",
        "txn#0": "uint64"
      },
      "block": "partner_config",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "2234": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2236": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "2237": {
      "op": "bytec 4 // \"pla_manager\"",
      "defined_out": [
        "\"pla_manager\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"pla_manager\""
      ]
    },
    "2239": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2240": {
      "error": "check self.pla_manager exists",
      "op": "assert // check self.pla_manager exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "2241": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "2242": {
      "error": "Can only be called by platform manager.",
      "op": "assert // Can only be called by platform manager.",
      "stack_out": []
    },
    "2243": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "2244": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "2245": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2246": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "2247": {
      "op": "bytec 13 // 0x04",
      "defined_out": [
        "0x04",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0x04"
      ]
    },
    "2249": {
      "op": "!=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "2250": {
      "error": "Cannot be called from state RETIRED.",
      "op": "assert // Cannot be called from state RETIRED.",
      "stack_out": []
    },
    "2251": {
      "op": "frame_dig -2",
      "defined_out": [
        "partner_delete#0 (copy)"
      ],
      "stack_out": [
        "partner_delete#0 (copy)"
      ]
    },
    "2253": {
      "op": "intc_0 // 0",
      "stack_out": [
        "partner_delete#0 (copy)",
        "0"
      ]
    },
    "2254": {
      "op": "getbit",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "2255": {
      "op": "bnz partner_config_else_body@2",
      "stack_out": []
    },
    "2258": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "2260": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "mbr_cur#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "check%0#0"
      ]
    },
    "2262": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2263": {
      "op": "bytec 17 // 0x706172746e65725f",
      "defined_out": [
        "0x706172746e65725f",
        "mbr_cur#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "0x706172746e65725f"
      ]
    },
    "2265": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x706172746e65725f",
        "mbr_cur#0",
        "partner_address#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "0x706172746e65725f",
        "partner_address#0 (copy)"
      ]
    },
    "2267": {
      "op": "concat",
      "defined_out": [
        "mbr_cur#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%5#0"
      ]
    },
    "2268": {
      "op": "frame_dig -3",
      "defined_out": [
        "mbr_cur#0",
        "partner_commissions#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%5#0",
        "partner_commissions#0 (copy)"
      ]
    },
    "2270": {
      "op": "box_put",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2271": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "mbr_cur#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "tmp%6#0"
      ]
    },
    "2273": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "mbr_cur#0",
        "mbr_new#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "check%1#0"
      ]
    },
    "2275": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0"
      ]
    },
    "2276": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "txn#0 (copy)"
      ]
    },
    "2278": {
      "op": "gtxns Receiver",
      "defined_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%7#0"
      ]
    },
    "2280": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "2282": {
      "op": "==",
      "defined_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%9#0"
      ]
    },
    "2283": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "mbr_cur#0",
        "mbr_new#0"
      ]
    },
    "2284": {
      "op": "swap",
      "stack_out": [
        "mbr_new#0",
        "mbr_cur#0"
      ]
    },
    "2285": {
      "op": "-",
      "defined_out": [
        "mbr_pay_amount#0"
      ],
      "stack_out": [
        "mbr_pay_amount#0"
      ]
    },
    "2286": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbr_pay_amount#0",
        "txn#0 (copy)"
      ]
    },
    "2288": {
      "op": "gtxns Amount",
      "defined_out": [
        "mbr_pay_amount#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "mbr_pay_amount#0",
        "tmp%10#0"
      ]
    },
    "2290": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "2291": {
      "error": "Fee for MBR increase for creating partner on platform was not paid.",
      "op": "assert // Fee for MBR increase for creating partner on platform was not paid.",
      "stack_out": []
    },
    "2292": {
      "op": "b partner_config_after_if_else@3"
    },
    "2295": {
      "block": "partner_config_else_body@2",
      "stack_in": [],
      "op": "bytec 17 // 0x706172746e65725f",
      "defined_out": [
        "0x706172746e65725f"
      ],
      "stack_out": [
        "0x706172746e65725f"
      ]
    },
    "2297": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x706172746e65725f",
        "partner_address#0 (copy)"
      ],
      "stack_out": [
        "0x706172746e65725f",
        "partner_address#0 (copy)"
      ]
    },
    "2299": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "2300": {
      "op": "box_del",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "2301": {
      "error": "Error while deleting partner box.",
      "op": "assert // Error while deleting partner box.",
      "stack_out": []
    },
    "2302": {
      "block": "partner_config_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "2303": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.user_create",
      "params": {
        "user_role#0": "bytes",
        "txn#0": "uint64"
      },
      "block": "user_create",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "2306": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dll#0"
      ]
    },
    "2307": {
      "op": "dupn 2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0"
      ]
    },
    "2309": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0"
      ]
    },
    "2311": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "0"
      ]
    },
    "2312": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "0",
        "\"state\""
      ]
    },
    "2313": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2314": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "maybe_value%0#0"
      ]
    },
    "2315": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "0x02",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "maybe_value%0#0",
        "0x02"
      ]
    },
    "2317": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "tmp%0#0"
      ]
    },
    "2318": {
      "error": "Cannot be called from other state than SET.",
      "op": "assert // Cannot be called from other state than SET.",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0"
      ]
    },
    "2319": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "tmp%1#0"
      ]
    },
    "2321": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "mbr_cur#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "check%0#0"
      ]
    },
    "2323": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0"
      ]
    },
    "2324": {
      "op": "txn Sender"
    },
    "2326": {
      "op": "dup",
      "defined_out": [
        "mbr_cur#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user#0"
      ]
    },
    "2327": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "mbr_cur#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2328": {
      "op": "bury 1",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_exists%1#0"
      ]
    },
    "2330": {
      "op": "!",
      "defined_out": [
        "mbr_cur#0",
        "tmp%3#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%3#0"
      ]
    },
    "2331": {
      "error": "User already exists on the platform.",
      "op": "assert // User already exists on the platform.",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2332": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_cur#0",
        "user#0",
        "user_role#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user_role#0 (copy)"
      ]
    },
    "2334": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "mbr_cur#0",
        "user#0",
        "user_role#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user_role#0 (copy)",
        "0x76616c5f"
      ]
    },
    "2335": {
      "op": "==",
      "defined_out": [
        "mbr_cur#0",
        "tmp%4#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%4#0"
      ]
    },
    "2336": {
      "op": "bz user_create_else_body@2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2339": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0"
      ]
    },
    "2340": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\"",
        "0",
        "mbr_cur#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0",
        "\"noticeboard_fees\""
      ]
    },
    "2342": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "mbr_cur#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2343": {
      "error": "check self.noticeboard_fees exists",
      "op": "assert // check self.noticeboard_fees exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%2#0"
      ]
    },
    "2344": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "mbr_cur#0",
        "tmp%5#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%5#0"
      ]
    },
    "2347": {
      "op": "btoi",
      "defined_out": [
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ]
    },
    "2348": {
      "op": "frame_bury 3",
      "defined_out": [
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2350": {
      "op": "bytec 14 // 0x646c6c5f5f76616c",
      "defined_out": [
        "dll_name#0",
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll_name#0"
      ]
    },
    "2352": {
      "op": "frame_bury 1",
      "defined_out": [
        "dll_name#0",
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2354": {
      "op": "bytec 14 // 0x646c6c5f5f76616c",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0"
      ]
    },
    "2356": {
      "op": "frame_bury 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2358": {
      "op": "b user_create_after_if_else@6"
    },
    "2361": {
      "block": "user_create_else_body@2",
      "stack_in": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "user_role#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user_role#0 (copy)"
      ]
    },
    "2363": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "user_role#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user_role#0 (copy)",
        "0x64656c5f"
      ]
    },
    "2365": {
      "op": "==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%6#0"
      ]
    },
    "2366": {
      "error": "Requested user role does not exist.",
      "op": "assert // Requested user role does not exist.",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2367": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0"
      ]
    },
    "2368": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\"",
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0",
        "\"noticeboard_fees\""
      ]
    },
    "2370": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2371": {
      "error": "check self.noticeboard_fees exists",
      "op": "assert // check self.noticeboard_fees exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%3#0"
      ]
    },
    "2372": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%7#0"
      ]
    },
    "2375": {
      "op": "btoi",
      "defined_out": [
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user_fee#0"
      ]
    },
    "2376": {
      "op": "frame_bury 3",
      "defined_out": [
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2378": {
      "op": "bytec 15 // 0x646c6c5f5f64656c",
      "defined_out": [
        "dll_name#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll_name#0"
      ]
    },
    "2380": {
      "op": "frame_bury 1",
      "defined_out": [
        "dll_name#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2382": {
      "op": "bytec 15 // 0x646c6c5f5f64656c",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0"
      ]
    },
    "2384": {
      "op": "frame_bury 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2386": {
      "block": "user_create_after_if_else@6",
      "stack_in": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0"
      ]
    },
    "2387": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "dll#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0",
        "dll#0"
      ]
    },
    "2389": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2390": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "maybe_value%4#0"
      ]
    },
    "2391": {
      "op": "extract 8 32 // on error: Index access is out of bounds",
      "defined_out": [
        "dll#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%8#0"
      ]
    },
    "2394": {
      "op": "global ZeroAddress",
      "defined_out": [
        "dll#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "2396": {
      "op": "==",
      "defined_out": [
        "dll#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%10#0"
      ]
    },
    "2397": {
      "op": "bz user_create_else_body@8",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2400": {
      "op": "global ZeroAddress"
    },
    "2402": {
      "op": "dup",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0"
      ]
    },
    "2403": {
      "op": "frame_bury 2",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0"
      ]
    },
    "2405": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "0"
      ]
    },
    "2406": {
      "op": "frame_dig 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "0",
        "dll#0"
      ]
    },
    "2408": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2409": {
      "op": "cover 2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2411": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2412": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%5#0"
      ]
    },
    "2413": {
      "op": "frame_dig 5",
      "defined_out": [
        "dll#0",
        "maybe_value%5#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%5#0",
        "user#0"
      ]
    },
    "2415": {
      "op": "dup",
      "defined_out": [
        "dll#0",
        "maybe_value%5#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%5#0",
        "user#0 (copy)",
        "user#0 (copy)"
      ]
    },
    "2416": {
      "op": "cover 3",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "maybe_value%5#0",
        "user#0 (copy)"
      ]
    },
    "2418": {
      "op": "replace2 8",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%0#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "updated_data%0#0"
      ]
    },
    "2420": {
      "op": "dig 1",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "updated_data%0#0",
        "dll#0 (copy)"
      ]
    },
    "2422": {
      "op": "swap",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "dll#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2423": {
      "op": "app_global_put",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0"
      ]
    },
    "2424": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "0"
      ]
    },
    "2425": {
      "op": "dig 1",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2427": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2428": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "maybe_value%6#0"
      ]
    },
    "2429": {
      "op": "uncover 2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%6#0",
        "user#0"
      ]
    },
    "2431": {
      "op": "replace2 40",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%1#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "updated_data%1#0"
      ]
    },
    "2433": {
      "op": "app_global_put",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0"
      ]
    },
    "2434": {
      "op": "b user_create_after_if_else@9"
    },
    "2437": {
      "block": "user_create_else_body@8",
      "stack_in": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0"
      ]
    },
    "2438": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "dll#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0",
        "dll#0"
      ]
    },
    "2440": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2441": {
      "op": "cover 2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2443": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2444": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0",
        "maybe_value%7#0"
      ]
    },
    "2445": {
      "op": "extract 40 32 // on error: Index access is out of bounds",
      "defined_out": [
        "dll#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0",
        "prev_user#0"
      ]
    },
    "2448": {
      "op": "dup",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "dll#0",
        "prev_user#0",
        "prev_user#0 (copy)"
      ]
    },
    "2449": {
      "op": "uncover 2",
      "defined_out": [
        "dll#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0"
      ]
    },
    "2451": {
      "op": "global ZeroAddress",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "next_user#0"
      ]
    },
    "2453": {
      "op": "frame_bury 2",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0"
      ]
    },
    "2455": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "0"
      ]
    },
    "2456": {
      "op": "dig 1",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2458": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2459": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%8#0"
      ]
    },
    "2460": {
      "op": "frame_dig 5",
      "defined_out": [
        "dll#0",
        "maybe_value%8#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%8#0",
        "user#0"
      ]
    },
    "2462": {
      "op": "dup",
      "defined_out": [
        "dll#0",
        "maybe_value%8#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%8#0",
        "user#0 (copy)",
        "user#0 (copy)"
      ]
    },
    "2463": {
      "op": "cover 3",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "maybe_value%8#0",
        "user#0 (copy)"
      ]
    },
    "2465": {
      "op": "replace2 40",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%2#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "dll#0",
        "updated_data%2#0"
      ]
    },
    "2467": {
      "op": "app_global_put",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0"
      ]
    },
    "2468": {
      "op": "dig 1",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "prev_user#0 (copy)",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "prev_user#0 (copy)"
      ]
    },
    "2470": {
      "op": "box_get",
      "defined_out": [
        "dll#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2471": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%9#0"
      ]
    },
    "2472": {
      "op": "swap",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "maybe_value%9#0",
        "user#0"
      ]
    },
    "2473": {
      "op": "replace2 44",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%3#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "updated_data%3#0"
      ]
    },
    "2475": {
      "op": "box_put",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0"
      ]
    },
    "2476": {
      "block": "user_create_after_if_else@9",
      "stack_in": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "0"
      ]
    },
    "2477": {
      "op": "frame_dig 0",
      "defined_out": [
        "0",
        "dll#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "0",
        "dll#0"
      ]
    },
    "2479": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2480": {
      "op": "cover 2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2482": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2483": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%10#0"
      ]
    },
    "2484": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "dll#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "tmp%12#0"
      ]
    },
    "2487": {
      "op": "btoi",
      "defined_out": [
        "dll#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "tmp%13#0"
      ]
    },
    "2488": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "dll#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "tmp%13#0",
        "1"
      ]
    },
    "2489": {
      "op": "+",
      "defined_out": [
        "dll#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "to_encode%0#0"
      ]
    },
    "2490": {
      "op": "itob",
      "defined_out": [
        "dll#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "val_as_bytes%0#0"
      ]
    },
    "2491": {
      "op": "intc_0 // 0",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2492": {
      "op": "dig 2",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "val_as_bytes%0#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2494": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "val_as_bytes%0#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "2495": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "val_as_bytes%0#0",
        "maybe_value%11#0"
      ]
    },
    "2496": {
      "op": "swap",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "maybe_value%11#0",
        "val_as_bytes%0#0"
      ]
    },
    "2497": {
      "op": "replace2 0",
      "defined_out": [
        "dll#0",
        "updated_data%4#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "dll#0",
        "updated_data%4#0"
      ]
    },
    "2499": {
      "op": "app_global_put",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0"
      ]
    },
    "2500": {
      "op": "intc 4 // 880",
      "defined_out": [
        "880",
        "dll#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "880"
      ]
    },
    "2502": {
      "op": "bzero",
      "defined_out": [
        "dll#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "tmp%14#0"
      ]
    },
    "2503": {
      "op": "frame_dig -2",
      "defined_out": [
        "dll#0",
        "tmp%14#0",
        "user_role#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "tmp%14#0",
        "user_role#0 (copy)"
      ]
    },
    "2505": {
      "op": "frame_dig 1",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "tmp%14#0",
        "user_role#0 (copy)"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "tmp%14#0",
        "user_role#0 (copy)",
        "dll_name#0"
      ]
    },
    "2507": {
      "op": "concat",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%2#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "2508": {
      "op": "uncover 2",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%2#0",
        "prev_user#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0",
        "prev_user#0"
      ]
    },
    "2510": {
      "op": "concat",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%14#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "2511": {
      "op": "frame_dig 2",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%3#0",
        "next_user#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%14#0",
        "encoded_tuple_buffer%3#0",
        "next_user#0"
      ]
    },
    "2513": {
      "op": "concat",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%4#0",
        "next_user#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%14#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "2514": {
      "op": "swap",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "encoded_tuple_buffer%4#0",
        "tmp%14#0"
      ]
    },
    "2515": {
      "op": "concat",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%5#0",
        "next_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "2516": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%5#0",
        "next_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "2526": {
      "op": "concat",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%6#0",
        "next_user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2527": {
      "op": "frame_dig 5",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "encoded_tuple_buffer%6#0",
        "next_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "encoded_tuple_buffer%6#0",
        "user#0"
      ]
    },
    "2529": {
      "op": "swap",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "user#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "2530": {
      "op": "box_put",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2531": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "tmp%16#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%16#0"
      ]
    },
    "2533": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "dll#0",
        "dll_name#0",
        "mbr_new#0",
        "next_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0",
        "check%1#0"
      ]
    },
    "2535": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0"
      ]
    },
    "2536": {
      "op": "frame_dig -1",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_new#0",
        "next_user#0",
        "txn#0 (copy)",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0",
        "txn#0 (copy)"
      ]
    },
    "2538": {
      "op": "gtxns Receiver",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_new#0",
        "next_user#0",
        "tmp%17#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0",
        "tmp%17#0"
      ]
    },
    "2540": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_new#0",
        "next_user#0",
        "tmp%17#0",
        "tmp%18#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0",
        "tmp%17#0",
        "tmp%18#0"
      ]
    },
    "2542": {
      "op": "==",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_new#0",
        "next_user#0",
        "tmp%19#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0",
        "tmp%19#0"
      ]
    },
    "2543": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0"
      ]
    },
    "2544": {
      "op": "frame_dig 4",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "mbr_new#0",
        "next_user#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_new#0",
        "mbr_cur#0"
      ]
    },
    "2546": {
      "op": "-",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "next_user#0",
        "tmp%20#0",
        "user#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%20#0"
      ]
    },
    "2547": {
      "op": "frame_dig 3",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "next_user#0",
        "tmp%20#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%20#0",
        "user_fee#0"
      ]
    },
    "2549": {
      "op": "+",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "mbr_pay_amount#0",
        "next_user#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_pay_amount#0"
      ]
    },
    "2550": {
      "op": "frame_dig -1",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_pay_amount#0",
        "txn#0 (copy)"
      ]
    },
    "2552": {
      "op": "gtxns Amount",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "mbr_pay_amount#0",
        "next_user#0",
        "tmp%21#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "mbr_pay_amount#0",
        "tmp%21#0"
      ]
    },
    "2554": {
      "op": "==",
      "defined_out": [
        "dll#0",
        "dll_name#0",
        "mbr_cur#0",
        "next_user#0",
        "tmp%22#0",
        "user#0",
        "user_fee#0"
      ],
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0",
        "tmp%22#0"
      ]
    },
    "2555": {
      "error": "User did not pay for the increase in MBR and user registration fee.",
      "op": "assert // User did not pay for the increase in MBR and user registration fee.",
      "stack_out": [
        "dll#0",
        "dll_name#0",
        "next_user#0",
        "user_fee#0",
        "mbr_cur#0",
        "user#0"
      ]
    },
    "2556": {
      "retsub": true,
      "op": "retsub"
    },
    "2557": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.user_delete",
      "params": {},
      "block": "user_delete",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "2560": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2562": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "mbr_cur#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "check%0#0"
      ]
    },
    "2564": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_cur#0"
      ]
    },
    "2565": {
      "op": "txn Sender"
    },
    "2567": {
      "op": "dupn 2",
      "defined_out": [
        "mbr_cur#0",
        "user#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "user#0",
        "user#0 (copy)"
      ]
    },
    "2569": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "mbr_cur#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "user#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2570": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "user#0",
        "maybe_value%0#0"
      ]
    },
    "2571": {
      "op": "extract 12 32 // on error: Index access is out of bounds",
      "defined_out": [
        "mbr_cur#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "user#0",
        "prev_user#0"
      ]
    },
    "2574": {
      "op": "dup",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "user#0",
        "prev_user#0",
        "prev_user#0 (copy)"
      ]
    },
    "2575": {
      "op": "uncover 2",
      "defined_out": [
        "mbr_cur#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0"
      ]
    },
    "2577": {
      "op": "dup",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "user#0 (copy)"
      ]
    },
    "2578": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "mbr_cur#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2579": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%1#0"
      ]
    },
    "2580": {
      "op": "extract 44 32 // on error: Index access is out of bounds",
      "defined_out": [
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "prev_user#0",
        "user#0",
        "next_user#0"
      ]
    },
    "2583": {
      "op": "cover 2",
      "defined_out": [
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ]
    },
    "2585": {
      "op": "dup",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "user#0 (copy)"
      ]
    },
    "2586": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2587": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%2#0"
      ]
    },
    "2588": {
      "op": "intc 5 // 956",
      "defined_out": [
        "956",
        "maybe_value%2#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%2#0",
        "956"
      ]
    },
    "2590": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "956",
        "maybe_value%2#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "maybe_value%2#0",
        "956",
        "8"
      ]
    },
    "2591": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%4#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "tmp%4#0"
      ]
    },
    "2592": {
      "op": "btoi",
      "defined_out": [
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%5#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "tmp%5#0"
      ]
    },
    "2593": {
      "op": "!",
      "defined_out": [
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%6#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0",
        "tmp%6#0"
      ]
    },
    "2594": {
      "error": "User has one or more active smart contracts.",
      "op": "assert // User has one or more active smart contracts.",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ]
    },
    "2595": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "2596": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "maybe_value%3#0"
      ]
    },
    "2597": {
      "op": "extract 4 8 // on error: Index access is out of bounds",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0",
        "dll#0"
      ]
    },
    "2600": {
      "op": "swap",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0"
      ]
    },
    "2601": {
      "op": "global ZeroAddress",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%8#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "tmp%8#0"
      ]
    },
    "2603": {
      "op": "==",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%9#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "tmp%9#0"
      ]
    },
    "2604": {
      "op": "bz user_delete_else_body@3",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2607": {
      "op": "frame_dig 3"
    },
    "2609": {
      "op": "global ZeroAddress",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%10#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "tmp%10#0"
      ]
    },
    "2611": {
      "op": "==",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "tmp%11#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "tmp%11#0"
      ]
    },
    "2612": {
      "op": "bz user_delete_else_body@3",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2615": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0"
      ]
    },
    "2616": {
      "op": "frame_dig 4",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0"
      ]
    },
    "2618": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2619": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2621": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "2622": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%4#0"
      ]
    },
    "2623": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%0#0",
        "dll#0",
        "maybe_value%4#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%4#0",
        "assigned_value%0#0"
      ]
    },
    "2625": {
      "op": "replace2 8",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%0#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "updated_data%0#0"
      ]
    },
    "2627": {
      "op": "dig 1",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "updated_data%0#0",
        "dll#0 (copy)"
      ]
    },
    "2629": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "dll#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "2630": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0"
      ]
    },
    "2631": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "0"
      ]
    },
    "2632": {
      "op": "dig 1",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2634": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "2635": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%5#0"
      ]
    },
    "2636": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%1#0",
        "dll#0",
        "maybe_value%5#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%5#0",
        "assigned_value%1#0"
      ]
    },
    "2638": {
      "op": "replace2 40",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%1#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "updated_data%1#0"
      ]
    },
    "2640": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2641": {
      "op": "b user_delete_after_if_else@10"
    },
    "2644": {
      "block": "user_delete_else_body@3",
      "stack_in": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ],
      "op": "frame_dig 2"
    },
    "2646": {
      "op": "global ZeroAddress",
      "defined_out": [
        "prev_user#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "tmp%12#0"
      ]
    },
    "2648": {
      "op": "==",
      "defined_out": [
        "prev_user#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "tmp%13#0"
      ]
    },
    "2649": {
      "op": "bz user_delete_else_body@5",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2652": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0"
      ]
    },
    "2653": {
      "op": "frame_dig 4",
      "defined_out": [
        "0",
        "dll#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0"
      ]
    },
    "2655": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2656": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2658": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%6#0",
        "maybe_value%6#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "2659": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%6#0"
      ]
    },
    "2660": {
      "op": "frame_dig 3",
      "defined_out": [
        "dll#0",
        "maybe_value%6#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%6#0",
        "next_user#0"
      ]
    },
    "2662": {
      "op": "dup",
      "defined_out": [
        "dll#0",
        "maybe_value%6#0",
        "next_user#0",
        "next_user#0 (copy)",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%6#0",
        "next_user#0 (copy)",
        "next_user#0 (copy)"
      ]
    },
    "2663": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "next_user#0",
        "maybe_value%6#0",
        "next_user#0 (copy)"
      ]
    },
    "2665": {
      "op": "replace2 8",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%2#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "next_user#0",
        "updated_data%2#0"
      ]
    },
    "2667": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "updated_data%2#0",
        "dll#0"
      ]
    },
    "2669": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "dll#0",
        "updated_data%2#0"
      ]
    },
    "2670": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0"
      ]
    },
    "2671": {
      "op": "dup",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "next_user#0 (copy)"
      ]
    },
    "2672": {
      "op": "box_get",
      "defined_out": [
        "dll#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "2673": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "maybe_value%7#0"
      ]
    },
    "2674": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%3#0",
        "dll#0",
        "maybe_value%7#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "maybe_value%7#0",
        "assigned_value%3#0"
      ]
    },
    "2676": {
      "op": "replace2 12",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%3#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "updated_data%3#0"
      ]
    },
    "2678": {
      "op": "box_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2679": {
      "op": "b user_delete_after_if_else@10"
    },
    "2682": {
      "block": "user_delete_else_body@5",
      "stack_in": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ],
      "op": "frame_dig 3"
    },
    "2684": {
      "op": "global ZeroAddress",
      "defined_out": [
        "next_user#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "tmp%15#0"
      ]
    },
    "2686": {
      "op": "==",
      "defined_out": [
        "next_user#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "tmp%16#0"
      ]
    },
    "2687": {
      "op": "bz user_delete_else_body@7",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2690": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "next_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0"
      ]
    },
    "2691": {
      "op": "frame_dig 4",
      "defined_out": [
        "0",
        "dll#0",
        "next_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0"
      ]
    },
    "2693": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)",
        "next_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2694": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2696": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "next_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "2697": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%8#0"
      ]
    },
    "2698": {
      "op": "frame_dig 2",
      "defined_out": [
        "dll#0",
        "maybe_value%8#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%8#0",
        "prev_user#0"
      ]
    },
    "2700": {
      "op": "dup",
      "defined_out": [
        "dll#0",
        "maybe_value%8#0",
        "next_user#0",
        "prev_user#0",
        "prev_user#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%8#0",
        "prev_user#0 (copy)",
        "prev_user#0 (copy)"
      ]
    },
    "2701": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%8#0",
        "prev_user#0 (copy)"
      ]
    },
    "2703": {
      "op": "replace2 40",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%4#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "prev_user#0",
        "updated_data%4#0"
      ]
    },
    "2705": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "updated_data%4#0",
        "dll#0"
      ]
    },
    "2707": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "dll#0",
        "updated_data%4#0"
      ]
    },
    "2708": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0"
      ]
    },
    "2709": {
      "op": "dup",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "prev_user#0 (copy)"
      ]
    },
    "2710": {
      "op": "box_get",
      "defined_out": [
        "dll#0",
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "2711": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%9#0"
      ]
    },
    "2712": {
      "op": "global ZeroAddress",
      "defined_out": [
        "assigned_value%5#0",
        "dll#0",
        "maybe_value%9#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%9#0",
        "assigned_value%5#0"
      ]
    },
    "2714": {
      "op": "replace2 44",
      "defined_out": [
        "dll#0",
        "next_user#0",
        "prev_user#0",
        "updated_data%5#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "updated_data%5#0"
      ]
    },
    "2716": {
      "op": "box_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2717": {
      "op": "b user_delete_after_if_else@10"
    },
    "2720": {
      "block": "user_delete_else_body@7",
      "stack_in": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0"
      ]
    },
    "2722": {
      "op": "dup",
      "defined_out": [
        "prev_user#0",
        "prev_user#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "prev_user#0 (copy)"
      ]
    },
    "2723": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "2724": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%10#0"
      ]
    },
    "2725": {
      "op": "frame_dig 3",
      "defined_out": [
        "maybe_value%10#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%10#0",
        "next_user#0"
      ]
    },
    "2727": {
      "op": "dup",
      "defined_out": [
        "maybe_value%10#0",
        "next_user#0",
        "next_user#0 (copy)",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "maybe_value%10#0",
        "next_user#0 (copy)",
        "next_user#0 (copy)"
      ]
    },
    "2728": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "maybe_value%10#0",
        "next_user#0 (copy)"
      ]
    },
    "2730": {
      "op": "replace2 44",
      "defined_out": [
        "next_user#0",
        "prev_user#0",
        "updated_data%6#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "updated_data%6#0"
      ]
    },
    "2732": {
      "op": "dig 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "updated_data%6#0",
        "prev_user#0 (copy)"
      ]
    },
    "2734": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "prev_user#0 (copy)",
        "updated_data%6#0"
      ]
    },
    "2735": {
      "op": "box_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0"
      ]
    },
    "2736": {
      "op": "dup",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "next_user#0 (copy)"
      ]
    },
    "2737": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%11#0",
        "maybe_value%11#0",
        "next_user#0",
        "prev_user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "maybe_value%11#0",
        "maybe_exists%11#0"
      ]
    },
    "2738": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "prev_user#0",
        "next_user#0",
        "maybe_value%11#0"
      ]
    },
    "2739": {
      "op": "uncover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "maybe_value%11#0",
        "prev_user#0"
      ]
    },
    "2741": {
      "op": "replace2 12",
      "defined_out": [
        "next_user#0",
        "prev_user#0",
        "updated_data%7#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "next_user#0",
        "updated_data%7#0"
      ]
    },
    "2743": {
      "op": "box_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2744": {
      "block": "user_delete_after_if_else@10",
      "stack_in": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0"
      ]
    },
    "2745": {
      "op": "frame_dig 4",
      "defined_out": [
        "0",
        "dll#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0"
      ]
    },
    "2747": {
      "op": "dup",
      "defined_out": [
        "0",
        "dll#0",
        "dll#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0",
        "dll#0 (copy)",
        "dll#0 (copy)"
      ]
    },
    "2748": {
      "op": "cover 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2750": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%12#0",
        "maybe_value%12#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%12#0",
        "maybe_exists%12#0"
      ]
    },
    "2751": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%12#0"
      ]
    },
    "2752": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "dll#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "tmp%20#0"
      ]
    },
    "2755": {
      "op": "btoi",
      "defined_out": [
        "dll#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "tmp%21#0"
      ]
    },
    "2756": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "dll#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "tmp%21#0",
        "1"
      ]
    },
    "2757": {
      "op": "-",
      "defined_out": [
        "dll#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "to_encode%0#0"
      ]
    },
    "2758": {
      "op": "itob",
      "defined_out": [
        "dll#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "val_as_bytes%0#0"
      ]
    },
    "2759": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "2760": {
      "op": "dig 2",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "val_as_bytes%0#0",
        "0",
        "dll#0 (copy)"
      ]
    },
    "2762": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dll#0",
        "maybe_exists%13#0",
        "maybe_value%13#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "val_as_bytes%0#0",
        "maybe_value%13#0",
        "maybe_exists%13#0"
      ]
    },
    "2763": {
      "error": "check GlobalState exists",
      "op": "assert // check GlobalState exists",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "val_as_bytes%0#0",
        "maybe_value%13#0"
      ]
    },
    "2764": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "maybe_value%13#0",
        "val_as_bytes%0#0"
      ]
    },
    "2765": {
      "op": "replace2 0",
      "defined_out": [
        "dll#0",
        "updated_data%8#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "dll#0",
        "updated_data%8#0"
      ]
    },
    "2767": {
      "op": "app_global_put",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2768": {
      "op": "frame_dig 1",
      "defined_out": [
        "dll#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0"
      ]
    },
    "2770": {
      "op": "dup",
      "defined_out": [
        "dll#0",
        "user#0",
        "user#0 (copy)"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "user#0 (copy)"
      ]
    },
    "2771": {
      "op": "box_del",
      "defined_out": [
        "dll#0",
        "tmp%22#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "tmp%22#0"
      ]
    },
    "2772": {
      "error": "Failed to delete user box.",
      "op": "assert // Failed to delete user box.",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0"
      ]
    },
    "2773": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "dll#0",
        "tmp%23#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "tmp%23#0"
      ]
    },
    "2775": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "dll#0",
        "mbr_new#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "mbr_new#0",
        "check%1#0"
      ]
    },
    "2777": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "mbr_new#0"
      ]
    },
    "2778": {
      "op": "frame_dig 0",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "mbr_new#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "mbr_new#0",
        "mbr_cur#0"
      ]
    },
    "2780": {
      "op": "swap",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "mbr_cur#0",
        "mbr_new#0"
      ]
    },
    "2781": {
      "op": "-",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "mbr_freed_amount#0",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0",
        "mbr_freed_amount#0"
      ]
    },
    "2782": {
      "op": "itxn_begin"
    },
    "2783": {
      "op": "itxn_field Amount",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "user#0"
      ]
    },
    "2785": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2787": {
      "op": "intc_1 // pay",
      "defined_out": [
        "dll#0",
        "mbr_cur#0",
        "pay",
        "user#0"
      ],
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "pay"
      ]
    },
    "2788": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2790": {
      "op": "intc_0 // 0",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0",
        "0"
      ]
    },
    "2791": {
      "op": "itxn_field Fee",
      "stack_out": [
        "mbr_cur#0",
        "user#0",
        "prev_user#0",
        "next_user#0",
        "dll#0"
      ]
    },
    "2793": {
      "op": "itxn_submit"
    },
    "2794": {
      "retsub": true,
      "op": "retsub"
    },
    "2795": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_create",
      "params": {
        "val_app_idx#0": "uint64",
        "txn#0": "uint64"
      },
      "block": "ad_create",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "2798": {
      "op": "intc_0 // 0",
      "stack_out": [
        "approval_program.0#0"
      ]
    },
    "2799": {
      "op": "dup",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "0"
      ]
    },
    "2800": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "0",
        "\"state\""
      ]
    },
    "2801": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "2802": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "approval_program.0#0",
        "maybe_value%0#0"
      ]
    },
    "2803": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "0x02",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "maybe_value%0#0",
        "0x02"
      ]
    },
    "2805": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "tmp%0#0"
      ]
    },
    "2806": {
      "error": "Cannot be called from other state than SET.",
      "op": "assert // Cannot be called from other state than SET.",
      "stack_out": [
        "approval_program.0#0"
      ]
    },
    "2807": {
      "op": "txn Sender"
    },
    "2809": {
      "op": "dup",
      "defined_out": [
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "val_owner#0"
      ]
    },
    "2810": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "2811": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "maybe_value%1#0"
      ]
    },
    "2812": {
      "op": "extract 0 4 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%2#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "tmp%2#0"
      ]
    },
    "2815": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "tmp%2#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "tmp%2#0",
        "0x76616c5f"
      ]
    },
    "2816": {
      "op": "==",
      "defined_out": [
        "tmp%3#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "tmp%3#0"
      ]
    },
    "2817": {
      "error": "User is not registered as validator on the platform.",
      "op": "assert // User is not registered as validator on the platform.",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0"
      ]
    },
    "2818": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%4#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "tmp%4#0"
      ]
    },
    "2820": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "check%0#0"
      ]
    },
    "2822": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "2823": {
      "op": "bytec 6 // 0x76",
      "defined_out": [
        "0x76",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76"
      ]
    },
    "2825": {
      "op": "box_len",
      "defined_out": [
        "check%1#0",
        "mbr_cur#0",
        "val_owner#0",
        "value%1#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "2826": {
      "error": "check self.template_val exists",
      "op": "assert // check self.template_val exists",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%1#0"
      ]
    },
    "2827": {
      "op": "intc 6 // 4096",
      "defined_out": [
        "4096",
        "mbr_cur#0",
        "val_owner#0",
        "value%1#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%1#0",
        "4096"
      ]
    },
    "2829": {
      "op": ">",
      "defined_out": [
        "mbr_cur#0",
        "tmp%5#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "tmp%5#0"
      ]
    },
    "2830": {
      "op": "bz ad_create_else_body@2",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "2833": {
      "op": "bytec 6 // 0x76",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76"
      ]
    },
    "2835": {
      "op": "intc_0 // 0",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76",
        "0"
      ]
    },
    "2836": {
      "op": "intc 6 // 4096",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76",
        "0",
        "4096"
      ]
    },
    "2838": {
      "op": "box_extract",
      "defined_out": [
        "approval_program.0#0",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.0#0"
      ]
    },
    "2839": {
      "op": "frame_bury 0",
      "defined_out": [
        "approval_program.0#0",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "2841": {
      "op": "bytec 6 // 0x76",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76"
      ]
    },
    "2843": {
      "op": "box_len",
      "defined_out": [
        "approval_program.0#0",
        "check%2#0",
        "mbr_cur#0",
        "val_owner#0",
        "value%2#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "2844": {
      "error": "check self.template_val exists",
      "op": "assert // check self.template_val exists",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%2#0"
      ]
    },
    "2845": {
      "op": "intc 6 // 4096",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%2#0",
        "4096"
      ]
    },
    "2847": {
      "op": "-",
      "defined_out": [
        "approval_program.0#0",
        "mbr_cur#0",
        "tmp%7#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "tmp%7#0"
      ]
    },
    "2848": {
      "op": "bytec 6 // 0x76",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "tmp%7#0",
        "0x76"
      ]
    },
    "2850": {
      "op": "intc 6 // 4096",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "tmp%7#0",
        "0x76",
        "4096"
      ]
    },
    "2852": {
      "op": "uncover 2",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76",
        "4096",
        "tmp%7#0"
      ]
    },
    "2854": {
      "op": "box_extract",
      "defined_out": [
        "approval_program.0#0",
        "approval_program.1#0",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2855": {
      "op": "b ad_create_after_if_else@3"
    },
    "2858": {
      "block": "ad_create_else_body@2",
      "stack_in": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ],
      "op": "bytec 6 // 0x76",
      "defined_out": [
        "0x76"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76"
      ]
    },
    "2860": {
      "op": "box_len",
      "defined_out": [
        "check%3#0",
        "value%3#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%3#0",
        "check%3#0"
      ]
    },
    "2861": {
      "error": "check self.template_val exists",
      "op": "assert // check self.template_val exists",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%3#0"
      ]
    },
    "2862": {
      "op": "bytec 6 // 0x76",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%3#0",
        "0x76"
      ]
    },
    "2864": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x76",
        "value%3#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "value%3#0",
        "0x76",
        "0"
      ]
    },
    "2865": {
      "op": "uncover 2",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "0x76",
        "0",
        "value%3#0"
      ]
    },
    "2867": {
      "op": "box_extract",
      "defined_out": [
        "approval_program.0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.0#0"
      ]
    },
    "2868": {
      "op": "frame_bury 0",
      "defined_out": [
        "approval_program.0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "2870": {
      "op": "pushbytes 0x",
      "defined_out": [
        "approval_program.0#0",
        "approval_program.1#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2872": {
      "block": "ad_create_after_if_else@3",
      "stack_in": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ],
      "op": "itxn_begin"
    },
    "2873": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0",
        "1"
      ]
    },
    "2874": {
      "op": "itxn_field ExtraProgramPages",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2876": {
      "op": "pushint 11 // 11",
      "defined_out": [
        "11"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0",
        "11"
      ]
    },
    "2878": {
      "op": "itxn_field GlobalNumByteSlice",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2880": {
      "op": "intc_2 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0",
        "6"
      ]
    },
    "2881": {
      "op": "itxn_field GlobalNumUint",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2883": {
      "op": "pushbytes base64(C4EBQw==)",
      "defined_out": [
        "C4EBQw=="
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0",
        "C4EBQw=="
      ]
    },
    "2889": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2891": {
      "op": "frame_dig 0",
      "defined_out": [
        "approval_program.0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0",
        "approval_program.0#0"
      ]
    },
    "2893": {
      "op": "itxn_field ApprovalProgramPages",
      "defined_out": [
        "approval_program.0#0",
        "approval_program.1#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "approval_program.1#0"
      ]
    },
    "2895": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "2897": {
      "op": "pushbytes 0x734ecd77 // method \"ad_create(address)uint64\"",
      "defined_out": [
        "Method(ad_create(address)uint64)",
        "approval_program.0#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "Method(ad_create(address)uint64)"
      ]
    },
    "2903": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "2905": {
      "op": "frame_dig 1",
      "defined_out": [
        "approval_program.0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0"
      ]
    },
    "2907": {
      "op": "dup",
      "defined_out": [
        "approval_program.0#0",
        "val_owner#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_owner#0 (copy)"
      ]
    },
    "2908": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0"
      ]
    },
    "2910": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "approval_program.0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "appl"
      ]
    },
    "2911": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0"
      ]
    },
    "2913": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "approval_program.0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "0"
      ]
    },
    "2914": {
      "op": "itxn_field Fee",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0"
      ]
    },
    "2916": {
      "op": "itxn_submit"
    },
    "2917": {
      "op": "itxn LastLog"
    },
    "2919": {
      "op": "dup",
      "defined_out": [
        "approval_program.0#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "2920": {
      "op": "extract 4 0",
      "defined_out": [
        "approval_program.0#0",
        "awst_tmp%0#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "awst_tmp%0#0",
        "val_app_id#0"
      ]
    },
    "2923": {
      "op": "swap",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0",
        "awst_tmp%0#0"
      ]
    },
    "2924": {
      "op": "extract 0 4",
      "defined_out": [
        "approval_program.0#0",
        "tmp%11#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0",
        "tmp%11#0"
      ]
    },
    "2927": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "approval_program.0#0",
        "tmp%11#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0",
        "tmp%11#0",
        "0x151f7c75"
      ]
    },
    "2928": {
      "op": "==",
      "defined_out": [
        "approval_program.0#0",
        "tmp%12#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0",
        "tmp%12#0"
      ]
    },
    "2929": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0"
      ]
    },
    "2930": {
      "op": "dup",
      "defined_out": [
        "approval_program.0#0",
        "val_app_id#0",
        "val_app_id#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0",
        "val_app_id#0 (copy)"
      ]
    },
    "2931": {
      "op": "btoi",
      "defined_out": [
        "approval_program.0#0",
        "val_app#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0",
        "val_app_id#0",
        "val_app#0"
      ]
    },
    "2932": {
      "op": "uncover 2",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "val_app#0",
        "val_owner#0"
      ]
    },
    "2934": {
      "op": "dig 2",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "val_app#0",
        "val_owner#0",
        "val_app_id#0 (copy)"
      ]
    },
    "2936": {
      "op": "frame_dig -2",
      "defined_out": [
        "approval_program.0#0",
        "val_app#0",
        "val_app_id#0",
        "val_app_id#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "val_app#0",
        "val_owner#0",
        "val_app_id#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "2938": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._store_user_app",
      "op": "callsub _store_user_app",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "val_app#0"
      ]
    },
    "2941": {
      "op": "global MinBalance",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "val_app#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "val_app#0",
        "contract_fund_pay#0"
      ]
    },
    "2943": {
      "op": "itxn_begin"
    },
    "2944": {
      "op": "swap",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "val_app#0"
      ]
    },
    "2945": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "approval_program.0#0",
        "check%4#0",
        "contract_fund_pay#0",
        "val_app_id#0",
        "val_owner#0",
        "value%4#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "value%4#0",
        "check%4#0"
      ]
    },
    "2947": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "value%4#0"
      ]
    },
    "2948": {
      "op": "dig 1",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "contract_fund_pay#0 (copy)",
        "val_app_id#0",
        "val_owner#0",
        "value%4#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "value%4#0",
        "contract_fund_pay#0 (copy)"
      ]
    },
    "2950": {
      "op": "itxn_field Amount",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "value%4#0"
      ]
    },
    "2952": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0"
      ]
    },
    "2954": {
      "op": "intc_1 // pay",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "pay",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "pay"
      ]
    },
    "2955": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0"
      ]
    },
    "2957": {
      "op": "intc_0 // 0",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "0"
      ]
    },
    "2958": {
      "op": "itxn_field Fee",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0"
      ]
    },
    "2960": {
      "op": "itxn_submit"
    },
    "2961": {
      "op": "frame_dig -1",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "txn#0 (copy)",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "txn#0 (copy)"
      ]
    },
    "2963": {
      "op": "gtxns Receiver",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "tmp%13#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%13#0"
      ]
    },
    "2965": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "tmp%13#0",
        "tmp%14#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "2967": {
      "op": "==",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "tmp%15#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%15#0"
      ]
    },
    "2968": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0"
      ]
    },
    "2969": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "tmp%16#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%16#0"
      ]
    },
    "2971": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "approval_program.0#0",
        "check%5#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "check%5#0"
      ]
    },
    "2973": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0"
      ]
    },
    "2974": {
      "op": "intc_0 // 0",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "0"
      ]
    },
    "2975": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\"",
        "0",
        "approval_program.0#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "0",
        "\"noticeboard_fees\""
      ]
    },
    "2977": {
      "op": "app_global_get_ex",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "mbr_new#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "2978": {
      "error": "check self.noticeboard_fees exists",
      "op": "assert // check self.noticeboard_fees exists",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "maybe_value%2#0"
      ]
    },
    "2979": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "tmp%17#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "tmp%17#0"
      ]
    },
    "2982": {
      "op": "btoi",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "tmp%18#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "mbr_new#0",
        "tmp%18#0"
      ]
    },
    "2983": {
      "op": "swap",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%18#0",
        "mbr_new#0"
      ]
    },
    "2984": {
      "op": "frame_dig 2",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "mbr_cur#0",
        "mbr_new#0",
        "tmp%18#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%18#0",
        "mbr_new#0",
        "mbr_cur#0"
      ]
    },
    "2986": {
      "op": "-",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "mbr_cur#0",
        "tmp%18#0",
        "tmp%19#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "2987": {
      "op": "+",
      "defined_out": [
        "approval_program.0#0",
        "contract_fund_pay#0",
        "mbr_cur#0",
        "tmp%20#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "contract_fund_pay#0",
        "tmp%20#0"
      ]
    },
    "2988": {
      "op": "+",
      "defined_out": [
        "approval_program.0#0",
        "mbr_cur#0",
        "pay_amount#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "pay_amount#0"
      ]
    },
    "2989": {
      "op": "frame_dig -1",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "pay_amount#0",
        "txn#0 (copy)"
      ]
    },
    "2991": {
      "op": "gtxns Amount",
      "defined_out": [
        "approval_program.0#0",
        "mbr_cur#0",
        "pay_amount#0",
        "tmp%21#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "pay_amount#0",
        "tmp%21#0"
      ]
    },
    "2993": {
      "op": "==",
      "defined_out": [
        "approval_program.0#0",
        "mbr_cur#0",
        "tmp%22#0",
        "val_app_id#0",
        "val_owner#0"
      ],
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0",
        "tmp%22#0"
      ]
    },
    "2994": {
      "error": "During ad creation, incorrect amount of ALGO was paid.",
      "op": "assert // During ad creation, incorrect amount of ALGO was paid.",
      "stack_out": [
        "approval_program.0#0",
        "val_owner#0",
        "mbr_cur#0",
        "val_app_id#0"
      ]
    },
    "2995": {
      "op": "frame_bury 0"
    },
    "2997": {
      "retsub": true,
      "op": "retsub"
    },
    "2998": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard._store_user_app",
      "params": {
        "user#0": "bytes",
        "app_id#0": "bytes",
        "app_idx#0": "uint64"
      },
      "block": "_store_user_app",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3001": {
      "op": "frame_dig -3",
      "defined_out": [
        "user#0 (copy)"
      ],
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "3003": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3004": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3005": {
      "op": "pushint 76 // 76",
      "defined_out": [
        "76",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "76"
      ]
    },
    "3007": {
      "op": "intc 4 // 880",
      "defined_out": [
        "76",
        "880",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "76",
        "880"
      ]
    },
    "3009": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3010": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_idx#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "app_idx#0 (copy)"
      ]
    },
    "3012": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "app_idx#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "app_idx#0 (copy)",
        "8"
      ]
    },
    "3013": {
      "op": "*",
      "defined_out": [
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "item_offset%0#0"
      ]
    },
    "3014": {
      "op": "swap",
      "stack_out": [
        "item_offset%0#0",
        "tmp%1#0"
      ]
    },
    "3015": {
      "op": "dig 1",
      "defined_out": [
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%1#0",
        "item_offset%0#0 (copy)"
      ]
    },
    "3017": {
      "op": "intc_3 // 8",
      "stack_out": [
        "item_offset%0#0",
        "tmp%1#0",
        "item_offset%0#0 (copy)",
        "8"
      ]
    },
    "3018": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%2#0"
      ]
    },
    "3019": {
      "op": "btoi",
      "defined_out": [
        "item_offset%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%3#0"
      ]
    },
    "3020": {
      "op": "!",
      "defined_out": [
        "item_offset%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%4#0"
      ]
    },
    "3021": {
      "error": "Cannot store app on the index because it is taken.",
      "op": "assert // Cannot store app on the index because it is taken.",
      "stack_out": [
        "item_offset%0#0"
      ]
    },
    "3022": {
      "op": "frame_dig -3",
      "stack_out": [
        "item_offset%0#0",
        "user#0 (copy)"
      ]
    },
    "3024": {
      "op": "box_get",
      "defined_out": [
        "item_offset%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3025": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0"
      ]
    },
    "3026": {
      "op": "dup",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ],
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "3027": {
      "op": "pushint 76 // 76",
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "76"
      ]
    },
    "3029": {
      "op": "intc 4 // 880",
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "76",
        "880"
      ]
    },
    "3031": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ]
    },
    "3032": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0",
        "app_idx#0 (copy)"
      ]
    },
    "3034": {
      "op": "pushint 110 // 110",
      "defined_out": [
        "110",
        "app_idx#0 (copy)",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0",
        "app_idx#0 (copy)",
        "110"
      ]
    },
    "3036": {
      "op": "<",
      "defined_out": [
        "index_is_in_bounds%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "3037": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ]
    },
    "3038": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%1#0",
        "tmp%6#0",
        "item_offset%0#0"
      ]
    },
    "3040": {
      "op": "frame_dig -2",
      "defined_out": [
        "app_id#0 (copy)",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "tmp%6#0",
        "item_offset%0#0",
        "app_id#0 (copy)"
      ]
    },
    "3042": {
      "op": "replace3",
      "defined_out": [
        "maybe_value%1#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "updated_target%0#0"
      ]
    },
    "3043": {
      "op": "replace2 76",
      "defined_out": [
        "updated_data%0#0"
      ],
      "stack_out": [
        "updated_data%0#0"
      ]
    },
    "3045": {
      "op": "frame_dig -3",
      "stack_out": [
        "updated_data%0#0",
        "user#0 (copy)"
      ]
    },
    "3047": {
      "op": "swap",
      "stack_out": [
        "user#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "3048": {
      "op": "box_put",
      "stack_out": []
    },
    "3049": {
      "op": "frame_dig -3",
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "3051": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3052": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "3053": {
      "op": "intc 5 // 956",
      "defined_out": [
        "956",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "956"
      ]
    },
    "3055": {
      "op": "intc_3 // 8",
      "stack_out": [
        "maybe_value%2#0",
        "956",
        "8"
      ]
    },
    "3056": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "3057": {
      "op": "btoi",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3058": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "1"
      ]
    },
    "3059": {
      "op": "+",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "3060": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "3061": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_as_bytes%0#0",
        "user#0 (copy)"
      ]
    },
    "3063": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3064": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%3#0"
      ]
    },
    "3065": {
      "op": "intc 5 // 956",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%3#0",
        "956"
      ]
    },
    "3067": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%3#0",
        "956",
        "val_as_bytes%0#0"
      ]
    },
    "3069": {
      "op": "replace3",
      "defined_out": [
        "updated_data%1#0"
      ],
      "stack_out": [
        "updated_data%1#0"
      ]
    },
    "3070": {
      "op": "frame_dig -3",
      "stack_out": [
        "updated_data%1#0",
        "user#0 (copy)"
      ]
    },
    "3072": {
      "op": "swap",
      "stack_out": [
        "user#0 (copy)",
        "updated_data%1#0"
      ]
    },
    "3073": {
      "op": "box_put",
      "stack_out": []
    },
    "3074": {
      "retsub": true,
      "op": "retsub"
    },
    "3075": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_config",
      "params": {
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "val_manager#0": "bytes",
        "live#0": "bytes",
        "cnt_del_max#0": "uint64"
      },
      "block": "ad_config",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "3078": {
      "op": "txn Sender"
    },
    "3080": {
      "op": "dup"
    },
    "3081": {
      "op": "frame_dig -5"
    },
    "3083": {
      "op": "frame_dig -4"
    },
    "3085": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3086": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3089": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "0"
      ]
    },
    "3090": {
      "op": "bytec 12 // \"noticeboard_terms_node\"",
      "defined_out": [
        "\"noticeboard_terms_node\"",
        "0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "0",
        "\"noticeboard_terms_node\""
      ]
    },
    "3092": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3093": {
      "error": "check self.noticeboard_terms_node exists",
      "op": "assert // check self.noticeboard_terms_node exists",
      "stack_out": [
        "val_owner#0",
        "maybe_value%0#0"
      ]
    },
    "3094": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "3097": {
      "op": "frame_dig -1",
      "defined_out": [
        "cnt_del_max#0 (copy)",
        "reinterpret_biguint%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "reinterpret_biguint%0#0",
        "cnt_del_max#0 (copy)"
      ]
    },
    "3099": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "3100": {
      "op": "swap",
      "stack_out": [
        "val_owner#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "3101": {
      "op": "dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0",
        "tmp%0#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "tmp%0#0",
        "reinterpret_biguint%0#0",
        "tmp%0#0 (copy)"
      ]
    },
    "3103": {
      "op": "b>=",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "3104": {
      "error": "Requested number of maximum delegator is unsafe for node performance.",
      "op": "assert // Requested number of maximum delegator is unsafe for node performance.",
      "stack_out": [
        "val_owner#0",
        "tmp%0#0"
      ]
    },
    "3105": {
      "op": "itxn_begin"
    },
    "3106": {
      "op": "frame_dig -5",
      "stack_out": [
        "val_owner#0",
        "tmp%0#0",
        "val_app#0 (copy)"
      ]
    },
    "3108": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_owner#0",
        "tmp%0#0"
      ]
    },
    "3110": {
      "op": "pushbytes 0x93f04fe6 // method \"ad_config(address,address,bool,uint64)void\"",
      "defined_out": [
        "Method(ad_config(address,address,bool,uint64)void)",
        "tmp%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "tmp%0#0",
        "Method(ad_config(address,address,bool,uint64)void)"
      ]
    },
    "3116": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_owner#0",
        "tmp%0#0"
      ]
    },
    "3118": {
      "op": "swap",
      "stack_out": [
        "tmp%0#0",
        "val_owner#0"
      ]
    },
    "3119": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3121": {
      "op": "frame_dig -3",
      "defined_out": [
        "tmp%0#0",
        "val_manager#0 (copy)"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_manager#0 (copy)"
      ]
    },
    "3123": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3125": {
      "op": "frame_dig -2",
      "defined_out": [
        "live#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "live#0 (copy)"
      ]
    },
    "3127": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3129": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3131": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3132": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3134": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3135": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3137": {
      "op": "itxn_submit"
    },
    "3138": {
      "retsub": true,
      "op": "retsub"
    },
    "3139": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "params": {
        "user#0": "bytes",
        "app#0": "uint64",
        "app_idx#0": "uint64",
        "role#0": "bytes"
      },
      "block": "_assert_user_and_app",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "3142": {
      "op": "frame_dig -4",
      "defined_out": [
        "user#0 (copy)"
      ],
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "3144": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3145": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3146": {
      "op": "extract 0 4 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3149": {
      "op": "frame_dig -1",
      "defined_out": [
        "role#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "role#0 (copy)"
      ]
    },
    "3151": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "3152": {
      "error": "User does not have the expected role on the platform.",
      "op": "assert // User does not have the expected role on the platform.",
      "stack_out": []
    },
    "3153": {
      "op": "frame_dig -4",
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "3155": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3156": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "3157": {
      "op": "pushint 76 // 76",
      "defined_out": [
        "76",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "76"
      ]
    },
    "3159": {
      "op": "intc 4 // 880",
      "defined_out": [
        "76",
        "880",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "76",
        "880"
      ]
    },
    "3161": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "3162": {
      "op": "frame_dig -2",
      "defined_out": [
        "app_idx#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "app_idx#0 (copy)"
      ]
    },
    "3164": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "app_idx#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "app_idx#0 (copy)",
        "8"
      ]
    },
    "3165": {
      "op": "*",
      "defined_out": [
        "item_offset%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "item_offset%0#0"
      ]
    },
    "3166": {
      "op": "intc_3 // 8",
      "stack_out": [
        "tmp%4#0",
        "item_offset%0#0",
        "8"
      ]
    },
    "3167": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "3168": {
      "op": "frame_dig -3",
      "defined_out": [
        "app#0 (copy)",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "app#0 (copy)"
      ]
    },
    "3170": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%5#0"
      ]
    },
    "3171": {
      "op": "b==",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "3172": {
      "error": "Requested app is not under the given user.",
      "op": "assert // Requested app is not under the given user.",
      "stack_out": []
    },
    "3173": {
      "retsub": true,
      "op": "retsub"
    },
    "3174": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_delete",
      "params": {
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "ad_delete",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "3177": {
      "op": "txn Sender"
    },
    "3179": {
      "op": "dup"
    },
    "3180": {
      "op": "frame_dig -2"
    },
    "3182": {
      "op": "frame_dig -1"
    },
    "3184": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3185": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3188": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "tmp%0#0"
      ]
    },
    "3190": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%0#0",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "check%0#0"
      ]
    },
    "3192": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3193": {
      "op": "itxn_begin"
    },
    "3194": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "DeleteApplication"
      ]
    },
    "3196": {
      "op": "itxn_field OnCompletion",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3198": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_app#0 (copy)"
      ]
    },
    "3200": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3202": {
      "op": "pushbytes 0x8039e324 // method \"ad_delete(address)void\"",
      "defined_out": [
        "Method(ad_delete(address)void)",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "Method(ad_delete(address)void)"
      ]
    },
    "3208": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3210": {
      "op": "dig 1",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0 (copy)"
      ]
    },
    "3212": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3214": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "appl"
      ]
    },
    "3215": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3217": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "mbr_cur#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "0"
      ]
    },
    "3218": {
      "op": "itxn_field Fee",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3220": {
      "op": "itxn_submit"
    },
    "3221": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_app#0 (copy)"
      ]
    },
    "3223": {
      "op": "itob",
      "defined_out": [
        "mbr_cur#0",
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_as_bytes%0#0"
      ]
    },
    "3224": {
      "op": "dig 2",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_as_bytes%0#0",
        "val_owner#0 (copy)"
      ]
    },
    "3226": {
      "op": "swap",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0 (copy)",
        "val_as_bytes%0#0"
      ]
    },
    "3227": {
      "op": "frame_dig -1",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "val_owner#0 (copy)",
        "val_as_bytes%0#0",
        "val_app_idx#0 (copy)"
      ]
    },
    "3229": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._remove_user_app",
      "op": "callsub _remove_user_app",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0"
      ]
    },
    "3232": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "mbr_cur#0",
        "tmp%1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "tmp%1#0"
      ]
    },
    "3234": {
      "op": "acct_params_get AcctMinBalance",
      "defined_out": [
        "check%1#0",
        "mbr_cur#0",
        "mbr_new#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "mbr_new#0",
        "check%1#0"
      ]
    },
    "3236": {
      "error": "account funded",
      "op": "assert // account funded",
      "stack_out": [
        "val_owner#0",
        "mbr_cur#0",
        "mbr_new#0"
      ]
    },
    "3237": {
      "op": "itxn_begin"
    },
    "3238": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%1%%param_Amount_idx_0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "inner_txn_params%1%%param_Amount_idx_0#0"
      ]
    },
    "3239": {
      "op": "itxn_field Amount",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3241": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "3243": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "3244": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3246": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3247": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3249": {
      "op": "itxn_submit"
    },
    "3250": {
      "retsub": true,
      "op": "retsub"
    },
    "3251": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard._remove_user_app",
      "params": {
        "user#0": "bytes",
        "app_id#0": "bytes",
        "app_idx#0": "uint64"
      },
      "block": "_remove_user_app",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3254": {
      "op": "frame_dig -3",
      "defined_out": [
        "user#0 (copy)"
      ],
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "3256": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3257": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3258": {
      "op": "pushint 76 // 76",
      "defined_out": [
        "76",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "76"
      ]
    },
    "3260": {
      "op": "intc 4 // 880",
      "defined_out": [
        "76",
        "880",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "76",
        "880"
      ]
    },
    "3262": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3263": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_idx#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "app_idx#0 (copy)"
      ]
    },
    "3265": {
      "op": "intc_3 // 8",
      "defined_out": [
        "8",
        "app_idx#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "app_idx#0 (copy)",
        "8"
      ]
    },
    "3266": {
      "op": "*",
      "defined_out": [
        "item_offset%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "item_offset%0#0"
      ]
    },
    "3267": {
      "op": "swap",
      "stack_out": [
        "item_offset%0#0",
        "tmp%1#0"
      ]
    },
    "3268": {
      "op": "dig 1",
      "defined_out": [
        "item_offset%0#0",
        "item_offset%0#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%1#0",
        "item_offset%0#0 (copy)"
      ]
    },
    "3270": {
      "op": "intc_3 // 8",
      "stack_out": [
        "item_offset%0#0",
        "tmp%1#0",
        "item_offset%0#0 (copy)",
        "8"
      ]
    },
    "3271": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%2#0"
      ]
    },
    "3272": {
      "op": "btoi",
      "defined_out": [
        "item_offset%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%3#0"
      ]
    },
    "3273": {
      "op": "itob",
      "defined_out": [
        "item_offset%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%4#0"
      ]
    },
    "3274": {
      "op": "frame_dig -2",
      "defined_out": [
        "app_id#0 (copy)",
        "item_offset%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%4#0",
        "app_id#0 (copy)"
      ]
    },
    "3276": {
      "op": "b==",
      "defined_out": [
        "item_offset%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "tmp%5#0"
      ]
    },
    "3277": {
      "error": "Cannot remove app from the index because it does not match.",
      "op": "assert // Cannot remove app from the index because it does not match.",
      "stack_out": [
        "item_offset%0#0"
      ]
    },
    "3278": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "item_offset%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "0"
      ]
    },
    "3279": {
      "op": "itob",
      "defined_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3280": {
      "op": "frame_dig -3",
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "user#0 (copy)"
      ]
    },
    "3282": {
      "op": "box_get",
      "defined_out": [
        "item_offset%0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3283": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0"
      ]
    },
    "3284": {
      "op": "dup",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "3285": {
      "op": "pushint 76 // 76",
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "76"
      ]
    },
    "3287": {
      "op": "intc 4 // 880",
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "76",
        "880"
      ]
    },
    "3289": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ]
    },
    "3290": {
      "op": "frame_dig -1",
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "app_idx#0 (copy)"
      ]
    },
    "3292": {
      "op": "pushint 110 // 110",
      "defined_out": [
        "110",
        "app_idx#0 (copy)",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "app_idx#0 (copy)",
        "110"
      ]
    },
    "3294": {
      "op": "<",
      "defined_out": [
        "index_is_in_bounds%0#0",
        "item_offset%0#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "index_is_in_bounds%0#0"
      ]
    },
    "3295": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "item_offset%0#0",
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "tmp%7#0"
      ]
    },
    "3296": {
      "op": "uncover 3"
    },
    "3298": {
      "op": "uncover 3",
      "stack_out": [
        "maybe_value%1#0",
        "tmp%7#0",
        "item_offset%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "3300": {
      "op": "replace3",
      "defined_out": [
        "maybe_value%1#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "updated_target%0#0"
      ]
    },
    "3301": {
      "op": "replace2 76",
      "defined_out": [
        "updated_data%0#0"
      ],
      "stack_out": [
        "updated_data%0#0"
      ]
    },
    "3303": {
      "op": "frame_dig -3",
      "stack_out": [
        "updated_data%0#0",
        "user#0 (copy)"
      ]
    },
    "3305": {
      "op": "swap",
      "stack_out": [
        "user#0 (copy)",
        "updated_data%0#0"
      ]
    },
    "3306": {
      "op": "box_put",
      "stack_out": []
    },
    "3307": {
      "op": "frame_dig -3",
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "3309": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "3310": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "3311": {
      "op": "intc 5 // 956",
      "defined_out": [
        "956",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "956"
      ]
    },
    "3313": {
      "op": "intc_3 // 8",
      "stack_out": [
        "maybe_value%2#0",
        "956",
        "8"
      ]
    },
    "3314": {
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3315": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "3316": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "1"
      ]
    },
    "3317": {
      "op": "-",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "3318": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "3319": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_as_bytes%1#0",
        "user#0 (copy)"
      ]
    },
    "3321": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "3322": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "val_as_bytes%1#0",
        "maybe_value%3#0"
      ]
    },
    "3323": {
      "op": "intc 5 // 956",
      "stack_out": [
        "val_as_bytes%1#0",
        "maybe_value%3#0",
        "956"
      ]
    },
    "3325": {
      "op": "uncover 2",
      "stack_out": [
        "maybe_value%3#0",
        "956",
        "val_as_bytes%1#0"
      ]
    },
    "3327": {
      "op": "replace3",
      "defined_out": [
        "updated_data%1#0"
      ],
      "stack_out": [
        "updated_data%1#0"
      ]
    },
    "3328": {
      "op": "frame_dig -3",
      "stack_out": [
        "updated_data%1#0",
        "user#0 (copy)"
      ]
    },
    "3330": {
      "op": "swap",
      "stack_out": [
        "user#0 (copy)",
        "updated_data%1#0"
      ]
    },
    "3331": {
      "op": "box_put",
      "stack_out": []
    },
    "3332": {
      "retsub": true,
      "op": "retsub"
    },
    "3333": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_ready",
      "params": {
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "ready#0": "bytes"
      },
      "block": "ad_ready",
      "stack_in": [],
      "op": "proto 4 0"
    },
    "3336": {
      "op": "frame_dig -4",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "3338": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "3340": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "3342": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3343": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "3346": {
      "op": "txn Sender",
      "defined_out": [
        "val_manager#0"
      ],
      "stack_out": [
        "val_manager#0"
      ]
    },
    "3348": {
      "op": "itxn_begin"
    },
    "3349": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_manager#0",
        "val_app#0 (copy)"
      ]
    },
    "3351": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_manager#0"
      ]
    },
    "3353": {
      "op": "pushbytes 0xa693de02 // method \"ad_ready(address,bool)void\"",
      "defined_out": [
        "Method(ad_ready(address,bool)void)",
        "val_manager#0"
      ],
      "stack_out": [
        "val_manager#0",
        "Method(ad_ready(address,bool)void)"
      ]
    },
    "3359": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_manager#0"
      ]
    },
    "3361": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3363": {
      "op": "frame_dig -1",
      "defined_out": [
        "ready#0 (copy)"
      ],
      "stack_out": [
        "ready#0 (copy)"
      ]
    },
    "3365": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3367": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3368": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3370": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3371": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3373": {
      "op": "itxn_submit"
    },
    "3374": {
      "retsub": true,
      "op": "retsub"
    },
    "3375": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_self_disclose",
      "params": {
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "val_info#0": "bytes"
      },
      "block": "ad_self_disclose",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3378": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3379": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"state\""
      ]
    },
    "3380": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3381": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "3382": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "0x02",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "0x02"
      ]
    },
    "3384": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3385": {
      "error": "Cannot be called from other state than SET.",
      "op": "assert // Cannot be called from other state than SET.",
      "stack_out": []
    },
    "3386": {
      "op": "txn Sender"
    },
    "3388": {
      "op": "dup"
    },
    "3389": {
      "op": "frame_dig -3"
    },
    "3391": {
      "op": "frame_dig -2"
    },
    "3393": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3394": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3397": {
      "op": "itxn_begin"
    },
    "3398": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_owner#0",
        "val_app#0 (copy)"
      ]
    },
    "3400": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3402": {
      "op": "pushbytes 0xef423551 // method \"ad_self_disclose(address,(byte[30],byte[60],byte[2],uint64,byte[20]))void\"",
      "defined_out": [
        "Method(ad_self_disclose(address,(byte[30],byte[60],byte[2],uint64,byte[20]))void)",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "Method(ad_self_disclose(address,(byte[30],byte[60],byte[2],uint64,byte[20]))void)"
      ]
    },
    "3408": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3410": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3412": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_info#0 (copy)"
      ],
      "stack_out": [
        "val_info#0 (copy)"
      ]
    },
    "3414": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3416": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3417": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3419": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "3420": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3422": {
      "op": "itxn_submit"
    },
    "3423": {
      "retsub": true,
      "op": "retsub"
    },
    "3424": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_terms",
      "params": {
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "tc_sha256#0": "bytes",
        "terms_time#0": "bytes",
        "terms_price#0": "bytes",
        "terms_stake#0": "bytes",
        "terms_reqs#0": "bytes",
        "terms_warn#0": "bytes",
        "mbr_delegator_template_box#0": "uint64",
        "txn#0": "uint64"
      },
      "block": "ad_terms",
      "stack_in": [],
      "op": "proto 10 0"
    },
    "3427": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "chunks#0"
      ]
    },
    "3429": {
      "op": "dupn 2",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0"
      ]
    },
    "3431": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "0"
      ]
    },
    "3432": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "0",
        "\"state\""
      ]
    },
    "3433": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3434": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "maybe_value%0#0"
      ]
    },
    "3435": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "0x02",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "maybe_value%0#0",
        "0x02"
      ]
    },
    "3437": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "tmp%0#0"
      ]
    },
    "3438": {
      "error": "Cannot be called from other state than SET.",
      "op": "assert // Cannot be called from other state than SET.",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0"
      ]
    },
    "3439": {
      "op": "txn Sender"
    },
    "3441": {
      "op": "dup"
    },
    "3442": {
      "op": "frame_dig -10"
    },
    "3444": {
      "op": "frame_dig -9"
    },
    "3446": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_owner#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3447": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3450": {
      "op": "intc_0 // 0",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3451": {
      "op": "bytec 10 // \"tc_sha256\"",
      "defined_out": [
        "\"tc_sha256\"",
        "0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0",
        "\"tc_sha256\""
      ]
    },
    "3453": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3454": {
      "error": "check self.tc_sha256 exists",
      "op": "assert // check self.tc_sha256 exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "maybe_value%1#0"
      ]
    },
    "3455": {
      "op": "frame_dig -8",
      "defined_out": [
        "maybe_value%1#0",
        "tc_sha256#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "maybe_value%1#0",
        "tc_sha256#0 (copy)"
      ]
    },
    "3457": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%1#0"
      ]
    },
    "3458": {
      "error": "Terms and conditions do not match the ones defined by the platform.",
      "op": "assert // Terms and conditions do not match the ones defined by the platform.",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3459": {
      "op": "frame_dig -7",
      "defined_out": [
        "terms_time#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_time#0 (copy)"
      ]
    },
    "3461": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_terms_time",
      "op": "callsub _assert_terms_time",
      "defined_out": [
        "terms_time#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_time#0"
      ]
    },
    "3464": {
      "op": "frame_bury -7",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3466": {
      "op": "frame_dig -6",
      "defined_out": [
        "terms_price#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_price#0 (copy)"
      ]
    },
    "3468": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_terms_price",
      "op": "callsub _assert_terms_price",
      "defined_out": [
        "terms_price#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_price#0"
      ]
    },
    "3471": {
      "op": "frame_bury -6",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3473": {
      "op": "frame_dig -5",
      "defined_out": [
        "terms_stake#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_stake#0 (copy)"
      ]
    },
    "3475": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_terms_stake",
      "op": "callsub _assert_terms_stake",
      "defined_out": [
        "terms_stake#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_stake#0"
      ]
    },
    "3478": {
      "op": "frame_bury -5",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3480": {
      "op": "frame_dig -10",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_app#0 (copy)"
      ]
    },
    "3482": {
      "op": "bytec_2 // 0x7374617465",
      "defined_out": [
        "0x7374617465",
        "val_app#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_app#0 (copy)",
        "0x7374617465"
      ]
    },
    "3483": {
      "op": "app_global_get_ex",
      "defined_out": [
        "ad_state.0#0",
        "ad_state.1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "ad_state.0#0",
        "ad_state.1#0"
      ]
    },
    "3484": {
      "error": "App does not have state.",
      "op": "assert // App does not have state.",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "ad_state.0#0"
      ]
    },
    "3485": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "ad_state.0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "ad_state.0#0",
        "0x01"
      ]
    },
    "3486": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%2#0"
      ]
    },
    "3487": {
      "op": "bz ad_terms_after_if_else@13",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3490": {
      "op": "frame_dig -10",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_app#0 (copy)"
      ]
    },
    "3492": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "val_owner#0",
        "value%0#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "3494": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%0#0"
      ]
    },
    "3495": {
      "op": "itxn_begin"
    },
    "3496": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_delegator_template_box#0 (copy)",
        "val_owner#0",
        "value%0#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%0#0",
        "mbr_delegator_template_box#0 (copy)"
      ]
    },
    "3498": {
      "op": "itxn_field Amount",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%0#0"
      ]
    },
    "3500": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3502": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "pay"
      ]
    },
    "3503": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3505": {
      "op": "intc_0 // 0",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3506": {
      "op": "itxn_field Fee",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3508": {
      "op": "itxn_next"
    },
    "3509": {
      "op": "bytec 7 // 0x64",
      "defined_out": [
        "0x64",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0x64"
      ]
    },
    "3511": {
      "op": "box_len",
      "defined_out": [
        "check%1#0",
        "val_owner#0",
        "value%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "3512": {
      "error": "check self.template_del exists",
      "op": "assert // check self.template_del exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%1#0"
      ]
    },
    "3513": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3514": {
      "op": "frame_dig -10",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0",
        "val_app#0 (copy)"
      ]
    },
    "3516": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3518": {
      "op": "pushbytes 0xe0a4b723 // method \"template_load_init(address,uint64,pay)void\"",
      "defined_out": [
        "Method(template_load_init(address,uint64,pay)void)",
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0",
        "Method(template_load_init(address,uint64,pay)void)"
      ]
    },
    "3524": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3526": {
      "op": "frame_dig 3",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0",
        "val_owner#0"
      ]
    },
    "3528": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3530": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3532": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "appl"
      ]
    },
    "3533": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3535": {
      "op": "intc_0 // 0",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3536": {
      "op": "itxn_field Fee",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3538": {
      "op": "itxn_submit"
    },
    "3539": {
      "op": "bytec 7 // 0x64",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0x64"
      ]
    },
    "3541": {
      "op": "box_len",
      "defined_out": [
        "check%2#0",
        "val_owner#0",
        "value%2#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "3542": {
      "error": "check self.template_del exists",
      "op": "assert // check self.template_del exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%2#0"
      ]
    },
    "3543": {
      "op": "pushint 10 // 10",
      "defined_out": [
        "10",
        "val_owner#0",
        "value%2#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%2#0",
        "10"
      ]
    },
    "3545": {
      "op": "shr",
      "defined_out": [
        "tmp%3#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%3#0"
      ]
    },
    "3546": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%3#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%3#0",
        "1"
      ]
    },
    "3547": {
      "op": "+",
      "defined_out": [
        "chunks#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunks#0"
      ]
    },
    "3548": {
      "op": "frame_bury 0",
      "defined_out": [
        "chunks#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3550": {
      "op": "intc_0 // 0",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0"
      ]
    },
    "3551": {
      "op": "frame_bury 1",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3553": {
      "block": "ad_terms_for_header@4",
      "stack_in": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0"
      ]
    },
    "3555": {
      "op": "frame_dig 0",
      "defined_out": [
        "chunks#0",
        "idx#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "chunks#0"
      ]
    },
    "3557": {
      "op": "<",
      "defined_out": [
        "chunks#0",
        "continue_looping%0#0",
        "idx#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "continue_looping%0#0"
      ]
    },
    "3558": {
      "op": "bz ad_terms_after_for@11",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3561": {
      "op": "frame_dig 1",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0"
      ]
    },
    "3563": {
      "op": "dup",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "idx#0 (copy)"
      ]
    },
    "3564": {
      "op": "pushint 1024 // 1024",
      "defined_out": [
        "1024",
        "chunks#0",
        "idx#0",
        "idx#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "idx#0 (copy)",
        "1024"
      ]
    },
    "3567": {
      "op": "*",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "offset#0"
      ]
    },
    "3568": {
      "op": "frame_bury 2",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0"
      ]
    },
    "3570": {
      "op": "frame_dig 0",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "chunks#0"
      ]
    },
    "3572": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "chunks#0",
        "idx#0",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "chunks#0",
        "1"
      ]
    },
    "3573": {
      "op": "-",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "tmp%4#0"
      ]
    },
    "3574": {
      "op": "==",
      "defined_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%5#0"
      ]
    },
    "3575": {
      "op": "bz ad_terms_else_body@7",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3578": {
      "op": "bytec 7 // 0x64",
      "defined_out": [
        "0x64",
        "chunks#0",
        "idx#0",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0x64"
      ]
    },
    "3580": {
      "op": "box_len",
      "defined_out": [
        "check%3#0",
        "chunks#0",
        "idx#0",
        "offset#0",
        "value%3#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%3#0",
        "check%3#0"
      ]
    },
    "3581": {
      "error": "check self.template_del exists",
      "op": "assert // check self.template_del exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%3#0"
      ]
    },
    "3582": {
      "op": "frame_dig 2",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%3#0",
        "offset#0"
      ]
    },
    "3584": {
      "op": "-",
      "defined_out": [
        "chunk_size#0",
        "chunks#0",
        "idx#0",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0"
      ]
    },
    "3585": {
      "op": "b ad_terms_after_if_else@8"
    },
    "3588": {
      "block": "ad_terms_else_body@7",
      "stack_in": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "op": "pushint 1024 // 1024",
      "defined_out": [
        "chunk_size#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0"
      ]
    },
    "3591": {
      "block": "ad_terms_after_if_else@8",
      "stack_in": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0"
      ],
      "op": "bytec 7 // 0x64",
      "defined_out": [
        "0x64"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0",
        "0x64"
      ]
    },
    "3593": {
      "op": "frame_dig 2",
      "defined_out": [
        "0x64",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0",
        "0x64",
        "offset#0"
      ]
    },
    "3595": {
      "op": "dup",
      "defined_out": [
        "0x64",
        "offset#0",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0",
        "0x64",
        "offset#0 (copy)",
        "offset#0 (copy)"
      ]
    },
    "3596": {
      "op": "cover 2",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "chunk_size#0",
        "offset#0",
        "0x64",
        "offset#0 (copy)"
      ]
    },
    "3598": {
      "op": "uncover 3",
      "defined_out": [
        "0x64",
        "chunk_size#0",
        "offset#0",
        "offset#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "offset#0",
        "0x64",
        "offset#0 (copy)",
        "chunk_size#0"
      ]
    },
    "3600": {
      "op": "box_extract",
      "defined_out": [
        "data#0",
        "offset#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "offset#0",
        "data#0"
      ]
    },
    "3601": {
      "op": "itxn_begin"
    },
    "3602": {
      "op": "swap",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "data#0",
        "offset#0"
      ]
    },
    "3603": {
      "op": "itob",
      "defined_out": [
        "data#0",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "data#0",
        "val_as_bytes%1#0"
      ]
    },
    "3604": {
      "op": "dig 1",
      "defined_out": [
        "data#0",
        "data#0 (copy)",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "data#0",
        "val_as_bytes%1#0",
        "data#0 (copy)"
      ]
    },
    "3606": {
      "op": "len",
      "defined_out": [
        "data#0",
        "length%0#0",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "data#0",
        "val_as_bytes%1#0",
        "length%0#0"
      ]
    },
    "3607": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "data#0",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "data#0",
        "val_as_bytes%1#0",
        "as_bytes%0#0"
      ]
    },
    "3608": {
      "op": "extract 6 2",
      "defined_out": [
        "data#0",
        "length_uint16%0#0",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "data#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0"
      ]
    },
    "3611": {
      "op": "uncover 2",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "length_uint16%0#0",
        "data#0"
      ]
    },
    "3613": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "3614": {
      "op": "frame_dig -10",
      "defined_out": [
        "encoded_value%0#0",
        "offset#0",
        "val_app#0 (copy)",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_app#0 (copy)"
      ]
    },
    "3616": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "3618": {
      "op": "pushbytes 0x9d64c6e9 // method \"template_load_data(address,uint64,byte[])void\"",
      "defined_out": [
        "Method(template_load_data(address,uint64,byte[])void)",
        "encoded_value%0#0",
        "offset#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "Method(template_load_data(address,uint64,byte[])void)"
      ]
    },
    "3624": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "3626": {
      "op": "frame_dig 3",
      "defined_out": [
        "encoded_value%0#0",
        "offset#0",
        "val_as_bytes%1#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0",
        "val_owner#0"
      ]
    },
    "3628": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_as_bytes%1#0",
        "encoded_value%0#0"
      ]
    },
    "3630": {
      "op": "swap",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "encoded_value%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "3631": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "encoded_value%0#0"
      ]
    },
    "3633": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3635": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "offset#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "appl"
      ]
    },
    "3636": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3638": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "offset#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3639": {
      "op": "itxn_field Fee",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3641": {
      "op": "itxn_submit"
    },
    "3642": {
      "op": "frame_dig 1",
      "defined_out": [
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0"
      ]
    },
    "3644": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0",
        "1"
      ]
    },
    "3645": {
      "op": "+",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "idx#0"
      ]
    },
    "3646": {
      "op": "frame_bury 1",
      "defined_out": [
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3648": {
      "op": "b ad_terms_for_header@4"
    },
    "3651": {
      "block": "ad_terms_after_for@11",
      "stack_in": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "op": "itxn_begin"
    },
    "3652": {
      "op": "frame_dig -10",
      "defined_out": [
        "val_app#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_app#0 (copy)"
      ]
    },
    "3654": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3656": {
      "op": "pushbytes 0xdbe1605f // method \"template_load_end(address)void\"",
      "defined_out": [
        "Method(template_load_end(address)void)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "Method(template_load_end(address)void)"
      ]
    },
    "3662": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3664": {
      "op": "frame_dig 3",
      "defined_out": [
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_owner#0"
      ]
    },
    "3666": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3668": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "appl"
      ]
    },
    "3669": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3671": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3672": {
      "op": "itxn_field Fee",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3674": {
      "op": "itxn_submit"
    },
    "3675": {
      "block": "ad_terms_after_if_else@13",
      "stack_in": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "txn#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "txn#0 (copy)"
      ]
    },
    "3677": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%7#0"
      ]
    },
    "3679": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "3681": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tmp%9#0"
      ]
    },
    "3682": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3683": {
      "op": "frame_dig -10",
      "defined_out": [
        "val_app#0 (copy)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_app#0 (copy)"
      ]
    },
    "3685": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%4#0",
        "value%4#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0",
        "check%4#0"
      ]
    },
    "3687": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0"
      ]
    },
    "3688": {
      "op": "frame_dig -1",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0",
        "txn#0 (copy)"
      ]
    },
    "3690": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%10#0",
        "value%4#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0",
        "tmp%10#0"
      ]
    },
    "3692": {
      "op": "frame_dig -2",
      "defined_out": [
        "mbr_delegator_template_box#0 (copy)",
        "tmp%10#0",
        "value%4#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0",
        "tmp%10#0",
        "mbr_delegator_template_box#0 (copy)"
      ]
    },
    "3694": {
      "op": "-",
      "defined_out": [
        "asa_optin_txn%%param_Amount_idx_0#0",
        "value%4#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0",
        "asa_optin_txn%%param_Amount_idx_0#0"
      ]
    },
    "3695": {
      "op": "itxn_begin"
    },
    "3696": {
      "op": "itxn_field Amount",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "value%4#0"
      ]
    },
    "3698": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3700": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "pay"
      ]
    },
    "3701": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3703": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3704": {
      "op": "itxn_field Fee",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3706": {
      "op": "itxn_next"
    },
    "3707": {
      "op": "frame_dig -10",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_app#0 (copy)"
      ]
    },
    "3709": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3711": {
      "op": "pushbytes 0xad036de5 // method \"ad_terms(address,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64,uint64),(uint64,uint64),((uint64,uint64)[2]),(uint64,uint64),pay)void\"",
      "defined_out": [
        "Method(ad_terms(address,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64,uint64),(uint64,uint64),((uint64,uint64)[2]),(uint64,uint64),pay)void)"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "Method(ad_terms(address,byte[32],(uint64,uint64,uint64,uint64,uint64),(uint64,uint64,uint64,uint64,uint64),(uint64,uint64),((uint64,uint64)[2]),(uint64,uint64),pay)void)"
      ]
    },
    "3717": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3719": {
      "op": "frame_dig 3",
      "defined_out": [
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "val_owner#0"
      ]
    },
    "3721": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3723": {
      "op": "frame_dig -8",
      "defined_out": [
        "tc_sha256#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "tc_sha256#0 (copy)"
      ]
    },
    "3725": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3727": {
      "op": "frame_dig -7",
      "defined_out": [
        "terms_time#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_time#0 (copy)"
      ]
    },
    "3729": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3731": {
      "op": "frame_dig -6",
      "defined_out": [
        "terms_price#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_price#0 (copy)"
      ]
    },
    "3733": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3735": {
      "op": "frame_dig -5",
      "defined_out": [
        "terms_stake#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_stake#0 (copy)"
      ]
    },
    "3737": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3739": {
      "op": "frame_dig -4",
      "defined_out": [
        "terms_reqs#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_reqs#0 (copy)"
      ]
    },
    "3741": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3743": {
      "op": "frame_dig -3",
      "defined_out": [
        "terms_warn#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "terms_warn#0 (copy)"
      ]
    },
    "3745": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3747": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "val_owner#0"
      ],
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "appl"
      ]
    },
    "3748": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3750": {
      "op": "intc_0 // 0",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0",
        "0"
      ]
    },
    "3751": {
      "op": "itxn_field Fee",
      "stack_out": [
        "chunks#0",
        "idx#0",
        "offset#0",
        "val_owner#0"
      ]
    },
    "3753": {
      "op": "itxn_submit"
    },
    "3754": {
      "retsub": true,
      "op": "retsub"
    },
    "3755": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard._assert_terms_time",
      "params": {
        "terms_time#0": "bytes"
      },
      "block": "_assert_terms_time",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3758": {
      "op": "frame_dig -1",
      "defined_out": [
        "terms_time#0 (copy)"
      ],
      "stack_out": [
        "terms_time#0 (copy)"
      ]
    },
    "3760": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "3763": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0"
      ]
    },
    "3764": {
      "op": "bytec 11 // \"noticeboard_terms_timing\"",
      "defined_out": [
        "\"noticeboard_terms_timing\"",
        "0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0",
        "\"noticeboard_terms_timing\""
      ]
    },
    "3766": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3767": {
      "error": "check self.noticeboard_terms_timing exists",
      "op": "assert // check self.noticeboard_terms_timing exists",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "maybe_value%0#0"
      ]
    },
    "3768": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "3771": {
      "op": "b>=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3772": {
      "error": "Ad minimum accepted duration must be larger than the minimum on the platform.",
      "op": "assert // Ad minimum accepted duration must be larger than the minimum on the platform.",
      "stack_out": []
    },
    "3773": {
      "op": "frame_dig -1",
      "stack_out": [
        "terms_time#0 (copy)"
      ]
    },
    "3775": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0"
      ]
    },
    "3778": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0"
      ]
    },
    "3779": {
      "op": "bytec 11 // \"noticeboard_terms_timing\"",
      "stack_out": [
        "reinterpret_biguint%2#0",
        "0",
        "\"noticeboard_terms_timing\""
      ]
    },
    "3781": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3782": {
      "error": "check self.noticeboard_terms_timing exists",
      "op": "assert // check self.noticeboard_terms_timing exists",
      "stack_out": [
        "reinterpret_biguint%2#0",
        "maybe_value%1#0"
      ]
    },
    "3783": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%3#0"
      ],
      "stack_out": [
        "reinterpret_biguint%2#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "3786": {
      "op": "b<=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3787": {
      "error": "Ad maximum accepted duration must be smaller than the maximum on the platform.",
      "op": "assert // Ad maximum accepted duration must be smaller than the maximum on the platform.",
      "stack_out": []
    },
    "3788": {
      "op": "frame_dig -1",
      "stack_out": [
        "terms_time#0 (copy)"
      ]
    },
    "3790": {
      "retsub": true,
      "op": "retsub"
    },
    "3791": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard._assert_terms_price",
      "params": {
        "terms_price#0": "bytes"
      },
      "block": "_assert_terms_price",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3794": {
      "op": "frame_dig -1",
      "defined_out": [
        "terms_price#0 (copy)"
      ],
      "stack_out": [
        "terms_price#0 (copy)"
      ]
    },
    "3796": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "3799": {
      "op": "btoi",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3800": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "3801": {
      "op": "pushint 1000000 // 1000000",
      "defined_out": [
        "1000000",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)",
        "1000000"
      ]
    },
    "3805": {
      "op": "<=",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "3806": {
      "error": "Validator ad commission must be smaller or equal to the maximum possible platform commission.",
      "op": "assert // Validator ad commission must be smaller or equal to the maximum possible platform commission.",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3807": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "3808": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\"",
        "0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "0",
        "\"noticeboard_fees\""
      ]
    },
    "3810": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3811": {
      "error": "check self.noticeboard_fees exists",
      "op": "assert // check self.noticeboard_fees exists",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "3812": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "reinterpret_biguint%0#0"
      ]
    },
    "3815": {
      "op": "swap",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%1#0"
      ]
    },
    "3816": {
      "op": "itob",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%5#0"
      ]
    },
    "3817": {
      "op": "b<=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "3818": {
      "error": "Validator ad commission must be at least the amount defined at the platform.",
      "op": "assert // Validator ad commission must be at least the amount defined at the platform.",
      "stack_out": []
    },
    "3819": {
      "op": "frame_dig -1",
      "stack_out": [
        "terms_price#0 (copy)"
      ]
    },
    "3821": {
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "3824": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "3825": {
      "op": "itob",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "3826": {
      "op": "bytec 16 // 0x61737365745f",
      "defined_out": [
        "0x61737365745f",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "0x61737365745f"
      ]
    },
    "3828": {
      "op": "swap",
      "stack_out": [
        "0x61737365745f",
        "tmp%9#0"
      ]
    },
    "3829": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "3830": {
      "op": "box_get",
      "defined_out": [
        "asset_info#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "asset_info#0",
        "maybe_exists%1#0"
      ]
    },
    "3831": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "asset_info#0"
      ]
    },
    "3832": {
      "op": "dup",
      "defined_out": [
        "asset_info#0",
        "asset_info#0 (copy)"
      ],
      "stack_out": [
        "asset_info#0",
        "asset_info#0 (copy)"
      ]
    },
    "3833": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset_info#0",
        "asset_info#0 (copy)",
        "0"
      ]
    },
    "3834": {
      "op": "getbit",
      "defined_out": [
        "asset_info#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "asset_info#0",
        "is_true%0#0"
      ]
    },
    "3835": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "asset_info#0",
        "is_true%0#0"
      ],
      "stack_out": [
        "asset_info#0",
        "is_true%0#0",
        "0x00"
      ]
    },
    "3838": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset_info#0",
        "is_true%0#0",
        "0x00",
        "0"
      ]
    },
    "3839": {
      "op": "uncover 2",
      "stack_out": [
        "asset_info#0",
        "0x00",
        "0",
        "is_true%0#0"
      ]
    },
    "3841": {
      "op": "setbit",
      "defined_out": [
        "asset_info#0",
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "asset_info#0",
        "encoded_bool%0#0"
      ]
    },
    "3842": {
      "op": "intc_0 // 0",
      "stack_out": [
        "asset_info#0",
        "encoded_bool%0#0",
        "0"
      ]
    },
    "3843": {
      "op": "getbit",
      "defined_out": [
        "asset_info#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "asset_info#0",
        "tmp%11#0"
      ]
    },
    "3844": {
      "error": "Validator ad payment asset must be allowed by the platform.",
      "op": "assert // Validator ad payment asset must be allowed by the platform.",
      "stack_out": [
        "asset_info#0"
      ]
    },
    "3845": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset_info#0",
        "terms_price#0 (copy)"
      ]
    },
    "3847": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_info#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "3850": {
      "op": "dig 1",
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%1#0",
        "asset_info#0 (copy)"
      ]
    },
    "3852": {
      "op": "extract 1 8 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_info#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ],
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%2#0"
      ]
    },
    "3855": {
      "op": "b>=",
      "defined_out": [
        "asset_info#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "asset_info#0",
        "tmp%12#0"
      ]
    },
    "3856": {
      "error": "Ad fee_round_min must be larger than the minimum on the platform.",
      "op": "assert // Ad fee_round_min must be larger than the minimum on the platform.",
      "stack_out": [
        "asset_info#0"
      ]
    },
    "3857": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset_info#0",
        "terms_price#0 (copy)"
      ]
    },
    "3859": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_info#0",
        "reinterpret_biguint%3#0"
      ],
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "3862": {
      "op": "dig 1",
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%3#0",
        "asset_info#0 (copy)"
      ]
    },
    "3864": {
      "op": "extract 9 8 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_info#0",
        "reinterpret_biguint%3#0",
        "reinterpret_biguint%4#0"
      ],
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%3#0",
        "reinterpret_biguint%4#0"
      ]
    },
    "3867": {
      "op": "b>=",
      "defined_out": [
        "asset_info#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "asset_info#0",
        "tmp%13#0"
      ]
    },
    "3868": {
      "error": "Ad fee_round_var duration must be larger than the minimum on the platform.",
      "op": "assert // Ad fee_round_var duration must be larger than the minimum on the platform.",
      "stack_out": [
        "asset_info#0"
      ]
    },
    "3869": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset_info#0",
        "terms_price#0 (copy)"
      ]
    },
    "3871": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "asset_info#0",
        "reinterpret_biguint%5#0"
      ],
      "stack_out": [
        "asset_info#0",
        "reinterpret_biguint%5#0"
      ]
    },
    "3874": {
      "op": "swap",
      "stack_out": [
        "reinterpret_biguint%5#0",
        "asset_info#0"
      ]
    },
    "3875": {
      "op": "extract 17 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%5#0",
        "reinterpret_biguint%6#0"
      ],
      "stack_out": [
        "reinterpret_biguint%5#0",
        "reinterpret_biguint%6#0"
      ]
    },
    "3878": {
      "op": "b>=",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "3879": {
      "error": "Ad fee_setup must be larger than the minimum on the platform.",
      "op": "assert // Ad fee_setup must be larger than the minimum on the platform.",
      "stack_out": []
    },
    "3880": {
      "op": "frame_dig -1",
      "stack_out": [
        "terms_price#0 (copy)"
      ]
    },
    "3882": {
      "retsub": true,
      "op": "retsub"
    },
    "3883": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard._assert_terms_stake",
      "params": {
        "terms_stake#0": "bytes"
      },
      "block": "_assert_terms_stake",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "3886": {
      "op": "frame_dig -1",
      "defined_out": [
        "terms_stake#0 (copy)"
      ],
      "stack_out": [
        "terms_stake#0 (copy)"
      ]
    },
    "3888": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "3891": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0"
      ]
    },
    "3892": {
      "op": "bytec 12 // \"noticeboard_terms_node\"",
      "defined_out": [
        "\"noticeboard_terms_node\"",
        "0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0",
        "\"noticeboard_terms_node\""
      ]
    },
    "3894": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "3895": {
      "error": "check self.noticeboard_terms_node exists",
      "op": "assert // check self.noticeboard_terms_node exists",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "maybe_value%0#0"
      ]
    },
    "3896": {
      "op": "extract 0 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0"
      ]
    },
    "3899": {
      "op": "dig 1",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%0#0 (copy)",
        "reinterpret_biguint%1#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%1#0",
        "reinterpret_biguint%0#0 (copy)"
      ]
    },
    "3901": {
      "op": "b>=",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "tmp%0#0"
      ]
    },
    "3902": {
      "error": "Ad stake_max must be smaller than the maximum on the platform.",
      "op": "assert // Ad stake_max must be smaller than the maximum on the platform.",
      "stack_out": [
        "reinterpret_biguint%0#0"
      ]
    },
    "3903": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0"
      ]
    },
    "3904": {
      "op": "bytec 12 // \"noticeboard_terms_node\"",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "0",
        "\"noticeboard_terms_node\""
      ]
    },
    "3906": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "reinterpret_biguint%0#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "3907": {
      "error": "check self.noticeboard_terms_node exists",
      "op": "assert // check self.noticeboard_terms_node exists",
      "stack_out": [
        "reinterpret_biguint%0#0",
        "maybe_value%1#0"
      ]
    },
    "3908": {
      "op": "extract 8 8 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%3#0"
      ],
      "stack_out": [
        "reinterpret_biguint%0#0",
        "reinterpret_biguint%3#0"
      ]
    },
    "3911": {
      "op": "b>=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "3912": {
      "error": "Ad stake_max must be larger than the minimum on the platform.",
      "op": "assert // Ad stake_max must be larger than the minimum on the platform.",
      "stack_out": []
    },
    "3913": {
      "op": "frame_dig -1",
      "stack_out": [
        "terms_stake#0 (copy)"
      ]
    },
    "3915": {
      "retsub": true,
      "op": "retsub"
    },
    "3916": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_income",
      "params": {
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "asset_id#0": "uint64"
      },
      "block": "ad_income",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "3919": {
      "op": "txn Sender"
    },
    "3921": {
      "op": "dup"
    },
    "3922": {
      "op": "frame_dig -3"
    },
    "3924": {
      "op": "frame_dig -2"
    },
    "3926": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3927": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3930": {
      "op": "itxn_begin"
    },
    "3931": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "asset_id#0 (copy)"
      ]
    },
    "3933": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3934": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0",
        "val_app#0 (copy)"
      ]
    },
    "3936": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3938": {
      "op": "pushbytes 0x8bb07b5f // method \"ad_income(address,uint64)uint64\"",
      "defined_out": [
        "Method(ad_income(address,uint64)uint64)",
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0",
        "Method(ad_income(address,uint64)uint64)"
      ]
    },
    "3944": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3946": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_owner#0"
      ]
    },
    "3947": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "3949": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "3951": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "3952": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "3954": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "3955": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "3957": {
      "op": "itxn_submit"
    },
    "3958": {
      "op": "itxn LastLog"
    },
    "3960": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "3961": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "income#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "income#0"
      ]
    },
    "3964": {
      "op": "swap",
      "stack_out": [
        "income#0",
        "awst_tmp%0#0"
      ]
    },
    "3965": {
      "op": "extract 0 4",
      "defined_out": [
        "income#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "income#0",
        "tmp%1#0"
      ]
    },
    "3968": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "income#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "income#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "3969": {
      "op": "==",
      "defined_out": [
        "income#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "income#0",
        "tmp%2#0"
      ]
    },
    "3970": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "income#0"
      ]
    },
    "3971": {
      "retsub": true,
      "op": "retsub"
    },
    "3972": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.ad_asa_close",
      "params": {
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "asset_id#0": "uint64"
      },
      "block": "ad_asa_close",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "3975": {
      "op": "txn Sender"
    },
    "3977": {
      "op": "dup"
    },
    "3978": {
      "op": "frame_dig -3"
    },
    "3980": {
      "op": "frame_dig -2"
    },
    "3982": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "3983": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "val_owner#0"
      ]
    },
    "3986": {
      "op": "itxn_begin"
    },
    "3987": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "asset_id#0 (copy)"
      ]
    },
    "3989": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3990": {
      "op": "frame_dig -3",
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0",
        "val_app#0 (copy)"
      ]
    },
    "3992": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "3994": {
      "op": "pushbytes 0x30a38659 // method \"ad_asa_close(address,uint64)void\"",
      "defined_out": [
        "Method(ad_asa_close(address,uint64)void)",
        "val_as_bytes%0#0",
        "val_owner#0"
      ],
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0",
        "Method(ad_asa_close(address,uint64)void)"
      ]
    },
    "4000": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_owner#0",
        "val_as_bytes%0#0"
      ]
    },
    "4002": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_owner#0"
      ]
    },
    "4003": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "4005": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4007": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4008": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4010": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4011": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4013": {
      "op": "itxn_submit"
    },
    "4014": {
      "retsub": true,
      "op": "retsub"
    },
    "4015": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.contract_create",
      "params": {
        "del_beneficiary#0": "bytes",
        "rounds_duration#0": "uint64",
        "stake_max#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "del_app_idx#0": "uint64",
        "tc_sha256#0": "bytes",
        "partner_address#0": "bytes",
        "mbr_txn#0": "uint64",
        "txn#0": "uint64"
      },
      "block": "contract_create",
      "stack_in": [],
      "op": "proto 11 1"
    },
    "4018": {
      "op": "intc_0 // 0",
      "stack_out": [
        "partner#1"
      ]
    },
    "4019": {
      "op": "dupn 4",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6"
      ]
    },
    "4021": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0"
      ]
    },
    "4023": {
      "op": "dupn 8",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ]
    },
    "4025": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "0"
      ]
    },
    "4026": {
      "op": "bytec_2 // \"state\"",
      "defined_out": [
        "\"state\"",
        "0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "0",
        "\"state\""
      ]
    },
    "4027": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "4028": {
      "error": "check self.state exists",
      "op": "assert // check self.state exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "maybe_value%0#0"
      ]
    },
    "4029": {
      "op": "bytec 9 // 0x02",
      "defined_out": [
        "0x02",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "maybe_value%0#0",
        "0x02"
      ]
    },
    "4031": {
      "op": "==",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "tmp%0#0"
      ]
    },
    "4032": {
      "error": "Cannot be called from other state than SET.",
      "op": "assert // Cannot be called from other state than SET.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ]
    },
    "4033": {
      "op": "txn Sender"
    },
    "4035": {
      "op": "dup",
      "defined_out": [
        "del_manager#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "del_manager#0"
      ]
    },
    "4036": {
      "op": "box_get",
      "defined_out": [
        "del_manager#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "4037": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "maybe_value%1#0"
      ]
    },
    "4038": {
      "op": "extract 0 4 // on error: Index access is out of bounds",
      "defined_out": [
        "del_manager#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%2#0"
      ]
    },
    "4041": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_manager#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%2#0",
        "0x64656c5f"
      ]
    },
    "4043": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%3#0"
      ]
    },
    "4044": {
      "error": "User is not a registered delegator on the platform.",
      "op": "assert // User is not a registered delegator on the platform.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0"
      ]
    },
    "4045": {
      "op": "frame_dig -8",
      "defined_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_owner#0 (copy)"
      ]
    },
    "4047": {
      "op": "frame_dig -7",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4049": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4051": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4052": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0"
      ]
    },
    "4055": {
      "op": "intc_0 // 0",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "0"
      ]
    },
    "4056": {
      "op": "bytec 10 // \"tc_sha256\"",
      "defined_out": [
        "\"tc_sha256\"",
        "0",
        "del_manager#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "0",
        "\"tc_sha256\""
      ]
    },
    "4058": {
      "op": "app_global_get_ex",
      "defined_out": [
        "del_manager#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "4059": {
      "error": "check self.tc_sha256 exists",
      "op": "assert // check self.tc_sha256 exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "maybe_value%2#0"
      ]
    },
    "4060": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_manager#0",
        "maybe_value%2#0",
        "tc_sha256#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "maybe_value%2#0",
        "tc_sha256#0 (copy)"
      ]
    },
    "4062": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%4#0"
      ]
    },
    "4063": {
      "error": "Terms and conditions do not match the ones defined by the platform.",
      "op": "assert // Terms and conditions do not match the ones defined by the platform.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0"
      ]
    },
    "4064": {
      "op": "frame_dig -7",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_app#0 (copy)"
      ]
    },
    "4066": {
      "op": "bytec 10 // 0x74635f736861323536",
      "defined_out": [
        "0x74635f736861323536",
        "del_manager#0",
        "val_app#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_app#0 (copy)",
        "0x74635f736861323536"
      ]
    },
    "4068": {
      "op": "app_global_get_ex",
      "defined_out": [
        "del_manager#0",
        "val_tc.0#0",
        "val_tc.1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_tc.0#0",
        "val_tc.1#0"
      ]
    },
    "4069": {
      "op": "pop",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_tc.0#0"
      ]
    },
    "4070": {
      "op": "intc_0 // 0",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_tc.0#0",
        "0"
      ]
    },
    "4071": {
      "op": "bytec 10 // \"tc_sha256\"",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_tc.0#0",
        "0",
        "\"tc_sha256\""
      ]
    },
    "4073": {
      "op": "app_global_get_ex",
      "defined_out": [
        "del_manager#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "val_tc.0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_tc.0#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "4074": {
      "error": "check self.tc_sha256 exists",
      "op": "assert // check self.tc_sha256 exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_tc.0#0",
        "maybe_value%3#0"
      ]
    },
    "4075": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%5#0"
      ]
    },
    "4076": {
      "error": "Validator ad does not comply with platform's terms and conditions.",
      "op": "assert // Validator ad does not comply with platform's terms and conditions.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0"
      ]
    },
    "4077": {
      "op": "frame_dig -2",
      "defined_out": [
        "del_manager#0",
        "mbr_txn#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "mbr_txn#0 (copy)"
      ]
    },
    "4079": {
      "op": "gtxns Receiver",
      "defined_out": [
        "del_manager#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%6#0"
      ]
    },
    "4081": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "del_manager#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "4083": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "tmp%8#0"
      ]
    },
    "4084": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0"
      ]
    },
    "4085": {
      "op": "frame_dig -7",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "val_app#0 (copy)"
      ]
    },
    "4087": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%0#0",
        "del_manager#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "check%0#0"
      ]
    },
    "4089": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0"
      ]
    },
    "4090": {
      "op": "frame_dig -2",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn#0 (copy)"
      ]
    },
    "4092": {
      "op": "gtxns Amount",
      "defined_out": [
        "del_manager#0",
        "tmp%9#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0"
      ]
    },
    "4094": {
      "op": "intc_0 // 0",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0",
        "0"
      ]
    },
    "4095": {
      "op": "bytec 8 // \"noticeboard_fees\"",
      "defined_out": [
        "\"noticeboard_fees\"",
        "0",
        "del_manager#0",
        "tmp%9#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0",
        "0",
        "\"noticeboard_fees\""
      ]
    },
    "4097": {
      "op": "app_global_get_ex",
      "defined_out": [
        "del_manager#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%9#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "4098": {
      "error": "check self.noticeboard_fees exists",
      "op": "assert // check self.noticeboard_fees exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0",
        "maybe_value%4#0"
      ]
    },
    "4099": {
      "op": "extract 32 8 // on error: Index access is out of bounds",
      "defined_out": [
        "del_manager#0",
        "tmp%10#0",
        "tmp%9#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "4102": {
      "op": "btoi",
      "defined_out": [
        "del_manager#0",
        "tmp%11#0",
        "tmp%9#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "4103": {
      "op": "-",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0"
      ]
    },
    "4104": {
      "op": "frame_dig -1",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "txn#0 (copy)",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "txn#0 (copy)"
      ]
    },
    "4106": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4108": {
      "op": "dup",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "4109": {
      "op": "intc_1 // pay",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "pay",
        "tmp%12#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%12#0",
        "pay"
      ]
    },
    "4110": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%13#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "4111": {
      "op": "bz contract_create_else_body@2",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4114": {
      "op": "frame_dig -1",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn#0 (copy)"
      ]
    },
    "4116": {
      "op": "gtxns Receiver",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%14#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%14#0"
      ]
    },
    "4118": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "4120": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%16#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%16#0"
      ]
    },
    "4121": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4122": {
      "op": "intc_1 // pay",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ]
    },
    "4123": {
      "op": "frame_bury 12",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4125": {
      "op": "frame_dig -7",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_app#0 (copy)"
      ]
    },
    "4127": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%1#0",
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "check%1#0"
      ]
    },
    "4129": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0"
      ]
    },
    "4130": {
      "op": "intc_1 // 1",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn_forward%%Receiver_length#0"
      ]
    },
    "4131": {
      "op": "frame_bury 8",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0"
      ]
    },
    "4133": {
      "op": "frame_dig -1",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn#0 (copy)"
      ]
    },
    "4135": {
      "op": "gtxns Amount",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn_forward%%param_Amount_idx_0#0"
      ]
    },
    "4137": {
      "op": "frame_bury 10",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0"
      ]
    },
    "4139": {
      "op": "intc_1 // 1",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn_forward%%Amount_length#0"
      ]
    },
    "4140": {
      "op": "frame_bury 5",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0"
      ]
    },
    "4142": {
      "op": "intc_0 // 0",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn_forward%%XferAsset_length#0"
      ]
    },
    "4143": {
      "op": "frame_bury 9",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0"
      ]
    },
    "4145": {
      "op": "intc_0 // 0",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn_forward%%AssetAmount_length#0"
      ]
    },
    "4146": {
      "op": "frame_bury 6",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0"
      ]
    },
    "4148": {
      "op": "intc_0 // 0",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0",
        "value%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%1#0",
        "txn_forward%%AssetReceiver_length#0"
      ]
    },
    "4149": {
      "op": "frame_bury 7",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_Receiver_idx_0#6"
      ]
    },
    "4151": {
      "op": "frame_bury 4",
      "defined_out": [
        "del_manager#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4153": {
      "op": "b contract_create_after_if_else@6"
    },
    "4156": {
      "block": "contract_create_else_body@2",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 17",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%12#0"
      ]
    },
    "4158": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "tmp%12#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%12#0",
        "axfer"
      ]
    },
    "4160": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%18#0"
      ]
    },
    "4161": {
      "error": "Transaction type must be either Payment or AssetTransfer.",
      "op": "assert // Transaction type must be either Payment or AssetTransfer.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4162": {
      "op": "frame_dig -1",
      "defined_out": [
        "tmp%12#0",
        "txn#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn#0 (copy)"
      ]
    },
    "4164": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%12#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%19#0"
      ]
    },
    "4166": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%12#0",
        "tmp%19#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%19#0",
        "tmp%20#0"
      ]
    },
    "4168": {
      "op": "==",
      "defined_out": [
        "tmp%12#0",
        "tmp%21#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%21#0"
      ]
    },
    "4169": {
      "error": "Transaction must be to this contract.",
      "op": "assert // Transaction must be to this contract.",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4170": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ]
    },
    "4172": {
      "op": "frame_bury 12",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4174": {
      "op": "frame_dig -1",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn#0 (copy)"
      ]
    },
    "4176": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ]
    },
    "4178": {
      "op": "frame_bury 13",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4180": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0"
      ]
    },
    "4181": {
      "op": "frame_bury 9",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4183": {
      "op": "frame_dig -7",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "val_app#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_app#0 (copy)"
      ]
    },
    "4185": {
      "op": "app_params_get AppAddress",
      "defined_out": [
        "check%2#0",
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "check%2#0"
      ]
    },
    "4187": {
      "error": "application exists",
      "op": "assert // application exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0"
      ]
    },
    "4188": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "txn_forward%%AssetReceiver_length#0"
      ]
    },
    "4189": {
      "op": "frame_bury 7",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0"
      ]
    },
    "4191": {
      "op": "frame_dig -1",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "txn#0 (copy)"
      ]
    },
    "4193": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "txn_forward%%param_AssetAmount_idx_0#0"
      ]
    },
    "4195": {
      "op": "frame_bury 11",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0"
      ]
    },
    "4197": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "txn_forward%%AssetAmount_length#0"
      ]
    },
    "4198": {
      "op": "frame_bury 6",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0"
      ]
    },
    "4200": {
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "txn_forward%%Receiver_length#0"
      ]
    },
    "4201": {
      "op": "frame_bury 8",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0"
      ]
    },
    "4203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "value%2#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%2#0",
        "txn_forward%%Amount_length#0"
      ]
    },
    "4204": {
      "op": "frame_bury 5",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_AssetReceiver_idx_0#2"
      ]
    },
    "4206": {
      "op": "frame_bury 3",
      "defined_out": [
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4208": {
      "block": "contract_create_after_if_else@6",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "bytec 17 // 0x706172746e65725f",
      "defined_out": [
        "0x706172746e65725f"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "0x706172746e65725f"
      ]
    },
    "4210": {
      "op": "frame_dig -3",
      "defined_out": [
        "0x706172746e65725f",
        "partner_address#0 (copy)"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "0x706172746e65725f",
        "partner_address#0 (copy)"
      ]
    },
    "4212": {
      "op": "concat",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "4213": {
      "op": "dup",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%22#0",
        "tmp%22#0"
      ]
    },
    "4214": {
      "op": "frame_bury 2",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "4216": {
      "op": "box_len",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "4217": {
      "op": "bury 1",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "maybe_exists%5#0"
      ]
    },
    "4219": {
      "op": "bz contract_create_else_body@8",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4222": {
      "op": "frame_dig 2",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "tmp%22#0"
      ]
    },
    "4224": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%6#0",
        "partner_commissions#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "partner_commissions#0",
        "maybe_exists%6#0"
      ]
    },
    "4225": {
      "op": "swap",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "maybe_exists%6#0",
        "partner_commissions#0"
      ]
    },
    "4226": {
      "op": "frame_bury 1",
      "defined_out": [
        "maybe_exists%6#0",
        "partner_commissions#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "maybe_exists%6#0"
      ]
    },
    "4228": {
      "error": "check self.partners entry exists",
      "op": "assert // check self.partners entry exists",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4229": {
      "op": "frame_dig -3",
      "defined_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "partner#1"
      ]
    },
    "4231": {
      "op": "frame_bury 0",
      "defined_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4233": {
      "op": "b contract_create_after_if_else@9"
    },
    "4236": {
      "block": "contract_create_else_body@8",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "global ZeroAddress",
      "defined_out": [
        "partner#1"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "partner#1"
      ]
    },
    "4238": {
      "op": "frame_bury 0",
      "defined_out": [
        "partner#1"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4240": {
      "op": "pushbytes 0x00000000000000000000000000000000",
      "defined_out": [
        "partner#1",
        "partner_commissions#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "partner_commissions#0"
      ]
    },
    "4258": {
      "op": "frame_bury 1",
      "defined_out": [
        "partner#1",
        "partner_commissions#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4260": {
      "block": "contract_create_after_if_else@9",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "itxn_begin"
    },
    "4261": {
      "op": "frame_dig 16",
      "defined_out": [
        "mbr_txn_forward%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "mbr_txn_forward%%param_Amount_idx_0#0"
      ]
    },
    "4263": {
      "op": "itxn_field Amount",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4265": {
      "op": "frame_dig 15",
      "defined_out": [
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "value%0#0"
      ]
    },
    "4267": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4269": {
      "op": "intc_1 // pay",
      "defined_out": [
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "pay",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "pay"
      ]
    },
    "4270": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4272": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "4273": {
      "op": "itxn_field Fee",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4275": {
      "op": "itxn_next"
    },
    "4276": {
      "op": "frame_dig 7",
      "defined_out": [
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%AssetReceiver_length#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%AssetReceiver_length#0"
      ]
    },
    "4278": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%AssetReceiver_length#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%AssetReceiver_length#0",
        "1"
      ]
    },
    "4279": {
      "op": ">=",
      "defined_out": [
        "is_AssetReceiver_count_gte_1%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%AssetReceiver_length#0",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "is_AssetReceiver_count_gte_1%0#0"
      ]
    },
    "4280": {
      "op": "bz contract_create_next_field@12",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4283": {
      "op": "frame_dig 3",
      "defined_out": [
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "value%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_AssetReceiver_idx_0#2"
      ]
    },
    "4285": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4287": {
      "block": "contract_create_next_field@12",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "txn_forward%%AssetAmount_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%AssetAmount_length#0"
      ]
    },
    "4289": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "txn_forward%%AssetAmount_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%AssetAmount_length#0",
        "1"
      ]
    },
    "4290": {
      "op": ">=",
      "defined_out": [
        "is_AssetAmount_count_gte_1%0#0",
        "txn_forward%%AssetAmount_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "is_AssetAmount_count_gte_1%0#0"
      ]
    },
    "4291": {
      "op": "bz contract_create_next_field@14",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4294": {
      "op": "frame_dig 11",
      "defined_out": [
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%param_AssetAmount_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_AssetAmount_idx_0#0"
      ]
    },
    "4296": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4298": {
      "block": "contract_create_next_field@14",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 9",
      "defined_out": [
        "txn_forward%%XferAsset_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0"
      ]
    },
    "4300": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "txn_forward%%XferAsset_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%XferAsset_length#0",
        "1"
      ]
    },
    "4301": {
      "op": ">=",
      "defined_out": [
        "is_XferAsset_count_gte_1%0#0",
        "txn_forward%%XferAsset_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "is_XferAsset_count_gte_1%0#0"
      ]
    },
    "4302": {
      "op": "bz contract_create_next_field@16",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4305": {
      "op": "frame_dig 13",
      "defined_out": [
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_XferAsset_idx_0#0"
      ]
    },
    "4307": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4309": {
      "block": "contract_create_next_field@16",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 5",
      "defined_out": [
        "txn_forward%%Amount_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0"
      ]
    },
    "4311": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "txn_forward%%Amount_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Amount_length#0",
        "1"
      ]
    },
    "4312": {
      "op": ">=",
      "defined_out": [
        "is_Amount_count_gte_1%0#0",
        "txn_forward%%Amount_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "is_Amount_count_gte_1%0#0"
      ]
    },
    "4313": {
      "op": "bz contract_create_next_field@18",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4316": {
      "op": "frame_dig 10",
      "defined_out": [
        "txn_forward%%Amount_length#0",
        "txn_forward%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_Amount_idx_0#0"
      ]
    },
    "4318": {
      "op": "itxn_field Amount",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4320": {
      "block": "contract_create_next_field@18",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 8",
      "defined_out": [
        "txn_forward%%Receiver_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Receiver_length#0"
      ]
    },
    "4322": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "txn_forward%%Receiver_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%Receiver_length#0",
        "1"
      ]
    },
    "4323": {
      "op": ">=",
      "defined_out": [
        "is_Receiver_count_gte_1%0#0",
        "txn_forward%%Receiver_length#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "is_Receiver_count_gte_1%0#0"
      ]
    },
    "4324": {
      "op": "bz contract_create_next_field@20",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4327": {
      "op": "frame_dig 4",
      "defined_out": [
        "txn_forward%%Receiver_length#0",
        "txn_forward%%param_Receiver_idx_0#6"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_Receiver_idx_0#6"
      ]
    },
    "4329": {
      "op": "itxn_field Receiver",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4331": {
      "block": "contract_create_next_field@20",
      "stack_in": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ],
      "op": "frame_dig 12",
      "defined_out": [
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ]
    },
    "4333": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4335": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "0"
      ]
    },
    "4336": {
      "op": "itxn_field Fee",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0"
      ]
    },
    "4338": {
      "op": "itxn_next"
    },
    "4339": {
      "op": "frame_dig -10",
      "defined_out": [
        "rounds_duration#0 (copy)",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "rounds_duration#0 (copy)"
      ]
    },
    "4341": {
      "op": "itob",
      "defined_out": [
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0"
      ]
    },
    "4342": {
      "op": "frame_dig -9",
      "defined_out": [
        "stake_max#0 (copy)",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "stake_max#0 (copy)"
      ]
    },
    "4344": {
      "op": "itob",
      "defined_out": [
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "4345": {
      "op": "frame_dig -7",
      "defined_out": [
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_app#0 (copy)",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_app#0 (copy)"
      ]
    },
    "4347": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "4349": {
      "op": "pushbytes 0xc47f3b93 // method \"contract_create(address,address,uint64,uint64,address,(uint64,uint64),pay,txn)uint64\"",
      "defined_out": [
        "Method(contract_create(address,address,uint64,uint64,address,(uint64,uint64),pay,txn)uint64)",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "Method(contract_create(address,address,uint64,uint64,address,(uint64,uint64),pay,txn)uint64)"
      ]
    },
    "4355": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "4357": {
      "op": "frame_dig 14",
      "defined_out": [
        "del_manager#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "del_manager#0"
      ]
    },
    "4359": {
      "op": "dup",
      "defined_out": [
        "del_manager#0",
        "del_manager#0 (copy)",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "del_manager#0 (copy)",
        "del_manager#0 (copy)"
      ]
    },
    "4360": {
      "op": "cover 3",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "del_manager#0 (copy)"
      ]
    },
    "4362": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "4364": {
      "op": "frame_dig -11",
      "defined_out": [
        "del_beneficiary#0 (copy)",
        "del_manager#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "del_beneficiary#0 (copy)"
      ]
    },
    "4366": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "4368": {
      "op": "swap",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "val_as_bytes%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "4369": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "val_as_bytes%1#0"
      ]
    },
    "4371": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0"
      ]
    },
    "4373": {
      "op": "frame_dig 0",
      "defined_out": [
        "del_manager#0",
        "partner#1",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "partner#1"
      ]
    },
    "4375": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0"
      ]
    },
    "4377": {
      "op": "frame_dig 1",
      "defined_out": [
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "partner_commissions#0"
      ]
    },
    "4379": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0"
      ]
    },
    "4381": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "appl"
      ]
    },
    "4382": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0"
      ]
    },
    "4384": {
      "op": "intc_0 // 0",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "0"
      ]
    },
    "4385": {
      "op": "itxn_field Fee",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0"
      ]
    },
    "4387": {
      "op": "itxn_submit"
    },
    "4388": {
      "op": "gitxn 2 LastLog"
    },
    "4391": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4392": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "del_app_id#0",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "awst_tmp%0#0",
        "del_app_id#0"
      ]
    },
    "4395": {
      "op": "swap",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "del_app_id#0",
        "awst_tmp%0#0"
      ]
    },
    "4396": {
      "op": "extract 0 4",
      "defined_out": [
        "del_app_id#0",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "tmp%25#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "del_app_id#0",
        "tmp%25#0"
      ]
    },
    "4399": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "del_app_id#0",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "tmp%25#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "del_app_id#0",
        "tmp%25#0",
        "0x151f7c75"
      ]
    },
    "4400": {
      "op": "==",
      "defined_out": [
        "del_app_id#0",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "tmp%26#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "del_app_id#0",
        "tmp%26#0"
      ]
    },
    "4401": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_manager#0",
        "del_app_id#0"
      ]
    },
    "4402": {
      "op": "swap",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_app_id#0",
        "del_manager#0"
      ]
    },
    "4403": {
      "op": "dig 1",
      "defined_out": [
        "del_app_id#0",
        "del_app_id#0 (copy)",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_app_id#0",
        "del_manager#0",
        "del_app_id#0 (copy)"
      ]
    },
    "4405": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app_id#0",
        "del_app_id#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0",
        "partner#1",
        "partner_commissions#0",
        "txn_forward%%param_TypeEnum_idx_0#0"
      ],
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_app_id#0",
        "del_manager#0",
        "del_app_id#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4407": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._store_user_app",
      "op": "callsub _store_user_app",
      "stack_out": [
        "partner#1",
        "partner_commissions#0",
        "tmp%22#0",
        "txn_forward%%param_AssetReceiver_idx_0#2",
        "txn_forward%%param_Receiver_idx_0#6",
        "txn_forward%%Amount_length#0",
        "txn_forward%%AssetAmount_length#0",
        "txn_forward%%AssetReceiver_length#0",
        "txn_forward%%Receiver_length#0",
        "txn_forward%%XferAsset_length#0",
        "txn_forward%%param_Amount_idx_0#0",
        "txn_forward%%param_AssetAmount_idx_0#0",
        "txn_forward%%param_TypeEnum_idx_0#0",
        "txn_forward%%param_XferAsset_idx_0#0",
        "del_manager#0",
        "value%0#0",
        "mbr_txn_forward%%param_Amount_idx_0#0",
        "tmp%12#0",
        "del_app_id#0"
      ]
    },
    "4410": {
      "op": "frame_bury 0"
    },
    "4412": {
      "retsub": true,
      "op": "retsub"
    },
    "4413": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.keys_confirm",
      "params": {
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "keys_confirm",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "4416": {
      "op": "txn Sender"
    },
    "4418": {
      "op": "dup"
    },
    "4419": {
      "op": "frame_dig -5"
    },
    "4421": {
      "op": "frame_dig -4"
    },
    "4423": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4425": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "4428": {
      "op": "frame_dig -3",
      "defined_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ]
    },
    "4430": {
      "op": "frame_dig -2",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4432": {
      "op": "frame_dig -1",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4434": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4435": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "4438": {
      "op": "itxn_begin"
    },
    "4439": {
      "op": "frame_dig -2",
      "stack_out": [
        "del_manager#0",
        "val_app#0 (copy)"
      ]
    },
    "4441": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "4443": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_manager#0",
        "del_app#0 (copy)"
      ]
    },
    "4445": {
      "op": "itxn_field Applications",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "4447": {
      "op": "pushbytes 0x800fd2a1 // method \"keys_confirm(address,application)void\"",
      "defined_out": [
        "Method(keys_confirm(address,application)void)",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "Method(keys_confirm(address,application)void)"
      ]
    },
    "4453": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "4455": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4457": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4458": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4460": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4461": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4463": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4464": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4466": {
      "op": "itxn_submit"
    },
    "4467": {
      "retsub": true,
      "op": "retsub"
    },
    "4468": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.keys_not_confirmed",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "keys_not_confirmed",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "4471": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4473": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4475": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4477": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4479": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4482": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4484": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4486": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4488": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4489": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4492": {
      "op": "itxn_begin"
    },
    "4493": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "4495": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4497": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "4499": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "4501": {
      "op": "pushbytes 0xe03402ed // method \"keys_not_confirmed(application)(address,byte[100])\"",
      "defined_out": [
        "Method(keys_not_confirmed(application)(address,byte[100]))"
      ],
      "stack_out": [
        "Method(keys_not_confirmed(application)(address,byte[100]))"
      ]
    },
    "4507": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4509": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4510": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4512": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4513": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4515": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4516": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4518": {
      "op": "itxn_submit"
    },
    "4519": {
      "op": "itxn LastLog"
    },
    "4521": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4522": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "4525": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "4526": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "4529": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "4530": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "4531": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "4532": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "4533": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "4536": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "res#0"
      ]
    },
    "4537": {
      "op": "extract 32 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "4540": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "4543": {
      "retsub": true,
      "op": "retsub"
    },
    "4544": {
      "subroutine": "smart_contracts.helpers.common.try_send_note",
      "params": {
        "account#0": "bytes",
        "msg#0": "bytes"
      },
      "block": "try_send_note",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "4547": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "4549": {
      "op": "balance",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4550": {
      "op": "global MinBalance",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "4552": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "4553": {
      "op": "bz try_send_note_after_if_else@3",
      "stack_out": []
    },
    "4556": {
      "op": "itxn_begin"
    },
    "4557": {
      "op": "frame_dig -1",
      "defined_out": [
        "msg#0 (copy)"
      ],
      "stack_out": [
        "msg#0 (copy)"
      ]
    },
    "4559": {
      "op": "itxn_field Note",
      "stack_out": []
    },
    "4561": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4562": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "4564": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "4566": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "4568": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "4569": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4571": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "4572": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4574": {
      "op": "itxn_submit"
    },
    "4575": {
      "block": "try_send_note_after_if_else@3",
      "stack_in": [],
      "retsub": true,
      "op": "retsub"
    },
    "4576": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.keys_not_submitted",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "keys_not_submitted",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "4579": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4581": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4583": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4585": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4587": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4590": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4592": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4594": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4596": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4597": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4600": {
      "op": "itxn_begin"
    },
    "4601": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "4603": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4605": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "4607": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "4609": {
      "op": "pushbytes 0x4dd09b26 // method \"keys_not_submitted(application)(address,byte[100])\"",
      "defined_out": [
        "Method(keys_not_submitted(application)(address,byte[100]))"
      ],
      "stack_out": [
        "Method(keys_not_submitted(application)(address,byte[100]))"
      ]
    },
    "4615": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4617": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4618": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4620": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4621": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4623": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4624": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4626": {
      "op": "itxn_submit"
    },
    "4627": {
      "op": "itxn LastLog"
    },
    "4629": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4630": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "4633": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "4634": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "4637": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "4638": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "4639": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "4640": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "4641": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "4644": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "res#0"
      ]
    },
    "4645": {
      "op": "extract 32 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "4648": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "4651": {
      "retsub": true,
      "op": "retsub"
    },
    "4652": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.keys_submit",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64",
        "key_reg_txn_info#0": "bytes"
      },
      "block": "keys_submit",
      "stack_in": [],
      "op": "proto 7 0"
    },
    "4655": {
      "op": "frame_dig -7",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4657": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4659": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4661": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4663": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4666": {
      "op": "frame_dig -4",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4668": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4670": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4672": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4673": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4676": {
      "op": "itxn_begin"
    },
    "4677": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4679": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%0#0",
        "val_app#0 (copy)"
      ]
    },
    "4681": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4683": {
      "op": "frame_dig -6",
      "stack_out": [
        "tmp%0#0",
        "del_app#0 (copy)"
      ]
    },
    "4685": {
      "op": "itxn_field Applications",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4687": {
      "op": "pushbytes 0x39908de9 // method \"keys_submit(address,application,(uint64,uint64,uint64,byte[32],byte[32],byte[64],address))(address,byte[100])\"",
      "defined_out": [
        "Method(keys_submit(address,application,(uint64,uint64,uint64,byte[32],byte[32],byte[64],address))(address,byte[100]))",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "Method(keys_submit(address,application,(uint64,uint64,uint64,byte[32],byte[32],byte[64],address))(address,byte[100]))"
      ]
    },
    "4693": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "4695": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4697": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4698": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4700": {
      "op": "frame_dig -1",
      "defined_out": [
        "key_reg_txn_info#0 (copy)"
      ],
      "stack_out": [
        "key_reg_txn_info#0 (copy)"
      ]
    },
    "4702": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4704": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4705": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4707": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4708": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4710": {
      "op": "itxn_submit"
    },
    "4711": {
      "op": "itxn LastLog"
    },
    "4713": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4714": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "4717": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "4718": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "4721": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0",
        "0x151f7c75"
      ]
    },
    "4722": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "4723": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "4724": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "4725": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%4#0"
      ]
    },
    "4728": {
      "op": "swap",
      "stack_out": [
        "tmp%4#0",
        "res#0"
      ]
    },
    "4729": {
      "op": "extract 32 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "4732": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "4735": {
      "retsub": true,
      "op": "retsub"
    },
    "4736": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.breach_limits",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "breach_limits",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "4739": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4741": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4743": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4745": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4747": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4750": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4752": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4754": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4756": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4757": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4760": {
      "op": "itxn_begin"
    },
    "4761": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "4763": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4765": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "4767": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "4769": {
      "op": "pushbytes 0x49dfee1a // method \"breach_limits(application)(bool,(uint64,uint64,uint64),address,byte[100])\"",
      "defined_out": [
        "Method(breach_limits(application)(bool,(uint64,uint64,uint64),address,byte[100]))"
      ],
      "stack_out": [
        "Method(breach_limits(application)(bool,(uint64,uint64,uint64),address,byte[100]))"
      ]
    },
    "4775": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4777": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4778": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4780": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4781": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4783": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4784": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4786": {
      "op": "itxn_submit"
    },
    "4787": {
      "op": "itxn LastLog"
    },
    "4789": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4790": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "4793": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "4794": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "4797": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "4798": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "4799": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "4800": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "4801": {
      "op": "extract 25 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "4804": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "res#0"
      ]
    },
    "4805": {
      "op": "extract 57 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "4808": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "4811": {
      "retsub": true,
      "op": "retsub"
    },
    "4812": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.breach_pay",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "breach_pay",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "4815": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4817": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4819": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4821": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4823": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4826": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4828": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4830": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4832": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4833": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4836": {
      "op": "itxn_begin"
    },
    "4837": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "4839": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4841": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "4843": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "4845": {
      "op": "pushbytes 0xf9b68e32 // method \"breach_pay(application)(address,byte[100])\"",
      "defined_out": [
        "Method(breach_pay(application)(address,byte[100]))"
      ],
      "stack_out": [
        "Method(breach_pay(application)(address,byte[100]))"
      ]
    },
    "4851": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4853": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4854": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4856": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4857": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4859": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4860": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4862": {
      "op": "itxn_submit"
    },
    "4863": {
      "op": "itxn LastLog"
    },
    "4865": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4866": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "4869": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "4870": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "4873": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "4874": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "4875": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "4876": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "4877": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "4880": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "res#0"
      ]
    },
    "4881": {
      "op": "extract 32 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "4884": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "4887": {
      "retsub": true,
      "op": "retsub"
    },
    "4888": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.breach_suspended",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "breach_suspended",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "4891": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4893": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4895": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4897": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4899": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4902": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4904": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4906": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4908": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4909": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4912": {
      "op": "itxn_begin"
    },
    "4913": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "4915": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4917": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "4919": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "4921": {
      "op": "pushbytes 0xf811fcb7 // method \"breach_suspended(application)((uint64,uint64,uint64),address,byte[100])\"",
      "defined_out": [
        "Method(breach_suspended(application)((uint64,uint64,uint64),address,byte[100]))"
      ],
      "stack_out": [
        "Method(breach_suspended(application)((uint64,uint64,uint64),address,byte[100]))"
      ]
    },
    "4927": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4929": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "4930": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "4932": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "4933": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "4935": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "4936": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "4938": {
      "op": "itxn_submit"
    },
    "4939": {
      "op": "itxn LastLog"
    },
    "4941": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "4942": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "4945": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "4946": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "4949": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "4950": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "4951": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "4952": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "4953": {
      "op": "extract 24 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "4956": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "res#0"
      ]
    },
    "4957": {
      "op": "extract 56 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "4960": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "4963": {
      "retsub": true,
      "op": "retsub"
    },
    "4964": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.contract_claim",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "contract_claim",
      "stack_in": [],
      "op": "proto 6 1"
    },
    "4967": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "4969": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "4971": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "4973": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "4975": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4978": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "4980": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "4982": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "4984": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "4985": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "4988": {
      "op": "itxn_begin"
    },
    "4989": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "4991": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "4993": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "4995": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "4997": {
      "op": "pushbytes 0xace03631 // method \"contract_claim(application)(uint64,uint64,uint64)\"",
      "defined_out": [
        "Method(contract_claim(application)(uint64,uint64,uint64))"
      ],
      "stack_out": [
        "Method(contract_claim(application)(uint64,uint64,uint64))"
      ]
    },
    "5003": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5005": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "5006": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5008": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5009": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5011": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5012": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5014": {
      "op": "itxn_submit"
    },
    "5015": {
      "op": "itxn LastLog"
    },
    "5017": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5018": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "5021": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "5022": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "5025": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5026": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "5027": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "5028": {
      "retsub": true,
      "op": "retsub"
    },
    "5029": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.contract_expired",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "contract_expired",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "5032": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "5034": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "5036": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "5038": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "5040": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "5043": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "5045": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "5047": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "5049": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "5050": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "5053": {
      "op": "itxn_begin"
    },
    "5054": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_app#0 (copy)"
      ]
    },
    "5056": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "5058": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_app#0 (copy)"
      ]
    },
    "5060": {
      "op": "itxn_field Applications",
      "stack_out": []
    },
    "5062": {
      "op": "pushbytes 0x458ccb0c // method \"contract_expired(application)(address,byte[100])\"",
      "defined_out": [
        "Method(contract_expired(application)(address,byte[100]))"
      ],
      "stack_out": [
        "Method(contract_expired(application)(address,byte[100]))"
      ]
    },
    "5068": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5070": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "5071": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5073": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5074": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5076": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5077": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5079": {
      "op": "itxn_submit"
    },
    "5080": {
      "op": "itxn LastLog"
    },
    "5082": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5083": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "5086": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "5087": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0"
      ]
    },
    "5090": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5091": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%2#0"
      ]
    },
    "5092": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "5093": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "5094": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "5097": {
      "op": "swap",
      "stack_out": [
        "tmp%3#0",
        "res#0"
      ]
    },
    "5098": {
      "op": "extract 32 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "5101": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "5104": {
      "retsub": true,
      "op": "retsub"
    },
    "5105": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.contract_withdraw",
      "params": {
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "contract_withdraw",
      "stack_in": [],
      "op": "proto 5 0"
    },
    "5108": {
      "op": "txn Sender"
    },
    "5110": {
      "op": "dup"
    },
    "5111": {
      "op": "frame_dig -5"
    },
    "5113": {
      "op": "frame_dig -4"
    },
    "5115": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "5117": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5120": {
      "op": "frame_dig -3",
      "defined_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ]
    },
    "5122": {
      "op": "frame_dig -2",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "5124": {
      "op": "frame_dig -1",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "5126": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "5127": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5130": {
      "op": "itxn_begin"
    },
    "5131": {
      "op": "frame_dig -2",
      "stack_out": [
        "del_manager#0",
        "val_app#0 (copy)"
      ]
    },
    "5133": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5135": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_manager#0",
        "del_app#0 (copy)"
      ]
    },
    "5137": {
      "op": "itxn_field Applications",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5139": {
      "op": "pushbytes 0xc68d2db5 // method \"contract_withdraw(address,application)void\"",
      "defined_out": [
        "Method(contract_withdraw(address,application)void)",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "Method(contract_withdraw(address,application)void)"
      ]
    },
    "5145": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5147": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5149": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "5150": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5152": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5153": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5155": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5156": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5158": {
      "op": "itxn_submit"
    },
    "5159": {
      "retsub": true,
      "op": "retsub"
    },
    "5160": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.contract_delete",
      "params": {
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "contract_delete",
      "stack_in": [],
      "op": "proto 5 1"
    },
    "5163": {
      "op": "txn Sender"
    },
    "5165": {
      "op": "dup"
    },
    "5166": {
      "op": "frame_dig -5"
    },
    "5168": {
      "op": "frame_dig -4"
    },
    "5170": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "5172": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5175": {
      "op": "frame_dig -3",
      "defined_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)"
      ]
    },
    "5177": {
      "op": "frame_dig -2",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "5179": {
      "op": "frame_dig -1",
      "defined_out": [
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "5181": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "del_manager#0",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0",
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "5182": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5185": {
      "op": "itxn_begin"
    },
    "5186": {
      "op": "frame_dig -2",
      "stack_out": [
        "del_manager#0",
        "val_app#0 (copy)"
      ]
    },
    "5188": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5190": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_manager#0",
        "del_app#0 (copy)"
      ]
    },
    "5192": {
      "op": "itxn_field Applications",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5194": {
      "op": "pushbytes 0x0bf7d855 // method \"contract_delete(address,application)(uint64,uint64)\"",
      "defined_out": [
        "Method(contract_delete(address,application)(uint64,uint64))",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "Method(contract_delete(address,application)(uint64,uint64))"
      ]
    },
    "5200": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5202": {
      "op": "dup",
      "stack_out": [
        "del_manager#0",
        "del_manager#0 (copy)"
      ]
    },
    "5203": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5205": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "0x01"
      ]
    },
    "5206": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5208": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "appl"
      ]
    },
    "5209": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5211": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "0"
      ]
    },
    "5212": {
      "op": "itxn_field Fee",
      "stack_out": [
        "del_manager#0"
      ]
    },
    "5214": {
      "op": "itxn_submit"
    },
    "5215": {
      "op": "itxn LastLog"
    },
    "5217": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "del_manager#0"
      ],
      "stack_out": [
        "del_manager#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5218": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "del_manager#0",
        "remaining_balance#0"
      ],
      "stack_out": [
        "del_manager#0",
        "awst_tmp%0#0",
        "remaining_balance#0"
      ]
    },
    "5221": {
      "op": "swap",
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0",
        "awst_tmp%0#0"
      ]
    },
    "5222": {
      "op": "extract 0 4",
      "defined_out": [
        "del_manager#0",
        "remaining_balance#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0",
        "tmp%1#0"
      ]
    },
    "5225": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "del_manager#0",
        "remaining_balance#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "5226": {
      "op": "==",
      "defined_out": [
        "del_manager#0",
        "remaining_balance#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0",
        "tmp%2#0"
      ]
    },
    "5227": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0"
      ]
    },
    "5228": {
      "op": "frame_dig -5",
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0",
        "del_app#0 (copy)"
      ]
    },
    "5230": {
      "op": "itob",
      "defined_out": [
        "del_manager#0",
        "remaining_balance#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "del_manager#0",
        "remaining_balance#0",
        "val_as_bytes%0#0"
      ]
    },
    "5231": {
      "op": "uncover 2",
      "stack_out": [
        "remaining_balance#0",
        "val_as_bytes%0#0",
        "del_manager#0"
      ]
    },
    "5233": {
      "op": "swap",
      "stack_out": [
        "remaining_balance#0",
        "del_manager#0",
        "val_as_bytes%0#0"
      ]
    },
    "5234": {
      "op": "frame_dig -4",
      "stack_out": [
        "remaining_balance#0",
        "del_manager#0",
        "val_as_bytes%0#0",
        "del_app_idx#0 (copy)"
      ]
    },
    "5236": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._remove_user_app",
      "op": "callsub _remove_user_app",
      "stack_out": [
        "remaining_balance#0"
      ]
    },
    "5239": {
      "retsub": true,
      "op": "retsub"
    },
    "5240": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.contract_report_expiry_soon",
      "params": {
        "del_manager#0": "bytes",
        "del_app#0": "uint64",
        "del_app_idx#0": "uint64",
        "val_owner#0": "bytes",
        "val_app#0": "uint64",
        "val_app_idx#0": "uint64"
      },
      "block": "contract_report_expiry_soon",
      "stack_in": [],
      "op": "proto 6 0"
    },
    "5243": {
      "op": "frame_dig -6",
      "defined_out": [
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)"
      ]
    },
    "5245": {
      "op": "frame_dig -5",
      "defined_out": [
        "del_app#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)"
      ]
    },
    "5247": {
      "op": "frame_dig -4",
      "defined_out": [
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)"
      ]
    },
    "5249": {
      "op": "bytec 5 // 0x64656c5f",
      "defined_out": [
        "0x64656c5f",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "del_manager#0 (copy)"
      ],
      "stack_out": [
        "del_manager#0 (copy)",
        "del_app#0 (copy)",
        "del_app_idx#0 (copy)",
        "0x64656c5f"
      ]
    },
    "5251": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "5254": {
      "op": "frame_dig -3",
      "defined_out": [
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)"
      ]
    },
    "5256": {
      "op": "frame_dig -2",
      "defined_out": [
        "val_app#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)"
      ]
    },
    "5258": {
      "op": "frame_dig -1",
      "defined_out": [
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)"
      ]
    },
    "5260": {
      "op": "bytec_0 // 0x76616c5f",
      "defined_out": [
        "0x76616c5f",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "val_owner#0 (copy)"
      ],
      "stack_out": [
        "val_owner#0 (copy)",
        "val_app#0 (copy)",
        "val_app_idx#0 (copy)",
        "0x76616c5f"
      ]
    },
    "5261": {
      "callsub": "smart_contracts.noticeboard.contract.Noticeboard._assert_user_and_app",
      "op": "callsub _assert_user_and_app",
      "stack_out": []
    },
    "5264": {
      "op": "itxn_begin"
    },
    "5265": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "5266": {
      "op": "bytec 11 // \"noticeboard_terms_timing\"",
      "defined_out": [
        "\"noticeboard_terms_timing\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"noticeboard_terms_timing\""
      ]
    },
    "5268": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5269": {
      "error": "check self.noticeboard_terms_timing exists",
      "op": "assert // check self.noticeboard_terms_timing exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "5270": {
      "op": "extract 16 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5273": {
      "op": "btoi",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "5274": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "5275": {
      "op": "intc_0 // 0",
      "stack_out": [
        "val_as_bytes%0#0",
        "0"
      ]
    },
    "5276": {
      "op": "bytec 11 // \"noticeboard_terms_timing\"",
      "stack_out": [
        "val_as_bytes%0#0",
        "0",
        "\"noticeboard_terms_timing\""
      ]
    },
    "5278": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "5279": {
      "error": "check self.noticeboard_terms_timing exists",
      "op": "assert // check self.noticeboard_terms_timing exists",
      "stack_out": [
        "val_as_bytes%0#0",
        "maybe_value%1#0"
      ]
    },
    "5280": {
      "op": "extract 24 8 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "tmp%1#0"
      ]
    },
    "5283": {
      "op": "btoi",
      "defined_out": [
        "to_encode%1#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "to_encode%1#0"
      ]
    },
    "5284": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "5285": {
      "op": "frame_dig -2",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_app#0 (copy)"
      ]
    },
    "5287": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "5289": {
      "op": "frame_dig -5",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "del_app#0 (copy)"
      ]
    },
    "5291": {
      "op": "itxn_field Applications",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "5293": {
      "op": "pushbytes 0x169361b9 // method \"contract_report_expiry_soon(uint64,uint64,application)(address,byte[100])\"",
      "defined_out": [
        "Method(contract_report_expiry_soon(uint64,uint64,application)(address,byte[100]))",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "Method(contract_report_expiry_soon(uint64,uint64,application)(address,byte[100]))"
      ]
    },
    "5299": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "5301": {
      "op": "swap",
      "stack_out": [
        "val_as_bytes%1#0",
        "val_as_bytes%0#0"
      ]
    },
    "5302": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "5304": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5306": {
      "op": "bytec_3 // 0x01",
      "defined_out": [
        "0x01"
      ],
      "stack_out": [
        "0x01"
      ]
    },
    "5307": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "5309": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "5310": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "5312": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "5313": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "5315": {
      "op": "itxn_submit"
    },
    "5316": {
      "op": "itxn LastLog"
    },
    "5318": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "5319": {
      "op": "extract 4 0",
      "defined_out": [
        "awst_tmp%0#0",
        "res#0"
      ],
      "stack_out": [
        "awst_tmp%0#0",
        "res#0"
      ]
    },
    "5322": {
      "op": "swap",
      "stack_out": [
        "res#0",
        "awst_tmp%0#0"
      ]
    },
    "5323": {
      "op": "extract 0 4",
      "defined_out": [
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0"
      ]
    },
    "5326": {
      "op": "bytec_1 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "res#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%3#0",
        "0x151f7c75"
      ]
    },
    "5327": {
      "op": "==",
      "defined_out": [
        "res#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%4#0"
      ]
    },
    "5328": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "res#0"
      ]
    },
    "5329": {
      "op": "dup",
      "defined_out": [
        "res#0",
        "res#0 (copy)"
      ],
      "stack_out": [
        "res#0",
        "res#0 (copy)"
      ]
    },
    "5330": {
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "res#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "res#0",
        "tmp%5#0"
      ]
    },
    "5333": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "res#0"
      ]
    },
    "5334": {
      "op": "extract 32 100 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "5337": {
      "callsub": "smart_contracts.helpers.common.try_send_note",
      "op": "callsub try_send_note",
      "stack_out": []
    },
    "5340": {
      "retsub": true,
      "op": "retsub"
    },
    "5341": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.get_noticeboard_asset",
      "params": {
        "asset_id#0": "uint64"
      },
      "block": "get_noticeboard_asset",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5344": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset_id#0 (copy)"
      ],
      "stack_out": [
        "asset_id#0 (copy)"
      ]
    },
    "5346": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "5347": {
      "op": "bytec 16 // 0x61737365745f",
      "defined_out": [
        "0x61737365745f",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0x61737365745f"
      ]
    },
    "5349": {
      "op": "swap",
      "stack_out": [
        "0x61737365745f",
        "tmp%0#0"
      ]
    },
    "5350": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "5351": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5352": {
      "error": "check self.assets entry exists",
      "op": "assert // check self.assets entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "5353": {
      "retsub": true,
      "op": "retsub"
    },
    "5354": {
      "subroutine": "smart_contracts.noticeboard.contract.Noticeboard.get_noticeboard_user",
      "params": {
        "user#0": "bytes"
      },
      "block": "get_noticeboard_user",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "5357": {
      "op": "frame_dig -1",
      "defined_out": [
        "user#0 (copy)"
      ],
      "stack_out": [
        "user#0 (copy)"
      ]
    },
    "5359": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "5360": {
      "error": "check self.users entry exists",
      "op": "assert // check self.users entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "5361": {
      "retsub": true,
      "op": "retsub"
    }
  }
}